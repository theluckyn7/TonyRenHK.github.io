<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>呆呆&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tonyrenhk.github.io/"/>
  <updated>2019-04-11T09:59:18.477Z</updated>
  <id>http://tonyrenhk.github.io/</id>
  
  <author>
    <name>呆呆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Trailhead 相关资料和答案</title>
    <link href="http://tonyrenhk.github.io/2019/09/01/2019-09-01-Trailhead/"/>
    <id>http://tonyrenhk.github.io/2019/09/01/2019-09-01-Trailhead/</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>【Trailhead】App Customization Lite答案<br>【Trailhead】Account Data Strategies答案<br>【Trailhead】Artificial Intelligence Basics 答案<br>【Trailhead】API Basics答案<br><a id="more"></a></p><h1 id="【Trailhead】App-Customization-Lite答案"><a href="#【Trailhead】App-Customization-Lite答案" class="headerlink" title="【Trailhead】App Customization Lite答案"></a>【Trailhead】App Customization Lite答案</h1><p><a href="https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization</a></p><h2 id="Customize-the-User-Interface"><a href="#Customize-the-User-Interface" class="headerlink" title="Customize the User Interface"></a>Customize the User Interface</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_layouts_ui" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_layouts_ui</a></p><p><a href="https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_actions" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_actions</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-0797f7c0f0f63e1a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><h2 id="Understand-How-Actions-Work-in-Lightning-Experience"><a href="#Understand-How-Actions-Work-in-Lightning-Experience" class="headerlink" title="Understand How Actions Work in Lightning Experience"></a>Understand How Actions Work in Lightning Experience</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_actions" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_actions</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-90fbf343215a60c9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-8644c898575f10e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h1 id="【Trailhead】Account-Data-Strategies答案"><a href="#【Trailhead】Account-Data-Strategies答案" class="headerlink" title="【Trailhead】Account Data Strategies答案"></a>【Trailhead】Account Data Strategies答案</h1><h2 id="Account-Data-Strategies"><a href="#Account-Data-Strategies" class="headerlink" title="Account Data Strategies"></a>Account Data Strategies</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/account-data-strategies" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/account-data-strategies</a></p><h2 id="Use-Data-to-Get-a-360-Degree-View-of-Your-Customers"><a href="#Use-Data-to-Get-a-360-Degree-View-of-Your-Customers" class="headerlink" title="Use Data to Get a 360-Degree View of Your Customers"></a>Use Data to Get a 360-Degree View of Your Customers</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/account-data-strategies/use-data-to-get-a-360-degree-view-of-your-customers" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/account-data-strategies/use-data-to-get-a-360-degree-view-of-your-customers</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-af7ff5851d442b99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="答案"></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-4c979566078034ab?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><h2 id="Develop-a-Data-Backed-Account-Management-Strategy"><a href="#Develop-a-Data-Backed-Account-Management-Strategy" class="headerlink" title="Develop a Data-Backed Account Management Strategy"></a>Develop a Data-Backed Account Management Strategy</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/account-data-strategies/develop-a-data-backed-account-management-strategy" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/account-data-strategies/develop-a-data-backed-account-management-strategy</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-2629fa26920bfe7d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="答案"> </p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-d38316e48b8bd0e9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>#【Trailhead】Artificial Intelligence Basics 答案</p><h2 id="Artificial-Intelligence-Basics"><a href="#Artificial-Intelligence-Basics" class="headerlink" title="Artificial Intelligence Basics"></a>Artificial Intelligence Basics</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/ai_basics" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/ai_basics</a></p><h2 id="Learn-AI-Fundamentals"><a href="#Learn-AI-Fundamentals" class="headerlink" title="Learn AI Fundamentals"></a>Learn AI Fundamentals</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/ai_basics/ai_basics_getstarted" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/ai_basics/ai_basics_getstarted</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-453b839f2f29514a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-7e32ccddeae7d055?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><h2 id="Discover-the-Science-Behind-AI"><a href="#Discover-the-Science-Behind-AI" class="headerlink" title="Discover the Science Behind AI"></a>Discover the Science Behind AI</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/ai_basics/ai_basics_discover" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/ai_basics/ai_basics_discover</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-c69ea8857918a0a2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-15a84f02fc9a9ef2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><h1 id="【Trailhead】API-Basics答案"><a href="#【Trailhead】API-Basics答案" class="headerlink" title="【Trailhead】API Basics答案"></a>【Trailhead】API Basics答案</h1><h2 id="API-Basics"><a href="#API-Basics" class="headerlink" title="API Basics"></a>API Basics</h2><p>今天入门学习API Basics，相关链接如下：</p><p><a href="https://trailhead.salesforce.com/content/learn/modules/pw-api-basics" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/pw-api-basics</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-2f85f12e669e6040?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="总图"> </p><h1 id="Make-APIs-for-You-and-Me"><a href="#Make-APIs-for-You-and-Me" class="headerlink" title="Make APIs for You and Me"></a>Make APIs for You and Me</h1><p><a href="https://trailhead.salesforce.com/content/learn/modules/pw-api-basics/make-apis-for-you-and-me" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/pw-api-basics/make-apis-for-you-and-me</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-7b494ec678ab4248?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><h1 id="Learn-the-Benefits-of-APIs"><a href="#Learn-the-Benefits-of-APIs" class="headerlink" title="Learn the Benefits of APIs"></a>Learn the Benefits of APIs</h1><p><a href="https://trailhead.salesforce.com/content/learn/modules/pw-api-basics/learn-the-benefits-of-apis" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/pw-api-basics/learn-the-benefits-of-apis</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-5eb123f997657fc1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><h1 id="Put-the-Web-in-Web-API"><a href="#Put-the-Web-in-Web-API" class="headerlink" title="Put the Web in Web API"></a>Put the Web in Web API</h1><p><a href="https://trailhead.salesforce.com/content/learn/modules/pw-api-basics/put-the-web-in-web-api" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/pw-api-basics/put-the-web-in-web-api</a></p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-b07b90748dc4d259?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p><p><img src="http://upload-images.jianshu.io/upload_images/6156917-e2d0f7b4ba353134?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【Trailhead】App Customization Lite答案&lt;br&gt;【Trailhead】Account Data Strategies答案&lt;br&gt;【Trailhead】Artificial Intelligence Basics 答案&lt;br&gt;【Trailhead】API Basics答案&lt;br&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Trailhead" scheme="http://tonyrenhk.github.io/tags/Trailhead/"/>
    
  </entry>
  
  <entry>
    <title>Library NPM 软件安装包</title>
    <link href="http://tonyrenhk.github.io/2019/04/02/2019-04-02-LibraryNPM/"/>
    <id>http://tonyrenhk.github.io/2019/04/02/2019-04-02-LibraryNPM/</id>
    <published>2019-04-01T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>软件安装包<br><a id="more"></a></p><h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><p>Reference:<br> <a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a><br> <a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener">https://xaoxuu.com/wiki/material-x/</a><br> <a href="https://github.com/xaoxuu/hexo-theme-material-x" target="_blank" rel="noopener">https://github.com/xaoxuu/hexo-theme-material-x</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"> npm install hexo --save</span><br><span class="line"></span><br><span class="line"> npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"> npm install hexo-deployer-heroku --save</span><br><span class="line"></span><br><span class="line">npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content hexo-recommended-posts</span><br><span class="line"></span><br><span class="line">npm audit fix --force</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">git clone https://tonyrenhk:password@github.com/TonyRenHK/hexo-theme-material-x.git themes/material-x</span><br></pre></td></tr></table></figure><h1 id="jSForce-deployment"><a href="#jSForce-deployment" class="headerlink" title="jSForce deployment"></a>jSForce deployment</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jsforce-metadata-tools -g</span><br></pre></td></tr></table></figure><h1 id="Heroku"><a href="#Heroku" class="headerlink" title="Heroku"></a>Heroku</h1><p>Reference:<br><a href="https://devcenter.heroku.com/articles/git#http-git-authentication" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/git#http-git-authentication</a></p><p><a href="https://devcenter.heroku.com/articles/heroku-cli" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/heroku-cli</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install -g heroku</span><br><span class="line"></span><br><span class="line">heroku login -i</span><br><span class="line">heroku: Enter your login credentials</span><br><span class="line">Email: me@example.com</span><br><span class="line">Password: ***************</span><br><span class="line">Two-factor code: ********</span><br><span class="line">Logged in as me@heroku.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软件安装包&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://tonyrenhk.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://tonyrenhk.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Quip相关资料</title>
    <link href="http://tonyrenhk.github.io/2019/03/18/2019-03-18-Quip/"/>
    <id>http://tonyrenhk.github.io/2019/03/18/2019-03-18-Quip/</id>
    <published>2019-03-17T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>【Trailhead】如何在Quip中打开Salesforce报表？</p><a id="more"></a><p>今天带大家学习如何把Salesforce report在Quip中打开，其好处可以通过Quip的Spreadsheet很方便地实现数据编辑，并且添加相关公式。同时可以实现数据实时地传输到Quip中。</p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-84ccad96b40183f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>#注册Quip<br>首先需要注册一个Quip。相关链接为：<a href="https://quip.com/account/login" target="_blank" rel="noopener">https://quip.com/account/login</a></p><p>#安装官方的安装包<br>需要安装光的安装包Quip Connect for Salesforce App到您的Org里面。安装链接如下：<br><a href="https://appexchange.salesforce.com/listingDetail?listingId=a0N3A00000EFoIbUAL" target="_blank" rel="noopener">https://appexchange.salesforce.com/listingDetail?listingId=a0N3A00000EFoIbUAL</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-2054addd9c213c86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这里可以选择需要安装生成环境还是沙盒环境"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-e081340cb9e05693.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这里选择安装给所有用户"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-289362cec0f39a02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装成功"></p><p>#新建报表<br>之后需要新建报表，点击Tab:Reports,选择您需要的对象，并设置一些Filters ，然后保存。</p><p>#在Quip中打开Salesforce报表<br>找到Tab： Open Reports in Quip，选择您需要打开的报表，点击’Open in Quip.’。<br><img src="https://upload-images.jianshu.io/upload_images/6156917-ce8737f9922193c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在Quip中打开Salesforce报表"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-8dfe98cc8447c373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这里可以选择实时数据或者静态数据"><br>所谓的静态数据，也就是当时使用者点击’Open in Quip.’所生成的报表的数据。如果之后报表里面又有新加的数据，是不会反映在之后的Quip文档中。选择Spreadsheet，之后的Quip文档可以修改，如果选择Live Data，之后的Quip文档中的报表部分是只读格式。</p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-96b118df876a437a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="同时可以选择Live Data，也就是实时数据，在报表中打开"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-70f43c45785de1b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="同时可以添加对应的Filter"></p><p>推荐阅读如下Trailhead文章：Quick Start: Quip and Salesforce Integration</p><p><a href="https://trailhead.salesforce.com/content/learn/projects/quick-start-quip-and-salesforce-integration" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/quick-start-quip-and-salesforce-integration</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-d9da0bc51a361396.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-925399e20ca5f428.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【Trailhead】如何在Quip中打开Salesforce报表？&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Quip" scheme="http://tonyrenhk.github.io/tags/Quip/"/>
    
  </entry>
  
  <entry>
    <title>Community Cloud相关资料</title>
    <link href="http://tonyrenhk.github.io/2019/03/13/2019-03-13-Community-Cloud/"/>
    <id>http://tonyrenhk.github.io/2019/03/13/2019-03-13-Community-Cloud/</id>
    <published>2019-03-12T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>Community Cloud相关资料</p><a id="more"></a><h1 id="Community-Cloud-Cert-Fast-Path"><a href="#Community-Cloud-Cert-Fast-Path" class="headerlink" title="Community Cloud Cert Fast Path"></a>Community Cloud Cert Fast Path</h1><p>Recordings and slide decks :<br>ACCESS CODE for the videos : CCFastPath</p><p><em>February 2019</em></p><ul><li>Kick off + Communities basics (11/02/2019) : <a href="http://salesforce.vidyard.com/watch/YtU5JyhfhAyVhZHf1TgqAt?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NR6P/t89HBdlvjhDBVf7_K2R.KfwUosCojbD59FaWqGzQPIE" target="_blank" rel="noopener">slide deck</a></li><li>Community builder (12/02/2019) : <a href="http://salesforce.vidyard.com/watch/kyvqGnggUK4ACntw7aPPHc?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NRb3/ameImy7tiHsp18QpjQE7MDJoiGbNbQjk8i4ls2AJRK0" target="_blank" rel="noopener">slide deck</a></li><li>Sharing and visibility (13/02/2019) : <a href="http://salesforce.vidyard.com/watch/h8vUzDon9uxpXGr7Rqgk1C?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NRvS/dSlCxoVmpOX9OP1M6RjC2JM.a3nLqJYspG4SlsbOKX0" target="_blank" rel="noopener">slide deck</a></li><li>Licenses and user provisioning (14/02/2019) : <a href="http://salesforce.vidyard.com/watch/TX1Tm3jMJy2WQnZKK9SNMu?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NSSv/8WaJRUX2EJ10q58KQCGu6m5Xd98Y2X09sZIY0pjcRSI" target="_blank" rel="noopener">slide deck</a></li><li>Lightning Bolts and Content (15/02/2019) : <a href="http://salesforce.vidyard.com/watch/ViLWPvQuqHJarWVu1CDhEQ?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NSbT/ADgViJvvpmWzYQM0cLATh0A0s.k6wcttJsq7TspNe3Y" target="_blank" rel="noopener">slide deck</a></li></ul><p><em>March 2019</em></p><ul><li>Kick off + Communities basics (06/03/2019) : <a href="http://salesforce.vidyard.com/watch/EW6JVa8gB2kEb3iP6iM7RM?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NXsF/RK3CrBaTsQsIZQFQ8jv1tDquulJf.7VR.h255sfDqsI" target="_blank" rel="noopener">slide deck</a></li><li>Community builder (07/03/2019) : <a href="http://salesforce.vidyard.com/watch/YibqNwEEiC4AC9Rku82tmJ?" target="_blank" rel="noopener">recording</a> / <a href="https://org62.my.salesforce.com/sfc/p/000000000062/a/0M000000NXvi/gcZcgGTgvFknHU4XA_r4wyCsqJftAX8qnXubPJjgbcI" target="_blank" rel="noopener">slide deck</a></li><li>Sharing and visibility (19/03/2019) : recording / slide deck</li><li>Licenses and user provisioning (20/03/2019) : recording / slide deck</li><li>Lightning Bolts and Content (22/03/2019) : recording / slide deck</li></ul><h1 id="Trailhead"><a href="#Trailhead" class="headerlink" title="Trailhead"></a>Trailhead</h1><p><a href="https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_intro_to_community_cloud" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_intro_to_community_cloud</a></p><h1 id="【Trailhead】Community-Cloud-答案"><a href="#【Trailhead】Community-Cloud-答案" class="headerlink" title="【Trailhead】Community Cloud 答案"></a>【Trailhead】Community Cloud 答案</h1><h1 id="Community-Cloud-Basics"><a href="#Community-Cloud-Basics" class="headerlink" title="Community Cloud Basics"></a>Community Cloud Basics</h1><p>(<a href="https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics</a>)</p><h2 id="Get-Started-with-Community-Cloud"><a href="#Get-Started-with-Community-Cloud" class="headerlink" title="Get Started with Community Cloud"></a>Get Started with Community Cloud</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_intro_to_community_cloud" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_intro_to_community_cloud</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-0bf21b4932004ed0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-097073048a814539.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-0905a062356f9368.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="Engage-with-Your-Customers"><a href="#Engage-with-Your-Customers" class="headerlink" title="Engage with Your Customers"></a>Engage with Your Customers</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_setting_goals_for_community" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_setting_goals_for_community</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-a6274d58784448d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-5fde4973c1d06e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-9de39ef783a03770.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="Engage-with-Your-Partners"><a href="#Engage-with-Your-Partners" class="headerlink" title="Engage with Your Partners"></a>Engage with Your Partners</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_partner_community" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_partner_community</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-04ae8778b43302bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-c0de679303c632dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-9389fa36368ca9bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="Engage-with-Your-Employees"><a href="#Engage-with-Your-Employees" class="headerlink" title="Engage with Your Employees"></a>Engage with Your Employees</h2><p><a href="https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_employee_community" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_employee_community</a></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-6828b0e16d6a0e43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-bfdd46b9a606b782.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/6156917-6ff94b7a93dd5f7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h1 id="其他资源："><a href="#其他资源：" class="headerlink" title="其他资源："></a>其他资源：</h1><p>Setup Salesforce Community (Part 1) - YouTube : <a href="https://www.youtube.com/watch?v=bowKDMQOzHs" target="_blank" rel="noopener">https://www.youtube.com/watch?v=bowKDMQOzHs</a></p><p>An Introduction to Lightning Communities &amp; Community Builder - YouTube : <a href="https://www.youtube.com/watch?v=mwdgueihnXA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=mwdgueihnXA</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Community Cloud相关资料&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Community Cloud" scheme="http://tonyrenhk.github.io/tags/Community-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>利用LWC新建一个Bear-Tracking App</title>
    <link href="http://tonyrenhk.github.io/2019/03/12/2019-03-12-BuildABear-Tracking-App-withLWC/"/>
    <id>http://tonyrenhk.github.io/2019/03/12/2019-03-12-BuildABear-Tracking-App-withLWC/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>Build a Bear-Tracking App with Lightning Web Components</p><a id="more"></a><p>项目为Build a Bear-Tracking App with Lightning Web Components，相关链接为：</p><p><a href="https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps</a></p><h1 id="Create-a-Hello-World-Lightning-Web-Component"><a href="#Create-a-Hello-World-Lightning-Web-Component" class="headerlink" title="Create a Hello World Lightning Web Component"></a>Create a Hello World Lightning Web Component</h1><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/LWC/lwc-1.jpg" alt="image"></p><h1 id="Work-with-a-Single-Record"><a href="#Work-with-a-Single-Record" class="headerlink" title="Work with a Single Record"></a>Work with a Single Record</h1><p>相关链接为：<a href="https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/single-record" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/single-record</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/LWC/lwc-2.jpg" alt="image"></p><h1 id="Work-with-Lists-of-Records"><a href="#Work-with-Lists-of-Records" class="headerlink" title="Work with Lists of Records"></a>Work with Lists of Records</h1><p>相关链接为：<a href="https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/record-list" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/record-list</a><br><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/LWC/lwc-3.jpg" alt="image"></p><h1 id="Create-a-Child-Component-and-Interact-with-It"><a href="#Create-a-Child-Component-and-Interact-with-It" class="headerlink" title="Create a Child Component and Interact with It"></a>Create a Child Component and Interact with It</h1><p>相关链接为：<a href="https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/composition" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/composition</a></p><p>code:<br><a href="https://gitlab.com/renchk/create-a-child-component-and-interact-with-it2" target="_blank" rel="noopener">https://gitlab.com/renchk/create-a-child-component-and-interact-with-it2</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/LWC/lwc-4.jpg" alt="image"></p><h1 id="Communicate-with-Components-Across-an-App"><a href="#Communicate-with-Components-Across-an-App" class="headerlink" title="Communicate with Components Across an App"></a>Communicate with Components Across an App</h1><p>相关链接为：<a href="https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/inter-comp-events" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/inter-comp-events</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/LWC/lwc-5.jpg" alt="image"></p><p>全剧终：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/LWC/lwc-6.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Build a Bear-Tracking App with Lightning Web Components&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="LWC" scheme="http://tonyrenhk.github.io/tags/LWC/"/>
    
      <category term="Lightning Web Components" scheme="http://tonyrenhk.github.io/tags/Lightning-Web-Components/"/>
    
  </entry>
  
  <entry>
    <title>Salesforce入门资源</title>
    <link href="http://tonyrenhk.github.io/2019/03/07/2019-03-07-Get_Start_SFDC/"/>
    <id>http://tonyrenhk.github.io/2019/03/07/2019-03-07-Get_Start_SFDC/</id>
    <published>2019-03-06T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>Hands-on introduction to Salesforce</p><a id="more"></a><p>For those who is interested in Salesforce development, or who needs to take part.</p><p>There are quite a lots of online self-learning resources provided by SFDC, they are available at <a href="https://trailhead.salesforce.com" target="_blank" rel="noopener">https://trailhead.salesforce.com</a><br>I pick some “must have” modules that you can start with and shouldn’t miss them.</p><ol><li><p>Learn Salesforce with Trailhead<br>Register a “trailhead” playground for tutorials<br>(You can use your personal email address to register, as you can complete every tutorial and badge yourself)<br><a href="https://trailhead.salesforce.com/trails/learn_salesforce_with_trailhead" target="_blank" rel="noopener">https://trailhead.salesforce.com/trails/learn_salesforce_with_trailhead</a></p></li><li><p>Sell Lightning Fast with Sales Cloud<br>Introduce SFDC “Sales Cloud” on business user perspective, that helps you to understand what and why and how we are going to do.<br><a href="https://trailhead.salesforce.com/trails/lex_end_user" target="_blank" rel="noopener">https://trailhead.salesforce.com/trails/lex_end_user</a></p></li><li><p>Admin Beginner<br>System administration perspective on configuration<br><a href="https://trailhead.salesforce.com/trails/force_com_admin_beginner" target="_blank" rel="noopener">https://trailhead.salesforce.com/trails/force_com_admin_beginner</a></p></li><li><p>Developer Beginner<br>System administration / Developer perspective on customization<br><a href="https://trailhead.salesforce.com/trails/force_com_dev_beginner" target="_blank" rel="noopener">https://trailhead.salesforce.com/trails/force_com_dev_beginner</a></p></li><li><p>Lightning Development<br>Developer perspective on customization, specifically on LEX development<br><a href="https://trailhead.salesforce.com/trails/force_com_dev_intermediate/modules/lex_dev_lc_basics" target="_blank" rel="noopener">https://trailhead.salesforce.com/trails/force_com_dev_intermediate/modules/lex_dev_lc_basics</a></p></li></ol><h1 id="Best-practices"><a href="#Best-practices" class="headerlink" title="Best practices"></a>Best practices</h1><p>Apex Coding Best Practices (Must Read)<br><a href="https://developer.salesforce.com/page/Apex_Code_Best_Practices" target="_blank" rel="noopener">https://developer.salesforce.com/page/Apex_Code_Best_Practices</a></p><p>Apex Trigger Best Practices<br><a href="https://developer.salesforce.com/page/Trigger_Frameworks_and_Apex_Trigger_Best_Practices" target="_blank" rel="noopener">https://developer.salesforce.com/page/Trigger_Frameworks_and_Apex_Trigger_Best_Practices</a></p><h1 id="Useful-Tools-Tricks-amp-Reference"><a href="#Useful-Tools-Tricks-amp-Reference" class="headerlink" title="Useful Tools, Tricks &amp; Reference"></a>Useful Tools, Tricks &amp; Reference</h1><p>Trailhead | The fun way to learn Salesforce<br><a href="https://trailhead.salesforce.com/" target="_blank" rel="noopener">https://trailhead.salesforce.com/</a></p><p>Workbench is a powerful, web-based suite of tools designed for administrators and developers to interact with Salesforce.com organizations via the Force.com APIs<br><a href="https://workbench.developerforce.com" target="_blank" rel="noopener">https://workbench.developerforce.com</a></p><p>More Salesforce Tools<br><a href="https://developer.salesforce.com/page/Tools" target="_blank" rel="noopener">https://developer.salesforce.com/page/Tools</a></p><p>AppExchange is the Salesforce store. Our ready-to-install enterprise solutions let you extend Salesforce with business apps and components for every department and industry, including sales, marketing, customer service, and more.<br><a href="https://appexchange.salesforce.com" target="_blank" rel="noopener">https://appexchange.salesforce.com</a></p><p>Lightning Pre-fill form<br><a href="http://www.salesforceben.com/migrate-your-salesforce-url-hacks-to-actions/" target="_blank" rel="noopener">http://www.salesforceben.com/migrate-your-salesforce-url-hacks-to-actions/</a></p><p>Salesforce Lightning for Gmail - Chrome Web Store<br><a href="https://chrome.google.com/webstore/detail/salesforce-lightning-for/jjghhkepijgakdammjldcbnjehfkfmha" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/salesforce-lightning-for/jjghhkepijgakdammjldcbnjehfkfmha</a></p><p>A hands-on blog for SFDC<br><a href="http://www.salesforceben.com/" target="_blank" rel="noopener">http://www.salesforceben.com/</a></p><p>Extension to add a metadata layout on top of the standard Salesforce UI to improve the productivity and joy of Salesforce configuration, development, and integration work (MUST HAVE)<br><a href="https://chrome.google.com/webstore/detail/salesforce-inspector/aodjmnfhjibkcdimpodiifdjnnncaafh?hl=en" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/salesforce-inspector/aodjmnfhjibkcdimpodiifdjnnncaafh?hl=en</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hands-on introduction to Salesforce&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="入门" scheme="http://tonyrenhk.github.io/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>Lightning 的数据服务基础篇</title>
    <link href="http://tonyrenhk.github.io/2019/02/21/2019-02-21-Lightning-Data-Service-Basics/"/>
    <id>http://tonyrenhk.github.io/2019/02/21/2019-02-21-Lightning-Data-Service-Basics/</id>
    <published>2019-02-20T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>Lightning Data Service Basics</p><a id="more"></a><p>解锁Lightning Component Framework Specialist Superbadge，总框架如下 :<br><a href="https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf</a></p><p>Lightning Data Service Basics,相关链接：<br><a href="https://trailhead.salesforce.com/en/content/learn/modules/lightning_data_service" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/modules/lightning_data_service</a></p><h1 id="Get-Started-with-Lightning-Data-Service"><a href="#Get-Started-with-Lightning-Data-Service" class="headerlink" title="Get Started with Lightning Data Service"></a>Get Started with Lightning Data Service</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_get_started" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_get_started</a></p><h1 id="Manipulate-Records-with-force-recordData"><a href="#Manipulate-Records-with-force-recordData" class="headerlink" title="Manipulate Records with force:recordData"></a>Manipulate Records with force:recordData</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_manipulate_records" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_manipulate_records</a></p><h1 id="Handle-Record-Changes-and-Errors"><a href="#Handle-Record-Changes-and-Errors" class="headerlink" title="Handle Record Changes and Errors"></a>Handle Record Changes and Errors</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_handle_notifications" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_handle_notifications</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lightning Data Service Basics&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Trailhead" scheme="http://tonyrenhk.github.io/tags/Trailhead/"/>
    
      <category term="开发者II考试" scheme="http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"/>
    
      <category term="Lightning Components" scheme="http://tonyrenhk.github.io/tags/Lightning-Components/"/>
    
  </entry>
  
  <entry>
    <title>Lightning Web Components入门(二)</title>
    <link href="http://tonyrenhk.github.io/2019/02/17/2019-02-17-Lightning-Web-Components-Basics/"/>
    <id>http://tonyrenhk.github.io/2019/02/17/2019-02-17-Lightning-Web-Components-Basics/</id>
    <published>2019-02-16T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>Lightning Web Components Basics：LWC的入门基础篇</p><a id="more"></a><p>今天学习Lightning Web Components Basics的入门，相关链接为</p><p><a href="https://trailhead.salesforce.com/en/content/learn/modules/lightning-web-components-basics" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/modules/lightning-web-components-basics</a></p><h1 id="Discover-Lightning-Web-Components："><a href="#Discover-Lightning-Web-Components：" class="headerlink" title="Discover Lightning Web Components："></a>Discover Lightning Web Components：</h1><p>LWC到底是什么？</p><p>下面这个简单的例子当初告诉你答案。LWC分为三个部分组成，HTML,JS,CSS。</p><p>HTML样式如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">&#123;message&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上面是基本的HTML组件，并且由HTML封装。</p><p>JavaScript样式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; LightningElement &#125; <span class="keyword">from</span> <span class="string">'lwc'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">LightningElement</span> </span>&#123;</span><br><span class="line">  message = <span class="string">'Hello World'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过JS控制相关的变量<br>CSS样式如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">   <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果有HTML基础的同学，对于LWC上手应该不难。</p><p>推荐Trailhead学习链接为:<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/discover-lightning-web-components" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/discover-lightning-web-components</a></p><p>下面是相关习题：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-1.jpg" alt="image"></p><p>答案:注意CSS不是LWC的必须选项，所以答案是B</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-2.jpg" alt="image"></p><p>答案:官方推荐的playground://developer.salesforce.com/docs/component-library/tools/playground，答案是A</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-3.jpg" alt="image"></p><h1 id="Create-Lightning-Web-Components"><a href="#Create-Lightning-Web-Components" class="headerlink" title="Create Lightning Web Components"></a>Create Lightning Web Components</h1><p>相关链接为:<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/create-lightning-web-components" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/create-lightning-web-components</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-4.jpg" alt="image"><br>D</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-5.jpg" alt="image"><br>B</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-6.jpg" alt="image"></p><h1 id="Push-Lightning-Web-Component-Files"><a href="#Push-Lightning-Web-Component-Files" class="headerlink" title="Push Lightning Web Component Files"></a>Push Lightning Web Component Files</h1><p>相关链接为:<br><a href="https://trailhead.salesforce.com/en/content/learn/modules/lightning-web-components-basics/push-lightning-web-component-files" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/modules/lightning-web-components-basics/push-lightning-web-component-files</a></p><p>挑战：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-7.jpg" alt="image"></p><p>首先新建项目：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:project:create --projectname bikeproject</span><br><span class="line">$ <span class="built_in">cd</span> bikeproject</span><br></pre></td></tr></table></figure><p>新建一个LWC<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:lightning:component:create --<span class="built_in">type</span> lwc -n bikeCard -d force-app/main/default/lwc</span><br></pre></td></tr></table></figure></p><p>复制文中代码到你的LWC。</p><p>将本地连入你的developer org：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:auth:web:login -d -a myhuborg</span><br></pre></td></tr></table></figure></p><p>然后部署过去：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:<span class="built_in">source</span>:deploy -p force-app -u &lt;username&gt;</span><br></pre></td></tr></table></figure></p><p>参考链接如下：</p><p><a href="https://developer.salesforce.com/docs/component-library/documentation/lwc/lwc.get_started_sfdx_deploy" target="_blank" rel="noopener">https://developer.salesforce.com/docs/component-library/documentation/lwc/lwc.get_started_sfdx_deploy</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-8.jpg" alt="image"></p><h1 id="Handle-Events-in-Lightning-Web-Components"><a href="#Handle-Events-in-Lightning-Web-Components" class="headerlink" title="Handle Events in Lightning Web Components"></a>Handle Events in Lightning Web Components</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/handle-events-in-lightning-web-components" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/handle-events-in-lightning-web-components</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-9.jpg" alt="image"></p><p>A</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-10.jpg" alt="image"></p><p>C</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-11.jpg" alt="image"></p><h1 id="Add-Styles-and-Data-to-a-Lightning-Web-Component"><a href="#Add-Styles-and-Data-to-a-Lightning-Web-Component" class="headerlink" title="Add Styles and Data to a Lightning Web Component"></a>Add Styles and Data to a Lightning Web Component</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/add-styles-and-data-to-a-lightning-web-component" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/add-styles-and-data-to-a-lightning-web-component</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-12.jpg" alt="image"></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lwc-13.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lightning Web Components Basics：LWC的入门基础篇&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="LWC" scheme="http://tonyrenhk.github.io/tags/LWC/"/>
    
      <category term="SFDX" scheme="http://tonyrenhk.github.io/tags/SFDX/"/>
    
      <category term="Lightning Web Components" scheme="http://tonyrenhk.github.io/tags/Lightning-Web-Components/"/>
    
  </entry>
  
  <entry>
    <title>常用快捷键shortcut收录</title>
    <link href="http://tonyrenhk.github.io/2019/01/11/2019-01-11-shortcut/"/>
    <id>http://tonyrenhk.github.io/2019/01/11/2019-01-11-shortcut/</id>
    <published>2019-01-10T16:00:00.000Z</published>
    <updated>2019-04-14T11:06:39.116Z</updated>
    
    <content type="html"><![CDATA[<p>常用快捷键shortcut收录.</p><a id="more"></a><h1 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h1><ul><li>Command Palette :  <code>Ctrl</code>+<code>Shift</code>+<code>P</code></li><li>Open terminal:  <code>Ctrl</code>+<code>J</code></li><li>Open a new window: <code>Ctrl</code> + <code>Shift</code> + <code>N</code></li><li>Code Formatting Shortcut:<ul><li>VSCode on Windows - <code>Shift</code> + <code>Alt</code> + <code>F</code></li><li>VSCode on MacOS - <code>Shift</code> + <code>Option</code> + <code>F</code></li><li>VSCode on Ubuntu - <code>Ctrl</code> + <code>Shift</code> + <code>I</code></li></ul></li></ul><h1 id="Sublime"><a href="#Sublime" class="headerlink" title="Sublime"></a>Sublime</h1><ul><li>查询文件： Goto Anything feature (<code>Ctrl</code>+<code>P</code> on Windows and Linux, Cmd+P on macOS) or Ctrl+R,Cmd+R on macOS)</li><li>Package Manager:  <code>Ctrl</code>+<code>Shift</code>+<code>P</code> or <code>Cmd</code>+<code>Shift</code>+<code>P</code> in Linux/Windows/OS X</li><li>Goto Anything feature <code>Ctrl</code> +`P</li></ul><h2 id="Sublime-HTMLPrettify"><a href="#Sublime-HTMLPrettify" class="headerlink" title="Sublime-HTMLPrettify"></a>Sublime-HTMLPrettify</h2><ul><li>victorporof/Sublime-HTMLPrettify: <a href="https://github.com/victorporof/Sublime-HTMLPrettify" target="_blank" rel="noopener">https://github.com/victorporof/Sublime-HTMLPrettify</a></li><li><code>Ctrl</code>+<code>Shift</code>+<code>H</code> (or <code>Cmd</code>+<code>Shift</code>+<code>H</code> if you’re on a Mac).</li></ul><h2 id="Atom-Beautify"><a href="#Atom-Beautify" class="headerlink" title="Atom Beautify"></a>Atom Beautify</h2><ul><li>【Keyboard Shortcut】</li><li>You can also type <code>Ctrl</code>+<code>Alt</code>+<code>B</code> as a shortcut or click Packages &gt; Beautify in the menu.</li></ul><h2 id="SSH-shell"><a href="#SSH-shell" class="headerlink" title="SSH shell"></a>SSH shell</h2><ul><li>You can type exit and hit Enter, or use Ctrl+D </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常用快捷键shortcut收录.&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://tonyrenhk.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://tonyrenhk.github.io/tags/Tools/"/>
    
      <category term="shortcut" scheme="http://tonyrenhk.github.io/tags/shortcut/"/>
    
  </entry>
  
  <entry>
    <title>Lightning Web Components学习入门(一)</title>
    <link href="http://tonyrenhk.github.io/2019/01/06/2019-01-06-Lightning-Web-Components/"/>
    <id>http://tonyrenhk.github.io/2019/01/06/2019-01-06-Lightning-Web-Components/</id>
    <published>2019-01-05T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>学习Lightning Web Components(LWC) ，其中需要使用到SFDX。</p><a id="more"></a><p>现在可以用Lightning Web Components(业内简称LWC)和 Aura Components开发相关的Lightning components。两者都可以相互存在同一个页面下面。LWC是基于传统的HTML和现代的JavaScript进行开发，其主要内核是基于w3c的webcomponents相关开源源码：<a href="https://github.com/w3c/webcomponents/" target="_blank" rel="noopener">https://github.com/w3c/webcomponents/</a></p><p>所以，大部分的代码是基于标准的HTML和JS。同时，支持使用 JavaScript Jest测试(<a href="https://jestjs.io/" target="_blank" rel="noopener">https://jestjs.io/</a>)</p><h1 id="设置开发环境"><a href="#设置开发环境" class="headerlink" title="设置开发环境"></a>设置开发环境</h1><h2 id="安装Salesforce-CLI"><a href="#安装Salesforce-CLI" class="headerlink" title="安装Salesforce CLI"></a>安装Salesforce CLI</h2><h3 id="安装CLI"><a href="#安装CLI" class="headerlink" title="安装CLI"></a>安装CLI</h3><p>如果你的电脑里已经安装了nodejs，可以直接通过npm进行安装<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install sfdx-cli --global</span><br></pre></td></tr></table></figure></p><p>或者参考官方安装方法：<a href="https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm" target="_blank" rel="noopener">https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm</a></p><h3 id="查看CLI版本"><a href="#查看CLI版本" class="headerlink" title="查看CLI版本"></a>查看CLI版本</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx plugins --core</span><br></pre></td></tr></table></figure><p>由于使用LWC需要sfdx 45以上的版本，所以我们需要对sfdx版本进行更新。</p><h3 id="更新至最新的版本"><a href="#更新至最新的版本" class="headerlink" title="更新至最新的版本"></a>更新至最新的版本</h3><p>在2019年3月以前需要安装pre-release版本<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx plugins:install salesforcedx@pre-release</span><br></pre></td></tr></table></figure></p><p>在2019年3月之后可以直接卸载pre-release版本，并且输入：sfdx update进行安装。<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sfdx plugins:uninstall salesforcedx</span><br><span class="line">sfdx update</span><br></pre></td></tr></table></figure></p><h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><p>由于LWC无法在Developer Console打开，所以需要使用外部IDE进行开发。</p><ul><li>官方的playground:为了方便测试，官方给出了在线版的playground，如下：<a href="https://developer.salesforce.com/docs/component-library/tools/playground" target="_blank" rel="noopener">https://developer.salesforce.com/docs/component-library/tools/playground</a></li><li>Visual Studio Code (VS Code)：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></li><li>VS Code的Salesforce 开发插件 Salesforce Extension Pack for Visual Studio Code，<a href="https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode</a></li><li>Ligthning Web Components for Visual Studio Code，这个是基于VS Code的LWC开发插件，比较实用，而且具有自动填补功能，建议开发人员下载使用。<ul><li>安装下载地址：<a href="https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode-lwc" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode-lwc</a></li><li>源码下载地址：<a href="https://github.com/forcedotcom/salesforcedx-vscode" target="_blank" rel="noopener">https://github.com/forcedotcom/salesforcedx-vscode</a></li></ul></li><li>ESLint Extension for VS Code，这个插件能够在未编译前，发现你在开发过程中的错误，<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint</a></li><li>SalesforceXyTools：此IDE也支持LWC独立开发<ul><li>安装使用教程如下：<a href="http://salesforcexytools.com/Salesforce/SalesforceXyTools-For-Sublime.html" target="_blank" rel="noopener">http://salesforcexytools.com/Salesforce/SalesforceXyTools-For-Sublime.html</a></li><li>源码如下：<a href="https://github.com/exiahuang/SalesforceXyTools" target="_blank" rel="noopener">https://github.com/exiahuang/SalesforceXyTools</a></li></ul></li></ul><h1 id="申请免费的试用Spring-’19-组织"><a href="#申请免费的试用Spring-’19-组织" class="headerlink" title="申请免费的试用Spring ’19 组织"></a>申请免费的试用Spring ’19 组织</h1><p>如果你是Salesforce的客户，你可以使用如下链接进行注册：<br><a href="https://www.salesforce.com/form/signup/prerelease-spring19.jsp" target="_blank" rel="noopener">https://www.salesforce.com/form/signup/prerelease-spring19.jsp</a><br>如果你是Salesforce的Partner，你可以使用如下链接进行注册：<br><a href="https://www.salesforce.com/form/signup/prerelease-spring19-partner.jsp" target="_blank" rel="noopener">https://www.salesforce.com/form/signup/prerelease-spring19-partner.jsp</a></p><h1 id="兼容性问题"><a href="#兼容性问题" class="headerlink" title="兼容性问题"></a>兼容性问题</h1><p>根据官方的说法：</p><blockquote><p>Aura components can contain Lightning web components. However, the opposite doesn’t apply. Lightning web components can’t contain Aura components.</p></blockquote><p>Aura组件可以使用LWC作为一个组件，反过来，LWC里面不能包含Aura组件。但是JavaScript Code，可以在两边相互共享使用。</p><h1 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h1><p>目前有两种开发流程，一种是在IDE上直接开发，然后部署至沙盒环境。另外一种是使用Scratch Orgs，具体流程可以如下</p><ul><li>用SFDX 连入你的生产环境组织</li><li>新建一个Scratch Orgs</li><li>利用VS Code在本地开发LWC</li><li>将LWC推送至新建的Scratch Orgs进行查看，预览和测试</li><li>用SFDX 连入你的沙盒环境</li><li>将本地的LWC转成元数据</li><li>部署元数据至你的沙盒环境进行查看，预览和测试</li></ul><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><h2 id="使用-Dev-Hub"><a href="#使用-Dev-Hub" class="headerlink" title="使用 Dev Hub"></a>使用 Dev Hub</h2><p>在设置(Setup),搜索’Dev Hub’,并且点Enable。只有打开Dev Hub才可以新建和使用Scratch Org。</p><h2 id="新建DX项目"><a href="#新建DX项目" class="headerlink" title="新建DX项目"></a>新建DX项目</h2><p>首先需要新建一个 Salesforce DX 项目，下面例子中的mywork可以换成你的项目名字如‘HelloWorld’</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:project:create --projectname mywork</span><br></pre></td></tr></table></figure><h2 id="登入Salesforce-组织"><a href="#登入Salesforce-组织" class="headerlink" title="登入Salesforce 组织"></a>登入Salesforce 组织</h2><p>首先需要登入你的<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:auth:web:login -d -a DevHub</span><br></pre></td></tr></table></figure></p><p>授权登入沙盒环境:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:auth:web:login -r https://test.salesforce.com</span><br></pre></td></tr></table></figure><p>或者可以添加新的Sandbox Login</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:auth:web:login -r https://test.salesforce.com  -d -a DevHub</span><br></pre></td></tr></table></figure><p>登入之后，会跳转到Salesforce授权页面，开发者需要在浏览器页面授权</p><h2 id="查看你所拥有的Org"><a href="#查看你所拥有的Org" class="headerlink" title="查看你所拥有的Org"></a>查看你所拥有的Org</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:list</span><br><span class="line">=== Orgs</span><br><span class="line">    ALIAS         USERNAME              ORG ID      CONNECTED STATUS</span><br><span class="line">    -----------   --------------------  --------    ----------------</span><br><span class="line">    DD-ORG        jdoe@dd-<span class="number">204</span>.com       <span class="number">00</span>D...OEA   Connected</span><br><span class="line">(D) devhuborg     jdoe@mydevhub.com     <span class="number">00</span>D...MAC   Connected</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ALIAS      SCRATCH ORG NAME USERNAME                   ORG ID    EXPIRATION <span class="built_in">DATE</span></span><br><span class="line">    ---------- ------------     -------------------------- --------- ----------</span><br><span class="line">    my-scratch Your Company     test-wvkm5z113@example.com <span class="number">00</span>D...UAI <span class="number">2017</span>-<span class="number">06</span>-<span class="number">13</span></span><br><span class="line">(U) scratch208 Your Company     test-wvkm5z113@example.com <span class="number">00</span>D...UAY <span class="number">2017</span>-<span class="number">06</span>-<span class="number">13</span></span><br></pre></td></tr></table></figure><p>这里顺便教几个小技巧，如果需要删除non-active 的Scratch Org，可以输入如下命令行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:list --clean</span><br></pre></td></tr></table></figure><p>设置默认的 Dev Hub，可以输入如下命令行，新建新的Scratch Org需要生产环境，所以需要把默认的 Dev Hub设置为你的生产环境</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:config:<span class="built_in">set</span> defaultdevhubusername=org@username.com  --global</span><br></pre></td></tr></table></figure><h2 id="新建一个Scratch-Org"><a href="#新建一个Scratch-Org" class="headerlink" title="新建一个Scratch Org"></a>新建一个Scratch Org</h2><p>开发者需要利用项目文件夹中的配置文件新建一个Scratch Org<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:create -s -f config/project-scratch-def.json -a dreamhouse-org</span><br><span class="line">or</span><br><span class="line">sfdx force:org:create -f config/project-scratch-def.json</span><br></pre></td></tr></table></figure></p><p>如新建成功，会有如下成功的结果并给出用户名:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Successfully created scratch org: <span class="number">00</span>XXX0000009PENEA2, username: test-XXXX@example.com</span><br></pre></td></tr></table></figure><p>开发者利用用户名可以登入这个Scratch Org，如果需要删除一个某一个Scratch Org，可以输入如下命令行：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:org:delete -u  test-XXXX@example.com</span><br></pre></td></tr></table></figure><h2 id="设置默认的用户名"><a href="#设置默认的用户名" class="headerlink" title="设置默认的用户名"></a>设置默认的用户名</h2><p>开发者需要设置默认的用户名defaultusername，这里设置之后，在下面打开Scratch Org时候可以不需要输入。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:config:<span class="built_in">set</span> defaultusername=test-XXXX@example.com</span><br><span class="line">=== <span class="built_in">Set</span> Config</span><br><span class="line">NAME             VALUE</span><br><span class="line">───────────────  ─────────────────────────────</span><br><span class="line">defaultusername  test-XXXX@example.com</span><br></pre></td></tr></table></figure><h2 id="打开Scratch-Org"><a href="#打开Scratch-Org" class="headerlink" title="打开Scratch Org"></a>打开Scratch Org</h2><p>当开发者建立好了Scratch Org，可以利用默认的用户名打开Scratch Org，<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:org:open</span><br><span class="line">Access org <span class="number">00</span>D0l00ddd as user test-XXXX@example.com with the following URL: https://force-data-<span class="number">1039</span>-dev-ed.cs58.my.sxxxx.com                                              alesforce.com//secur/frontdoor.jsp?sid=<span class="number">00</span>D0l0000009PEN!ARoAQCCFPl.pwPYTXXNszi9rR0Q6CMrJc77771yynXH.jbnJbweH5b19bc_6KXo9BkMtMY1PLz_nY                                              BO9SSEOyQnPnCWAU3gP</span><br></pre></td></tr></table></figure></p><p>如果没有设置默认的用户名，可以在命令行中指定某一个用户名：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:open -u  test-phvqjvms7dsj@example.com</span><br></pre></td></tr></table></figure></p><h2 id="新建-Lightning-Web-Component-LWC"><a href="#新建-Lightning-Web-Component-LWC" class="headerlink" title="新建 Lightning Web Component(LWC)"></a>新建 Lightning Web Component(LWC)</h2><p>首先需要新建LWC在如下路径force-app/main/default/lwc，同时文件夹是以lwc为命名.</p><p>然后创建LWC<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> force-app/main/default/lwc</span><br><span class="line">sfdx force:lightning:component:create --<span class="built_in">type</span> lwc -n helloWorld -d force-app/main/default/lwc</span><br></pre></td></tr></table></figure></p><p>在LWC文件夹下会见到一个名字为helloWorld的文件夹，里面有三个文件helloWorld.html，helloWorld.js，helloWorld.js-meta.xml</p><p>其中helloWorld.html是我们熟悉的HTML文件，设置一个input，然后当有输入时候，调用JS函数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning-card</span> <span class="attr">title</span>=<span class="string">"HelloWorld"</span> <span class="attr">icon-name</span>=<span class="string">"custom:custom14"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slds-m-around_medium"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, &#123;greeting&#125;!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning-input</span> <span class="attr">label</span>=<span class="string">"Name"</span> <span class="attr">value</span>=<span class="string">&#123;greeting&#125;</span> <span class="attr">onchange</span>=<span class="string">&#123;changeHandler&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">lightning-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lightning-card</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在helloWorld.js文件中是JavaScript代码。设置greeting的默认值为’World’，当有输入值修改时，将修改值赋予greeting。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; LightningElement, track &#125; <span class="keyword">from</span> <span class="string">'lwc'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">extends</span> <span class="title">LightningElement</span> </span>&#123;</span><br><span class="line">    @track greeting = <span class="string">'World'</span>;</span><br><span class="line">    changeHandler(event) &#123;</span><br><span class="line">        <span class="keyword">this</span>.greeting = event.target.value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后是XML文件helloWorld.js-meta.xml，这里定义API版本和是否需要在其他LWC显示出来，同时，开发人员可以设置LWC应用于lightning App Page，lightning Record Page，lightning Home Page。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LightningComponentBundle</span> <span class="attr">xmlns</span>=<span class="string">"http://soap.sforce.com/2006/04/metadata"</span> <span class="attr">fqn</span>=<span class="string">"helloWorld"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">apiVersion</span>&gt;</span>45.0<span class="tag">&lt;/<span class="name">apiVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">isExposed</span>&gt;</span>true<span class="tag">&lt;/<span class="name">isExposed</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">targets</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span>&gt;</span>lightning__AppPage<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span>&gt;</span>lightning__RecordPage<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span>&gt;</span>lightning__HomePage<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LightningComponentBundle</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="推送本地修改至Scratch-Org"><a href="#推送本地修改至Scratch-Org" class="headerlink" title="推送本地修改至Scratch Org"></a>推送本地修改至Scratch Org</h2><p>当开发者在本地修改或者新建LWC完毕之后，需要推送有关代码到Scratch Org<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:source:push</span><br></pre></td></tr></table></figure></p><h2 id="在lightning-Home-Page使用LWC"><a href="#在lightning-Home-Page使用LWC" class="headerlink" title="在lightning Home Page使用LWC"></a>在lightning Home Page使用LWC</h2><ul><li>打开Scratch Org，选择Sales App或者选择‘Home’ Tab。</li><li>选择‘Edit Page’ ，编辑当前lightning主页。</li><li>在右边的custom 栏目中拖曳helloWorld LWC 到中间的 组件位置。</li><li>保存并查看。</li></ul><h2 id="新建元数据package"><a href="#新建元数据package" class="headerlink" title="新建元数据package"></a>新建元数据package</h2><p>首先可以新建文件夹mdapi_output_dir：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> mdapi_output_dir</span><br></pre></td></tr></table></figure><p>其次，创建package，这个package之后会在部署时候运用到：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:source:<span class="built_in">convert</span> -d mdapi_output_dir/ --packagename package_name</span><br><span class="line">Source was successfully converted to Metadata API <span class="built_in">format</span> and written to the location: C:\Users\Administrator\my_sfdx_project\dreamhouse-sfdx\mdapi_output_dir</span><br></pre></td></tr></table></figure><p>这里附上一些小技巧，如下命令行可以查看有什么改变：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -lR mdapi_output_dir/</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>最后我们需要将上面生成的含有package的文件夹部署至指定目录，可以部署目录至沙盒环境或者生产环境，同时开发者可以定义需要跑的测试类 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:deploy -d mdapioutput_dir/ -u &quot;sandbox_username&quot; -l RunSpecifiedTests -r test1,test2,test3,test4</span><br></pre></td></tr></table></figure><p>或者利用 sfdx force:mdapi:deploy -d <same 1 directory as step> -u <username or alias> 直接部署</username></same></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> sfdx force:mdapi:deploy --deploydir mdapi_output_dir --targetusername username@email.com</span><br><span class="line">495048 bytes written to C:\Users\youname~1\AppData\Local\Temp\2\mdapi_output_dir.zip using 1693.299ms</span><br><span class="line">Deploying C:\Users\youname~1\AppData\Local\Temp\2\mdapi_output_dir.zip...</span><br></pre></td></tr></table></figure><p>之后会出现状态信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">=== Status</span><br><span class="line">Status:  Queued</span><br><span class="line">jobid:  0AfXX00000wgOnhSAE</span><br><span class="line"></span><br><span class="line">The deploy request did not complete within the specified wait time [0 minutes].</span><br><span class="line">To check the status of this deployment, run &quot;sfdx force:mdapi:deploy:report&quot;</span><br></pre></td></tr></table></figure></p><p>推送默认至org里面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:source:deploy -p force-app/main/default</span><br></pre></td></tr></table></figure><p>如下命令行可以查看部署结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:deploy:report</span><br></pre></td></tr></table></figure><h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><ul><li>【Trailhead 资源】Quick Start: Lightning Web Components，这是官方的Trailhead 教程，建议初学者可以试试做一遍就知道整个开发流程了： <a href="https://trailhead.salesforce.com/content/learn/projects/quick-start-lightning-web-components" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/projects/quick-start-lightning-web-components</a></li><li>【Trailhead 资源】这也是官方的Trailhead 教程，教开发者使用SFDX，Get Started with Salesforce DX: <a href="https://trailhead.salesforce.com/content/learn/trails/sfdx_get_started" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/trails/sfdx_get_started</a></li><li>【源码】Sample Gallery: <a href="https://trailhead.salesforce.com/sample-gallery" target="_blank" rel="noopener">https://trailhead.salesforce.com/sample-gallery</a></li><li>【开发者文档】Lightning Web Components Documentation - Salesforce Lightning Component Library: <a href="https://developer.salesforce.com/docs/component-library/documentation/lwc" target="_blank" rel="noopener">https://developer.salesforce.com/docs/component-library/documentation/lwc</a></li><li>【开发者文档】Salesforce DX Developer Guide | Salesforce Developers: <a href="https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_intro.htm" target="_blank" rel="noopener">https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_intro.htm</a></li><li>【源码】这里提供一些Github源码学习：<a href="https://github.com/trailheadapps" target="_blank" rel="noopener">https://github.com/trailheadapps</a></li><li><a href="http://www.apexhours.com/introduction-to-lightning-web-components-lwc/" target="_blank" rel="noopener">Introduction to Lightning Web Components (LWC) – Apex Hours</a></li><li><a href="https://developer.salesforce.com/blogs/2019/01/introducing-dreamhouse-dreaminvest-pure-aloe-and-easy-spaces-sample-apps-for-lightning-web-components.html" target="_blank" rel="noopener">Introducing DreamHouse, DreamInvest, Pure Aloe and Easy Spaces Sample Apps for Lightning Web Components | Developer Force Blog</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习Lightning Web Components(LWC) ，其中需要使用到SFDX。&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="LWC" scheme="http://tonyrenhk.github.io/tags/LWC/"/>
    
      <category term="SFDX" scheme="http://tonyrenhk.github.io/tags/SFDX/"/>
    
      <category term="Lightning Web Components" scheme="http://tonyrenhk.github.io/tags/Lightning-Web-Components/"/>
    
  </entry>
  
  <entry>
    <title>对Campaign Member Status设置默认值</title>
    <link href="http://tonyrenhk.github.io/2019/01/03/2019-01-03-Campaign-Member-Status/"/>
    <id>http://tonyrenhk.github.io/2019/01/03/2019-01-03-Campaign-Member-Status/</id>
    <published>2019-01-02T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.477Z</updated>
    
    <content type="html"><![CDATA[<p>对Campaign Member Status设置默认值</p><a id="more"></a><p>由于Campaign Member Status在每一次由于Campaign新建的时候的默认值只能是Responded，Sent，而每一次新建一个新的Campaign，都必须添加对应的status，特别麻烦。</p><p>我们可以在Campaign的after insert 下面传入新的triggerNew，然后删除系统默认的CampaignMemberStatus，并且添加新的默认值。在这里，我添加四个状态Attended,,Invited,To be Invited。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>  without Sharing <span class="class"><span class="keyword">class</span> <span class="title">CampaignTriggerClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Static <span class="keyword">void</span> <span class="title">routineAfterInsert</span><span class="params">(List&lt;Campaign&gt; triggerNew )</span></span>&#123;</span><br><span class="line">        List &lt;CampaignMemberStatus&gt; CMSDeleteList = <span class="keyword">new</span> List&lt;CampaignMemberStatus&gt;();</span><br><span class="line">        <span class="keyword">for</span> (CampaignMemberStatus cms: [SELECT id, CampaignID, HasResponded, IsDefault, Label, SortOrder</span><br><span class="line">                                        FROM CampaignMemberStatus</span><br><span class="line">                                        WHERE CampaignID in :triggerNew])&#123;</span><br><span class="line">            CMSDeleteList.add(cms);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        List &lt;CampaignMemberStatus&gt; CMSList = <span class="keyword">new</span> List&lt;CampaignMemberStatus&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Campaign c :triggerNew)&#123;</span><br><span class="line">            CMSList.addAll(GenMemberStatusList(c.id));            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        insert CMSList;</span><br><span class="line">        delete CMSDeleteList;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List &lt;CampaignMemberStatus&gt; GenMemberStatusList(string cid)&#123;</span><br><span class="line">        List &lt;CampaignMemberStatus&gt; NewStatuses = <span class="keyword">new</span> List&lt;CampaignMemberStatus&gt;();</span><br><span class="line">         CampaignMemberStatus c1 = <span class="keyword">new</span> CampaignMemberStatus(CampaignID = cid,</span><br><span class="line">                                                           Label = <span class="string">'To be Invited'</span>,</span><br><span class="line">                                                           IsDefault = <span class="keyword">true</span>,</span><br><span class="line">                                                           HasResponded = <span class="keyword">true</span>,</span><br><span class="line">                                                           SortOrder = <span class="number">3</span>);</span><br><span class="line">         CampaignMemberStatus c2 = <span class="keyword">new</span> CampaignMemberStatus(CampaignID = cid,</span><br><span class="line">                                                           Label = <span class="string">'Invited'</span>,</span><br><span class="line">                                                           IsDefault = <span class="keyword">false</span>,</span><br><span class="line">                                                           HasResponded = <span class="keyword">false</span>,</span><br><span class="line">                                                           SortOrder = <span class="number">4</span>);</span><br><span class="line">         CampaignMemberStatus c3 = <span class="keyword">new</span> CampaignMemberStatus(CampaignID = cid,</span><br><span class="line">                                                           Label = <span class="string">'Confirmed'</span>,</span><br><span class="line">                                                           IsDefault = <span class="keyword">false</span>,</span><br><span class="line">                                                           HasResponded = <span class="keyword">false</span>,</span><br><span class="line">                                                           SortOrder = <span class="number">5</span>);</span><br><span class="line">        CampaignMemberStatus c4 = <span class="keyword">new</span> CampaignMemberStatus(CampaignID = cid,</span><br><span class="line">                                                           Label = <span class="string">'Attended'</span>,</span><br><span class="line">                                                           IsDefault = <span class="keyword">false</span>,</span><br><span class="line">                                                           HasResponded = <span class="keyword">false</span>,</span><br><span class="line">                                                           SortOrder = <span class="number">6</span>);</span><br><span class="line">        NewStatuses.add(c1);</span><br><span class="line">        NewStatuses.add(c2);</span><br><span class="line">        NewStatuses.add(c3);</span><br><span class="line">        NewStatuses.add(c4);</span><br><span class="line">        <span class="keyword">return</span> NewStatuses;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对Campaign Member Status设置默认值&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Apex" scheme="http://tonyrenhk.github.io/tags/Apex/"/>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="对Campaign" scheme="http://tonyrenhk.github.io/tags/%E5%AF%B9Campaign/"/>
    
  </entry>
  
  <entry>
    <title>SFDX 常用命令以及相关资料</title>
    <link href="http://tonyrenhk.github.io/2019/01/02/2019-01-02-SFDX/"/>
    <id>http://tonyrenhk.github.io/2019/01/02/2019-01-02-SFDX/</id>
    <published>2019-01-01T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>这里会学习到SFDX 常用命令，同时需要具备Git的相关知识。</p><a id="more"></a><h1 id="SFDX"><a href="#SFDX" class="headerlink" title="SFDX"></a>SFDX</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install sfdx-cli --global</span><br></pre></td></tr></table></figure><h2 id="登入Salesforce-Org"><a href="#登入Salesforce-Org" class="headerlink" title="登入Salesforce Org"></a>登入Salesforce Org</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:auth:web:login -d -a DevHub</span><br></pre></td></tr></table></figure><p>登入 Sandbox:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:auth:web:login -r https://test.salesforce.com</span><br></pre></td></tr></table></figure><p>or<br>添加新的Sandbox Login<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:auth:web:login -r https://test.salesforce.com  -d -a DevHub</span><br></pre></td></tr></table></figure></p><h2 id="新建DX项目"><a href="#新建DX项目" class="headerlink" title="新建DX项目"></a>新建DX项目</h2><p>Create a Salesforce DX Project</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:project:create --projectname mywork</span><br></pre></td></tr></table></figure><h2 id="查看你所拥有的Org"><a href="#查看你所拥有的Org" class="headerlink" title="查看你所拥有的Org"></a>查看你所拥有的Org</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:list</span><br><span class="line">=== Orgs</span><br><span class="line">    ALIAS         USERNAME              ORG ID      CONNECTED STATUS</span><br><span class="line">    -----------   --------------------  --------    ----------------</span><br><span class="line">    DD-ORG        jdoe@dd-<span class="number">204</span>.com       <span class="number">00</span>D...OEA   Connected</span><br><span class="line">(D) devhuborg     jdoe@mydevhub.com     <span class="number">00</span>D...MAC   Connected</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ALIAS      SCRATCH ORG NAME USERNAME                   ORG ID    EXPIRATION <span class="built_in">DATE</span></span><br><span class="line">    ---------- ------------     -------------------------- --------- ----------</span><br><span class="line">    my-scratch Your Company     test-wvkm5z113@example.com <span class="number">00</span>D...UAI <span class="number">2017</span>-<span class="number">06</span>-<span class="number">13</span></span><br><span class="line">(U) scratch208 Your Company     test-wvkm5z113@example.com <span class="number">00</span>D...UAY <span class="number">2017</span>-<span class="number">06</span>-<span class="number">13</span></span><br></pre></td></tr></table></figure><p>删除non-active 的Scratch Org：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:list --clean</span><br></pre></td></tr></table></figure><p>设置默认的 Dev Hub</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:config:<span class="built_in">set</span> defaultdevhubusername=org@username.com  --global</span><br></pre></td></tr></table></figure><h2 id="新建一个Scratch-Org"><a href="#新建一个Scratch-Org" class="headerlink" title="新建一个Scratch Org"></a>新建一个Scratch Org</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:create -s -f config/project-scratch-def.json -a dreamhouse-org</span><br><span class="line">or</span><br><span class="line">sfdx force:org:create -f config/project-scratch-def.json</span><br></pre></td></tr></table></figure><p>成功的结果:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Successfully created scratch org: <span class="number">00</span>D0l0000009PENEA2, username: test-im44gkueld8k@example.com</span><br></pre></td></tr></table></figure><p>删除一个Scratch Org</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:org:delete -u  test-s6r2le1cgpnd@example.com</span><br></pre></td></tr></table></figure><h3 id="设置defaultusername"><a href="#设置defaultusername" class="headerlink" title="设置defaultusername"></a>设置defaultusername</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:config:<span class="built_in">set</span> defaultusername=test-phvqjvms7dsj@example.com</span><br><span class="line">=== <span class="built_in">Set</span> Config</span><br><span class="line">NAME             VALUE</span><br><span class="line">───────────────  ─────────────────────────────</span><br><span class="line">defaultusername  test-phvqjvms7dsj@example.com</span><br></pre></td></tr></table></figure><h3 id="打开Scratch-Org"><a href="#打开Scratch-Org" class="headerlink" title="打开Scratch Org"></a>打开Scratch Org</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:org:open</span><br><span class="line">Access org <span class="number">00</span>D0l0000009PENEA2 as user test-im44gkueld8k@example.com with the following URL: https://force-data-<span class="number">1839</span>-dev-ed.cs58.my.sxxxx.com                                              alesforce.com//secur/frontdoor.jsp?sid=<span class="number">00</span>D0l0000009PEN!ARoAQCCFPl.pwPYTXXNszi9rR0Q6CMrJc77771yynXH.jbnJbweH5b19bc_6KXo9BkMtMY1PLz_nY                                              BO9SSEOyQnPnCWAU3gP</span><br></pre></td></tr></table></figure><p>用username打开Scratch Org<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:org:open -u  test-phvqjvms7dsj@example.com</span><br></pre></td></tr></table></figure></p><h2 id="推送本地修改至Scratch-Org"><a href="#推送本地修改至Scratch-Org" class="headerlink" title="推送本地修改至Scratch Org"></a>推送本地修改至Scratch Org</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:source:push</span><br></pre></td></tr></table></figure><h2 id="拉取所有metadata-from-Scratch-Org"><a href="#拉取所有metadata-from-Scratch-Org" class="headerlink" title="拉取所有metadata from Scratch Org"></a>拉取所有metadata from Scratch Org</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:source:pull</span><br></pre></td></tr></table></figure><h2 id="添加Permission"><a href="#添加Permission" class="headerlink" title="添加Permission"></a>添加Permission</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:user:permset:assign -n Dreamhouse</span><br><span class="line">=== Permsets Assigned</span><br><span class="line">USERNAME                       PERMISSION <span class="built_in">SET</span> ASSIGNMENT</span><br><span class="line">─────────────────────────────  ─────────────────────────</span><br><span class="line">test-im44gkueld8k@example.com  Dreamhouse</span><br></pre></td></tr></table></figure><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Administrator@EC2AMAZ-IOQ3I22 MINGW64 ~/my_sfdx_project/dreamhouse-sfdx (my_branch)</span><br><span class="line">$ sfdx force:data:<span class="built_in">tree</span>:import --plan data/sample-data-plan.json</span><br></pre></td></tr></table></figure><p>其中，数据格式如下：</p><p>sample-data-plan.json：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"sobject"</span>: <span class="string">"Broker__c"</span>,</span><br><span class="line">    <span class="attr">"saveRefs"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"files"</span>: [</span><br><span class="line">      <span class="string">"brokers-data.json"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"sobject"</span>: <span class="string">"Property__c"</span>,</span><br><span class="line">    <span class="attr">"resolveRefs"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"files"</span>: [</span><br><span class="line">      <span class="string">"properties-data.json"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>有两个文件，一个是properties-data.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"records"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attributes"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"Property__c"</span>,</span><br><span class="line">        <span class="attr">"referenceId"</span>: <span class="string">"18HenryStRef"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"Name"</span>: <span class="string">"Stunning Victorian"</span>,</span><br><span class="line">      <span class="attr">"Address__c"</span>: <span class="string">"18 Henry St"</span>,</span><br><span class="line">      <span class="attr">"City__c"</span>: <span class="string">"Cambridge"</span>,</span><br><span class="line">      <span class="attr">"State__c"</span>: <span class="string">"MA"</span>,</span><br><span class="line">      <span class="attr">"Zip__c"</span>: <span class="string">"01742"</span>,</span><br><span class="line">      <span class="attr">"Price__c"</span>: <span class="number">975000</span>,</span><br><span class="line">      <span class="attr">"Title__c"</span>: <span class="string">"Stunning Victorian"</span>,</span><br><span class="line">      <span class="attr">"Beds__c"</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"Baths__c"</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">"Location__Longitude__s"</span>: <span class="number">-71.11095</span>,</span><br><span class="line">      <span class="attr">"Location__Latitude__s"</span>: <span class="number">42.35663</span>,</span><br><span class="line">      <span class="attr">"Picture__c"</span>: <span class="string">"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house01.jpg"</span>,</span><br><span class="line">      <span class="attr">"Thumbnail__c"</span>: <span class="string">"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house01sq.jpg"</span>,</span><br><span class="line">      <span class="attr">"Description__c"</span>: <span class="string">"Lorem ipsum dolor sit amet"</span>,</span><br><span class="line">      <span class="attr">"Broker__c"</span>: <span class="string">"@CarolineBrookerRef"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attributes"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"Property__c"</span>,</span><br><span class="line">        <span class="attr">"referenceId"</span>: <span class="string">"24PearlStRef"</span></span><br><span class="line">      &#125;,</span><br><span class="line">        <span class="attr">"Name"</span>: <span class="string">"Ultimate Sophistication"</span>,</span><br><span class="line">        <span class="attr">"Address__c"</span>: <span class="string">"24 Pearl St"</span>,</span><br><span class="line">        <span class="attr">"City__c"</span>: <span class="string">"Cambridge"</span>,</span><br><span class="line">        <span class="attr">"State__c"</span>: <span class="string">"MA"</span>,</span><br><span class="line">        <span class="attr">"Zip__c"</span>: <span class="string">"02420"</span>,</span><br><span class="line">        <span class="attr">"Price__c"</span>: <span class="number">1200000</span>,</span><br><span class="line">        <span class="attr">"Title__c"</span>: <span class="string">"Ultimate Sophistication"</span>,</span><br><span class="line">        <span class="attr">"Beds__c"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"Baths__c"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"Location__Longitude__s"</span>: <span class="number">-71.10869</span>,</span><br><span class="line">        <span class="attr">"Location__Latitude__s"</span>: <span class="number">42.359103</span>,</span><br><span class="line">        <span class="attr">"Picture__c"</span>: <span class="string">"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house02.jpg"</span>,</span><br><span class="line">        <span class="attr">"Thumbnail__c"</span>: <span class="string">"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house02sq.jpg"</span>,</span><br><span class="line">        <span class="attr">"Description__c"</span>: <span class="string">"Lorem ipsum dolor sit amet"</span>,</span><br><span class="line">        <span class="attr">"Broker__c"</span>: <span class="string">"@MichaelJonesRef"</span></span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">另外一个brokers-data.json，格式如下：</span><br><span class="line">```json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"records"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attributes"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"Broker__c"</span>,</span><br><span class="line">        <span class="attr">"referenceId"</span>: <span class="string">"CarolineBrookerRef"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Caroline Kingsley"</span>,</span><br><span class="line">   <span class="attr">"Title__c"</span>: <span class="string">"Senior Broker"</span>,</span><br><span class="line">  <span class="attr">"Phone__c"</span>: <span class="string">"617-244-3672"</span>,</span><br><span class="line">  <span class="attr">"Mobile_Phone__c"</span>: <span class="string">"617-244-3672"</span>,</span><br><span class="line">  <span class="attr">"Email__c"</span>: <span class="string">"caroline@dreamhouse.demo"</span>,</span><br><span class="line">  <span class="attr">"Picture__c"</span>: <span class="string">"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/caroline_kingsley.jpg"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attributes"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"Broker__c"</span>,</span><br><span class="line">        <span class="attr">"referenceId"</span>: <span class="string">"MichaelJonesRef"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Michael Jones"</span>,</span><br><span class="line">      <span class="attr">"Title__c"</span>: <span class="string">"Senior Broker"</span>,</span><br><span class="line">  <span class="attr">"Phone__c"</span>: <span class="string">"617-244-3672"</span>,</span><br><span class="line">  <span class="attr">"Mobile_Phone__c"</span>: <span class="string">"617-244-3672"</span>,</span><br><span class="line">  <span class="attr">"Email__c"</span>: <span class="string">"michael@dreamhouse.demo"</span>,</span><br><span class="line">  <span class="attr">"Picture__c"</span>: <span class="string">"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michael_jones.jpg"</span></span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="新建metadata-package"><a href="#新建metadata-package" class="headerlink" title="新建metadata package"></a>新建metadata package</h2><p>首先新建文件夹mdapi_output_dir：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> mdapi_output_dir</span><br></pre></td></tr></table></figure><p>创建package</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sfdx force:source:<span class="built_in">convert</span> -d mdapi_output_dir/ --packagename package_name</span><br><span class="line">Source was successfully converted to Metadata API <span class="built_in">format</span> and written to the location: C:\Users\Administrator\my_sfdx_project\dreamhouse-sfdx\mdapi_output_dir</span><br></pre></td></tr></table></figure><p>查看改变<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -lR mdapi_output_dir/</span><br></pre></td></tr></table></figure></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>部署目录至沙盒环境可以定义需要跑的测试类 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:deploy -d mdapioutput_dir/ -u &quot;sandbox_username&quot; -l RunSpecifiedTests -r test1,test2,test3,test4</span><br></pre></td></tr></table></figure><p>或者利用 sfdx force:mdapi:deploy -d <same 1 directory as step> -u <username or alias> 直接部署</username></same></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> sfdx force:mdapi:deploy --deploydir mdapi_output_dir --targetusername username@email.com</span><br><span class="line">495048 bytes written to C:\Users\ADMINI~1\AppData\Local\Temp\2\mdapi_output_dir.zip using 1693.299ms</span><br><span class="line">Deploying C:\Users\ADMINI~1\AppData\Local\Temp\2\mdapi_output_dir.zip...</span><br><span class="line"></span><br><span class="line">=== Status</span><br><span class="line">Status:  Queued</span><br><span class="line">jobid:  0Af6F00000wgOnhSAE</span><br><span class="line"></span><br><span class="line">The deploy request did not complete within the specified wait time [0 minutes].</span><br><span class="line">To check the status of this deployment, run &quot;sfdx force:mdapi:deploy:report&quot;</span><br></pre></td></tr></table></figure><p>如下代码查看部署结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:deploy:report</span><br></pre></td></tr></table></figure></p><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p><strong>mdapi:convert</strong></p><p>Converts metadata retrieved via Metadata API into the source format used in Salesforce DX projects.<br>转换由package.ml拉取的Metadata到DX项目文件的格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:convert -r mdapipackage/</span><br></pre></td></tr></table></figure><h2 id="获取沙盒的metadata"><a href="#获取沙盒的metadata" class="headerlink" title="获取沙盒的metadata"></a>获取沙盒的metadata</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:retrieve --retrievetargetdir force-app  -k package.xml</span><br></pre></td></tr></table></figure><p>或者如下代码，将生成的metadata放在force-app下面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfdx force:mdapi:retrieve --retrievetargetdir force-app  -k package.xml  --targetusername tony.ren@scmp.com.itdev</span><br></pre></td></tr></table></figure><p>## </p><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><ul><li>salesforcedx - Retrieve all metadata from an existing sandbox (for Salesforce DX conversion) - Salesforce Stack Exchange: <a href="https://salesforce.stackexchange.com/questions/197186/retrieve-all-metadata-from-an-existing-sandbox-for-salesforce-dx-conversion" target="_blank" rel="noopener">https://salesforce.stackexchange.com/questions/197186/retrieve-all-metadata-from-an-existing-sandbox-for-salesforce-dx-conversion</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里会学习到SFDX 常用命令，同时需要具备Git的相关知识。&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Git" scheme="http://tonyrenhk.github.io/tags/Git/"/>
    
      <category term="LWC" scheme="http://tonyrenhk.github.io/tags/LWC/"/>
    
      <category term="SFDX" scheme="http://tonyrenhk.github.io/tags/SFDX/"/>
    
  </entry>
  
  <entry>
    <title>Trailhead学习:Lightning Components Basics</title>
    <link href="http://tonyrenhk.github.io/2018/12/22/2018-12-22-Lightning-Components-Basics/"/>
    <id>http://tonyrenhk.github.io/2018/12/22/2018-12-22-Lightning-Components-Basics/</id>
    <published>2018-12-21T16:00:00.000Z</published>
    <updated>2019-04-14T11:07:35.228Z</updated>
    
    <content type="html"><![CDATA[<p>【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Components Basics 。</p><a id="more"></a><p>该模块为 Aura模块基础(Aura Components Basics)<br><a href="https://trailhead.salesforce.com/en/content/learn/modules/lex_dev_lc_basics" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/modules/lex_dev_lc_basics</a></p><p>分为如下几个单元：</p><ul><li>Before You Start</li><li>Get Started with Lightning Components</li><li>Create and Edit Lightning Components</li><li>Attributes and Expressions</li><li>Handle Actions with Controllers</li><li>Input Data Using Forms</li><li>Connect to Salesforce with Server-Side Controllers</li><li>Connect Components with Events</li><li>Discover Next Steps</li></ul><p>该模块是解锁Lightning Component Framework Specialist Superbadge的第二个Module。其中Lightning Component Framework Specialist Superbadge的链接如下：</p><p><a href="https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf</a></p><p>本模块的主要学习目的是：利用Lightning Components中的可重用的组件构建网页版apps。</p><h1 id="在开始前-Before-You-Start"><a href="#在开始前-Before-You-Start" class="headerlink" title="在开始前(Before You Start)"></a>在开始前(Before You Start)</h1><p>相关学习链接如下：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_prereqs" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_prereqs</a><br>学习开发Lightning components 需要学习JavaScript，对于初学者，可以参考如下链接：<br>JS: The Right Way: <a href="http://jstherightway.org/" target="_blank" rel="noopener">http://jstherightway.org/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><ul><li><p>Setting Up Your Org<br>As part of our challenges for this module, you’ll build a camping list application. You need to do a few more tasks before passing this challenge and continuing.</p></li><li><p>Create an Expense custom object to work with the examples. You probably already have done this.</p><ul><li>Create a Camping Item custom object to hold the items you need to go camping with the following fields:</li><li>Name (use the standard name field)</li><li>Quantity: Number(18, 0) - Required</li><li>Price: Currency(16, 2) - Required</li><li>Packed: Checkbox(default: unchecked)</li></ul></li></ul><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>题目要求新建一个对象(Object)名字为：Expense，相关信息需要设置如下：</p><ul><li>Label：Expense</li><li>Plural Label：Expenses</li><li>Starts with vowel sound：checked</li><li>API Name：Expense__c</li></ul><p>同时新建四个字段在Expense对象上：</p><ul><li>Amount (API Name:Amount__c),字段类型：Number(16,2)</li><li>Client (API Name:Client__c),字段类型：Text(50)</li><li>Date (API Name:Date__c),字段类型：Date</li><li>Reimbursed (API Name:Reimbursed__c),字段类型：Checkbox</li></ul><p>之后需要新建另外一个对象名字为Camping Item,这里API名字可以为Camping_Item__c。同时，新建三个field:Quantity,Price,Packed。</p><p>搞定！</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-1.jpg" alt="image"></p><h1 id="Get-Started-with-Lightning-Components"><a href="#Get-Started-with-Lightning-Components" class="headerlink" title="Get Started with Lightning Components"></a>Get Started with Lightning Components</h1><p>相关链接：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_intro" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_intro</a></p><p>如下是Lightning Components框架，其设计师为了连接Salesforce与lightning平台。</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/lex_dev_lc_basics_intro.png" alt="image"></p><p>题目一：Which of the following descriptions about the Lightning Component framework is true?<br>A) It’s a UI framework for developing web apps for mobile and desktop devices.<br>B) It uses JavaScript on the client side and Apex on the server side.<br>C) It’s a modern framework for building single-page applications.<br>D) All of the above</p><p>解析： Lightning Component适用于移动端和PC端，同时前端是JS，后端是APEX。所以答案是D</p><p>题目二：What can you build with the Lightning Component framework?<br>A) Standalone app<br>B) Components to use inside Visualforce pages<br>C) Drag-and-drop components for Lightning App Builder<br>D) All of the above</p><p>解析：本题考查Lightning Component适合应用的场景。D。</p><p>题目三：How is Lightning Components different from other web app frameworks?</p><p>A) Lightning Components is optimized for both mobile and desktop experiences and proves it with Salesforce1 and Lightning Experience.<br>B) Lightning Components connects natively with services provided by the Salesforce platform.<br>C) Lightning Components has specific opinions about how data access is performed and has specific security requirements.<br>D) All of the above</p><p>解析：Lightning Components 和其他框架的不同点。Lightning Components 其设计主要是为了Salesforce服务，也即连接Lightning平台和Salesforce。所以答案是D</p><h1 id="Create-and-Edit-Aura-Components"><a href="#Create-and-Edit-Aura-Components" class="headerlink" title="Create and Edit Aura Components"></a>Create and Edit Aura Components</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_create" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_create</a></p><p>题目：</p><p><strong>Create a Simple Camping List Lightning Component</strong></p><ul><li>Create a ‘camping’ component that displays a list of camping supplies that you’ll need for your trip. Compose this component by using other components to increase reusability.</li><li>Create a campingList component that contains an ordered list of camping supplies that include Bug Spray, Bear Repellant, and Goat Food.</li><li>Create a campingHeader component that displays Camping List wrapped in an H1 tag with a font size of 18.</li></ul><p>要新建三个Lightning Component，分别为’camping’,’campingList’,’campingHeader’</p><p>其中’campingList’，需要列出三个列表Bug Spray, Bear Repellant, 和 Goat Food。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Bug Spray<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Bear Repellant<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Goat Food<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同时新建一个’campingHeader’</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Camping List<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.THIS</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-class">.THIS</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>‘camping’代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:campingHeader</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:campingList</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-2.jpg" alt="image"></p><h1 id="Attributes-and-Expressions"><a href="#Attributes-and-Expressions" class="headerlink" title="Attributes and Expressions"></a>Attributes and Expressions</h1><p>相关链接：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_attributes_expressions" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_attributes_expressions</a><br>本章主要讲述的是相关属性以及表达式。<br>接下来是下一个题目：<br><strong>Create a Packing List Item Component</strong><br>    Create a Lightning Component to display a single item for your packing list.</p><ul><li>Create a component called campingListItem.</li><li>Add an attribute named item of type Camping_Item__c that is required.</li><li>Display Name, Price, Quantity, Packed using an expression.</li><li>Display Price and Quantity using the appropriate formatted number fields.</li><li>Display Packed status using a toggle.</li></ul><p>题目要求添加一个Camping_Item__c类型，同时定义Price和Quantity为数字字段。这里我们把Price定义为currency字段：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"item"</span> <span class="attr">type</span>=<span class="string">"Camping_Item__c"</span> <span class="attr">required</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ui:outputText</span> <span class="attr">value</span>=<span class="string">"&#123;!v.item.Name&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:formattedNumber</span> <span class="attr">value</span>=<span class="string">"&#123;!v.item.Price__c&#125;"</span> <span class="attr">style</span>=<span class="string">"currency"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:formattedNumber</span> <span class="attr">value</span>=<span class="string">"&#123;!v.item.Quantity__c&#125;"</span> <span class="attr">style</span>=<span class="string">"Number"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"toggle"</span> <span class="attr">label</span>=<span class="string">"Packed"</span> <span class="attr">name</span>=<span class="string">"togglevalue"</span> <span class="attr">checked</span>=<span class="string">"&#123;!v.item.Packed__c&#125;"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-3.jpg" alt="image"></p><h1 id="Handle-Actions-with-Controllers"><a href="#Handle-Actions-with-Controllers" class="headerlink" title="Handle Actions with Controllers"></a>Handle Actions with Controllers</h1><p>相关链接为：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_controllers" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_controllers</a></p><p>此文主要学习如何使用Controllers</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>下面我们来根据例子实际学习一下如何使用控制器，这里新建一个Lightning Component 命名为helloMessageInteractive：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"message"</span> <span class="attr">type</span>=<span class="string">"String"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Message of the day: &#123;!v.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:button</span> <span class="attr">label</span>=<span class="string">"You look nice today."</span></span></span><br><span class="line"><span class="tag">            <span class="attr">onclick</span>=<span class="string">"&#123;!c.handleClick&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:button</span> <span class="attr">label</span>=<span class="string">"Today is going to be a great day!"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">onclick</span>=<span class="string">"&#123;!c.handleClick&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其中’c’是控制客户端的操作。通过onclick调用客户端handleClick的函数实行控制。</p><p>接下来是controller来控制按钮：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    handleClick: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> btnClicked = event.getSource();         <span class="comment">// the button</span></span><br><span class="line">        <span class="keyword">var</span> btnMessage = btnClicked.get(<span class="string">"v.label"</span>); <span class="comment">// the button's label</span></span><br><span class="line">        component.set(<span class="string">"v.message"</span>, btnMessage);     <span class="comment">// update our message</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>‘event.getSource()’指向的是用户所点击的按钮属性。之后通过component.set设置客户端的变量”v.message”。</p><p>最后还需要新建一个Lightning Application去预览这个组件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:application</span> <span class="attr">extends</span>=<span class="string">"force:slds"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:helloMessageInteractive</span>&gt;</span><span class="tag">&lt;/<span class="name">c:helloMessageInteractive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:application</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>接下来直接进入题目环节：</p><p><strong>Mark Item as Packed</strong><br>    Add a button to the campingListItem component that when clicked, marks the item as packed.</p><ul><li>Add a button labeled Packed! that calls the packItem controller function when clicked.</li><li>The controller function should do the following:<ul><li>Mark the item attribute as packed using a value of true</li><li>Disable the button by marking the disabled attribute using a value of true</li></ul></li></ul><p>题目要求新建一个按钮，当按钮按下之后，设置Packed为真。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> <span class="attr">implements</span>=<span class="string">"force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId"</span> <span class="attr">access</span>=<span class="string">"global"</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- item attribute is an instance of Camping_Item__c--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"item"</span> <span class="attr">type</span>=<span class="string">"Camping_Item__c"</span> <span class="attr">description</span>=<span class="string">"instance of Camping_Item__c object"</span> <span class="attr">required</span>=<span class="string">"true"</span> <span class="attr">default</span>=<span class="string">"&#123;Packed__c : false&#125;"</span> <span class="attr">access</span>=<span class="string">"global"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Name: &#123;!v.item.Name&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Price:</span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:formattedNumber</span> <span class="attr">value</span>=<span class="string">"&#123;!v.item.Price__c&#125;"</span> <span class="attr">style</span>=<span class="string">"currency"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Quantity:</span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:formattedNumber</span> <span class="attr">value</span>=<span class="string">"&#123;!v.item.Quantity__c&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"toggle"</span> <span class="attr">label</span>=<span class="string">"Packed ?"</span>  <span class="attr">name</span>=<span class="string">"Packed"</span>  <span class="attr">checked</span>=<span class="string">"&#123;!v.item.Packed__c&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:button</span> <span class="attr">label</span>=<span class="string">"Packed!"</span>  <span class="attr">onclick</span>=<span class="string">"&#123;!c.packItem&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>同时记得Disable这个按钮。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    packItem : <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//set the Packed__c property of the item (instance of Camping_Item__c) attribute</span></span><br><span class="line">        component.set(<span class="string">"v.item.Packed__c"</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//set the disabled attribute to true</span></span><br><span class="line">        event.getSource().set(<span class="string">"v.disabled"</span>,<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>最后在Lightning Application去预览这个组件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:application</span> <span class="attr">extends</span>=<span class="string">"force:slds"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:campingListItem</span> <span class="attr">item</span>=<span class="string">"&#123;Price__c: 100, Packed__c: false, Quantity__c: 10, Name:'Test'&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:application</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>最后效果图如下：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-7.jpg" alt="image"></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-5.jpg" alt="image"></p><p>搞定！</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-6.jpg" alt="image"></p><p>最后，关于Lightning组件的其他库函数可以参考如下官方链接：<br>Components - Salesforce Lightning Component Library: <a href="https://developer.salesforce.com/docs/component-library/overview/components" target="_blank" rel="noopener">https://developer.salesforce.com/docs/component-library/overview/components</a></p><h1 id="Input-Data-Using-Forms"><a href="#Input-Data-Using-Forms" class="headerlink" title="Input Data Using Forms"></a>Input Data Using Forms</h1><p>链接如下：</p><p><a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_forms" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_forms</a></p><p>本节讲述的是如何利用Lightning组建构建表单，同时表单的样式使用Salesforce Lightning Design System，简称SLDS。</p><p>这里，我们再application里面加入 extends=”force:slds”的属性，就可以使用简称SLDS的库。</p><p>我们可以现建立一个如下的 lightning component：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- PAGE HEADER --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:layout</span> <span class="attr">class</span>=<span class="string">"slds-page-header slds-page-header--object-home"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:icon</span> <span class="attr">iconName</span>=<span class="string">"standard:scan_card"</span> <span class="attr">alternativeText</span>=<span class="string">"My Expenses"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:layoutItem</span> <span class="attr">padding</span>=<span class="string">"horizontal-small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-section page-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--label"</span>&gt;</span>Expenses<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--medium"</span>&gt;</span>My Expenses<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lightning:layout</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- / PAGE HEADER --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- NEW EXPENSE FORM --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:layoutItem</span> <span class="attr">padding</span>=<span class="string">"around-small"</span> <span class="attr">size</span>=<span class="string">"6"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- CREATE NEW EXPENSE --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-labelledby</span>=<span class="string">"newexpenseform"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- BOXED AREA --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">class</span>=<span class="string">"slds-box slds-theme--default slds-container--small"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span> <span class="attr">id</span>=<span class="string">"newexpenseform"</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--small </span></span></span><br><span class="line"><span class="tag"><span class="string">          slds-p-vertical--medium"</span>&gt;</span></span><br><span class="line">          Add Expense</span><br><span class="line">        <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment">&lt;!-- CREATE NEW EXPENSE FORM --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"slds-form--stacked"</span>&gt;</span>          </span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">aura:id</span>=<span class="string">"expenseform"</span> <span class="attr">label</span>=<span class="string">"Expense Name"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">name</span>=<span class="string">"expensename"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">value</span>=<span class="string">"&#123;!v.newExpense.Name&#125;"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">required</span>=<span class="string">"true"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">aura:id</span>=<span class="string">"expenseform"</span> <span class="attr">label</span>=<span class="string">"Amount"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">name</span>=<span class="string">"expenseamount"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">min</span>=<span class="string">"0.1"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">formatter</span>=<span class="string">"currency"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">step</span>=<span class="string">"0.01"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">value</span>=<span class="string">"&#123;!v.newExpense.Amount__c&#125;"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">messageWhenRangeUnderflow</span>=<span class="string">"Enter an amount that's at least $0.10."</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">aura:id</span>=<span class="string">"expenseform"</span> <span class="attr">label</span>=<span class="string">"Client"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">name</span>=<span class="string">"expenseclient"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">value</span>=<span class="string">"&#123;!v.newExpense.Client__c&#125;"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">placeholder</span>=<span class="string">"ABC Co."</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">aura:id</span>=<span class="string">"expenseform"</span> <span class="attr">label</span>=<span class="string">"Expense Date"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">name</span>=<span class="string">"expensedate"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">value</span>=<span class="string">"&#123;!v.newExpense.Date__c&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">aura:id</span>=<span class="string">"expenseform"</span> <span class="attr">label</span>=<span class="string">"Reimbursed?"</span>  </span></span><br><span class="line"><span class="tag">                             <span class="attr">name</span>=<span class="string">"expreimbursed"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">checked</span>=<span class="string">"&#123;!v.newExpense.Reimbursed__c&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:button</span> <span class="attr">label</span>=<span class="string">"Create Expense"</span> </span></span><br><span class="line"><span class="tag">                              <span class="attr">class</span>=<span class="string">"slds-m-top--medium"</span></span></span><br><span class="line"><span class="tag">                              <span class="attr">variant</span>=<span class="string">"brand"</span></span></span><br><span class="line"><span class="tag">                              <span class="attr">onclick</span>=<span class="string">"&#123;!c.clickCreate&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- / CREATE NEW EXPENSE FORM --&gt;</span></span><br><span class="line">  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- / BOXED AREA --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- / CREATE NEW EXPENSE --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lightning:layout</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- / NEW EXPENSE FORM --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的lightning component用到了lightning:layout，同时设置了size=”6” ，那么对应道HTML里面的div会占用页面宽度的 50%，总数为12。<br>lightning:input是输入框里面的相关属性和HTML类似，如min是最小值。这里出现一个aura:id是在每一个tag里面的唯一的id<br>同时，新建一个application：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:application</span> <span class="attr">extends</span>=<span class="string">"force:slds"</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">        <span class="comment">&lt;!-- This component is the real "app" --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:expenses</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:application</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图如下：<br><img src="https://res.cloudinary.com/hy4kyit2a/f_auto,fl_lossy,q_70/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_forms/images/4ee0d3eb16b1c82b10a36bad9980a919_lex_dev_lc_basics_forms_new_expense.png" alt="alt tag"></p><p>下面进入题目环节：</p><p><strong>Create a Form to Enter New Items</strong></p><p>In this challenge you’ll create a form to enter new items, a list to display the items entered, and add SLDS styling. First, to make our camping list look more appealing, change the campingHeader component to use lightning:layout and SLDS. Similar to the unit, style the Camping List H1 inside the slds-page-header. Add the action:goal SLDS icon using lightning:icon.</p><p>Next, modify the campingList component to contain a new item input form and an iteration of campingListItem components for displaying the items entered. Here are additional details for the modifications to the campingList component.</p><ul><li>Add an attribute named items with the type of an array of camping item custom objects.</li><li>Add an attribute named newItem of type Camping_Item__c with default quantity and price values of 0.</li><li>The component displays the Name, Quantity, Price, and Packed form fields with the appropriate input component types and values from the newItem attribute. The Quantity field accepts a number that’s at least 1.</li><li>Submitting the form executes the action clickCreateItem in the JavaScript controller.</li><li>If the form is valid, the JavaScript controller pushes the newItem onto the array of existing items, triggers the notification that the items value provider has changed, and resets the newItem value provider with a blank sObjectType of Camping_Item__c. <strong>For this challenge, place the code in your component’s controller, not the helper.</strong></li></ul><p>题目需要开发者写一个输入的表单，同时展示所有输入的记录。这里我们可以使用SLDS样式，如lightning:icon。</p><p>现在开始先写campingList 组件，也是主体部分。需要设置Camping_Item__c的quantity和price的默认值都为0。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">type</span>=<span class="string">"Camping_Item__c[]"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"newItem"</span> <span class="attr">type</span>=<span class="string">"Camping_Item__c"</span> <span class="attr">default</span>=<span class="string">"&#123;'Name':'',</span></span></span><br><span class="line"><span class="tag"><span class="string">                                                                   'Quantity__c':0,</span></span></span><br><span class="line"><span class="tag"><span class="string">                                                                   'Price__c':0,</span></span></span><br><span class="line"><span class="tag"><span class="string">                                                                   'Packed__c':false,</span></span></span><br><span class="line"><span class="tag"><span class="string">                                                                   'sobjectType':'Camping_Item__c'&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- NEW Campaing FORM --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slds-col slds-col--padded slds-p-top--large"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:campingHeader</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-labelledby</span>=<span class="string">"newCampaingForm"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">&lt;!-- BOXED AREA --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">class</span>=<span class="string">"slds-box slds-theme--default slds-container--small"</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">legend</span> <span class="attr">id</span>=<span class="string">"newCampaingForm"</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--small</span></span></span><br><span class="line"><span class="tag"><span class="string">                                                    slds-p-vertical--medium"</span>&gt;</span></span><br><span class="line">                    Add Expense</span><br><span class="line">                <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment">&lt;!-- CREATE NEW Campaing FORM --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"slds-form--stacked"</span>&gt;</span></span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">&lt;!-- For Name Field --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">aura:id</span>=<span class="string">"expenseform"</span> <span class="attr">label</span>=<span class="string">"Camping Name"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">name</span>=<span class="string">"expensename"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">value</span>=<span class="string">"&#123;!v.newItem.Name&#125;"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">required</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- For Quantity Field --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">aura:id</span>=<span class="string">"campingform"</span> <span class="attr">label</span>=<span class="string">"Quantity"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">name</span>=<span class="string">"expenseamount"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">min</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">value</span>=<span class="string">"&#123;!v.newItem.Quantity__c&#125;"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">messageWhenRangeUnderflow</span>=<span class="string">"Enter minimum 1 Quantity"</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- For Price Field --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">aura:id</span>=<span class="string">"campingform"</span> <span class="attr">label</span>=<span class="string">"Price"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">formatter</span>=<span class="string">"currency"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">name</span>=<span class="string">"expenseclient"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">value</span>=<span class="string">"&#123;!v.newItem.Price__c&#125;"</span></span></span><br><span class="line"><span class="tag">                                     /&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- For Check Box --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">aura:id</span>=<span class="string">"campingform"</span> <span class="attr">label</span>=<span class="string">"Packed"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">name</span>=<span class="string">"expreimbursed"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">checked</span>=<span class="string">"&#123;!v.newItem.Packed__c&#125;"</span>/&gt;</span></span><br><span class="line">                    </span><br><span class="line">                    <span class="tag">&lt;<span class="name">lightning:button</span> <span class="attr">label</span>=<span class="string">"Create Camping"</span></span></span><br><span class="line"><span class="tag">                                      <span class="attr">class</span>=<span class="string">"slds-m-top--medium"</span></span></span><br><span class="line"><span class="tag">                                      <span class="attr">variant</span>=<span class="string">"brand"</span></span></span><br><span class="line"><span class="tag">                                      <span class="attr">onclick</span>=<span class="string">"&#123;!c.clickCreateItem&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- / CREATE NEW EXPENSE FORM --&gt;</span><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- / BOXED AREA --&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- / CREATE NEW EXPENSE --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ITERATIING ITEM LISTS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slds-card slds-p-top--medium"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:campingHeader</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"slds-card__body"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"list"</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">aura:iteration</span> <span class="attr">items</span>=<span class="string">"&#123;!v.items&#125;"</span> <span class="attr">var</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">c:campingListItem</span> <span class="attr">item</span>=<span class="string">"&#123;!item&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">aura:iteration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- / ITERATIING ITEM LISTS --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来需要写一个clickCreateItem函数处理当提交上来的数据，将数据传入newItem中。同时将原来的Camping_Item__c里面的值清空。这里只需要写controller就够了，helper文件就不需要了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    clickCreateItem : <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> validCamping = component.find(<span class="string">'campingform'</span>).reduce(<span class="function"><span class="keyword">function</span> (<span class="params">validSoFar, inputCmp</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// Displays error messages for invalid fields</span></span><br><span class="line">            inputCmp.showHelpMessageIfInvalid();</span><br><span class="line">            <span class="keyword">return</span> validSoFar &amp;&amp; inputCmp.get(<span class="string">'v.validity'</span>).valid;</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(validCamping)&#123;</span><br><span class="line">            <span class="keyword">var</span> newCampingItem = component.get(<span class="string">"v.newItem"</span>);</span><br><span class="line">            <span class="comment">//helper.createCamping(component,newCampingItem);</span></span><br><span class="line">            <span class="keyword">var</span> campings = component.get(<span class="string">"v.items"</span>);</span><br><span class="line">            <span class="keyword">var</span> item = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(newCampingItem));</span><br><span class="line">            </span><br><span class="line">            campings.push(item);</span><br><span class="line">            </span><br><span class="line">            component.set(<span class="string">"v.items"</span>,campings);</span><br><span class="line">            component.set(<span class="string">"v.newItem"</span>,&#123; <span class="string">'sobjectType'</span>: <span class="string">'Camping_Item__c'</span>,<span class="string">'Name'</span>: <span class="string">''</span>,<span class="string">'Quantity__c'</span>: <span class="number">0</span>,</span><br><span class="line">                                       <span class="string">'Price__c'</span>: <span class="number">0</span>,<span class="string">'Packed__c'</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>接下来需要写campingHeader函数，展示camping的头信息。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:layout</span> <span class="attr">class</span>=<span class="string">"slds-page-header slds-page-header--object-home"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:layoutItem</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lightning:icon</span> <span class="attr">iconName</span>=<span class="string">"action:goal"</span> <span class="attr">alternativeText</span>=<span class="string">"My Camping"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:layoutItem</span> <span class="attr">padding</span>=<span class="string">"horizontal-small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-section page-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--label"</span>&gt;</span>Camping<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--medium"</span>&gt;</span>My Camping<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lightning:layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后的campingListItem 组件可以沿用上一章节‘Handle Actions with Controllers’里面的代码。</p><p>最后新建一个Camping.app，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:application</span> <span class="attr">extends</span>=<span class="string">"force:slds"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:campingList</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:application</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开Camping.app，效果如下：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-9.jpg" alt="image"></p><p>就这样，又拿了500分！</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-8.jpg" alt="image"></p><h1 id="Connect-to-Salesforce-with-Server-Side-Controllers"><a href="#Connect-to-Salesforce-with-Server-Side-Controllers" class="headerlink" title="Connect to Salesforce with Server-Side Controllers"></a>Connect to Salesforce with Server-Side Controllers</h1><p>相关链接如下：<br><a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_server" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_server</a></p><h2 id="使用服务器端控制器连接到Salesforce"><a href="#使用服务器端控制器连接到Salesforce" class="headerlink" title="使用服务器端控制器连接到Salesforce"></a>使用服务器端控制器连接到Salesforce</h2><p>我们可以参考如下图，在前端，通过View展示给用户，并且通过JS的Controller实现与Salesforce的服务器端控制器进行连接。</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-15.jpg" alt="image"></p><p>在上一章节中，我们提及了利用Lightning组建构建表单，相关架构图如下，</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-11.jpg" alt="image"></p><p>整个组建由Create按钮开始，该按钮连接到clickCreate动作处理程序。当操作处理程序运行时，它从表单字段（2）中获取值，然后将新expense添加到expense数组（3）。</p><p>当通过set更新array时，它会触发组建自动重新列出expense清单（4）。</p><h2 id="从Salesforce查询数据"><a href="#从Salesforce查询数据" class="headerlink" title="从Salesforce查询数据"></a>从Salesforce查询数据</h2><p>接着上面的框架图，如何实现在应用启动时加载现有数据列表(如expense)？可以参考如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> with sharing <span class="class"><span class="keyword">class</span> <span class="title">ExpensesController</span> </span>&#123;</span><br><span class="line">    <span class="comment">// STERN LECTURE ABOUT WHAT'S MISSING HERE COMING SOON</span></span><br><span class="line">    <span class="meta">@AuraEnabled</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Expense__c&gt; <span class="title">getExpenses</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [SELECT Id, Name, Amount__c, Client__c, Date__c, </span><br><span class="line">                       Reimbursed__c, CreatedDate </span><br><span class="line">                FROM Expense__c];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一种更为常见的调用方法可以如下。直接通过soql传入查询语句如select id from Account实现动态查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AuraEnabled</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;sObject&gt; <span class="title">QueryRecord</span><span class="params">(String soql)</span></span>&#123;</span><br><span class="line">    List&lt;sObject&gt; sobjs = <span class="keyword">new</span> List&lt;sObject&gt;();</span><br><span class="line">    sobjs= Database.query(soql);</span><br><span class="line">    <span class="keyword">return</span> sobjs;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>“Aura”是Lightning Components核心的开源框架的名称。同时，该 static的关键词。所有@AuraEnabled 控制器方法必须是static方法，并且要么适用 public 要么 global范围。值得注意的另一件事是，该方法对Lightning组件的数据打包没有任何特殊作用，它只是直接返回SOQL查询结果。</p><h2 id="从Salesforce加载数据"><a href="#从Salesforce加载数据" class="headerlink" title="从Salesforce加载数据"></a>从Salesforce加载数据</h2><p>那么我们怎么通过Aura Components 加载相关的数据呢？<br>首先，我们需要在<a href="aura:component" target="_blank" rel="noopener">aura:component</a>中写入相关的class，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> <span class="attr">controller</span>=<span class="string">"ExpensesController"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其实，指向Apex控制器实际上并不加载任何数据，也不会调用远程方法。根据上面图示，我们还需要在js调用相关的controller方法(method)。</p><p>首先，我们需要在View层定义一开始js跑的函数。如下图所示，我们调用了js端的doInit函数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:handler</span> <span class="attr">name</span>=<span class="string">"init"</span> <span class="attr">action</span>=<span class="string">"&#123;!c.doInit&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;!this&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="调用服务器端控制器方法"><a href="#调用服务器端控制器方法" class="headerlink" title="调用服务器端控制器方法"></a>调用服务器端控制器方法</h2><p>接下来我看看如何通过js调用服务器端控制器，可以通过component.get(“c.getExpenses”)定义所需要调用的方法。其中，C代表着客户端控制器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Load expenses from Salesforce</span></span><br><span class="line">doInit: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Create the action</span></span><br><span class="line">    <span class="keyword">var</span> action = component.get(<span class="string">"c.getExpenses"</span>);</span><br><span class="line">    <span class="comment">// Add callback behavior for when response is received</span></span><br><span class="line">    action.setCallback(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> state = response.getState();</span><br><span class="line">        <span class="keyword">if</span> (state === <span class="string">"SUCCESS"</span>) &#123;</span><br><span class="line">            component.set(<span class="string">"v.expenses"</span>, response.getReturnValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"Failed with state: "</span> + state);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// Send action off to be executed</span></span><br><span class="line">    $A.enqueueAction(action);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>值得注意的是，如果是component.get(“v.something”)，代表着在js在前端View层拿数据。action.setCallback（…）的代码块，它将在远程方法调用返回数据时运行。最后，通过$A.enqueueAction(action);实现完整的调用。<br>通过确定state为SUCCESS之后，将返回的结果由response.getReturnValue()取出。之后赋值给v.expenses。</p><p>学了了Aura基本框架之后，我们来看看如下挑战：</p><ul><li>使用服务器端控制器保存和加载记录</li><li>使用服务器端控制器将记录保留到数据库。该campingList部件载荷现有的记录，当它启动和提交表单时保存记录到数据库中。</li><li>使用getItems方法和saveItem方法创建一个CampingListController Apex类。</li><li>添加一个doInit初始化处理程序，在组件启动时从数据库加载现有记录。</li><li>修改JavaScript控制器以使用帮助程序中的createItem方法从有效的表单提交中将记录保存到数据库。新项目将添加到控制器的项目值提供程序中。</li></ul><p>首先根据需要，先需要创建一个CampingListController.cls ，同时需要写两个方法：getItems方法和saveItem方法。<br>可以参考如下代码：</p><p><script src="https://gitlab.com/snippets/1807866.js"></script><br>或者如下链接：<br><a href="https://gitlab.com/snippets/1807867" target="_blank" rel="noopener">https://gitlab.com/snippets/1807867</a></p><p>getItems方法是获取数据，saveItem方法是保存数据。</p><p>campingList.cmp </p><p>可以参考如下代码：</p><p><script src="https://gitlab.com/snippets/1807868.js"></script><br>或者如下链接：<br><a href="https://gitlab.com/snippets/1807867" target="_blank" rel="noopener">https://gitlab.com/snippets/1807867</a></p><p>CampingListController.js<br>然后在前端加载一个doInit初始化处理程序：<br>可以参考如下代码：</p><p><script src="https://gitlab.com/snippets/1807868.js"></script><br>或者如下链接：<br><a href="https://gitlab.com/snippets/1807868" target="_blank" rel="noopener">https://gitlab.com/snippets/1807868</a><br>在组件启动时从数据库调用getItems获得现有记录</p><p>同时需要写保存数据的方法，可以参考CampingListHelper.js<br>可以参考如下代码：</p><p><script src="https://gitlab.com/snippets/1807869.js"></script><br>或者如下链接：<br><a href="https://gitlab.com/snippets/1807869" target="_blank" rel="noopener">https://gitlab.com/snippets/1807869</a></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-14.jpg" alt="image"></p><h1 id="Connect-Components-with-Events"><a href="#Connect-Components-with-Events" class="headerlink" title="Connect Components with Events"></a>Connect Components with Events</h1><p>相关链接如下：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_events" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_events</a></p><p>接下来我们学习如何在component中使用event。下面这个例子展示了如何通过component发送event：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">lightning:input</span> <span class="attr">type</span>=<span class="string">"toggle"</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">label</span>=<span class="string">"Reimbursed?"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"reimbursed"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"slds-p-around--small"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">checked</span>=<span class="string">"&#123;!v.expense.Reimbursed__c&#125;"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">messageToggleActive</span>=<span class="string">"Yes"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">messageToggleInactive</span>=<span class="string">"No"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">onchange</span>=<span class="string">"&#123;!c.clickReimbursed&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>这里使用了lightning:input这个标签，同时定义了类型为type=”toggle”，也就是开关类型。<br>当用户点击了这个开关，会触发clickReimbursed事件，下面是clickReimbursed事件，会新建一个event名字为updateExpense。同时传入expense 参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    clickReimbursed: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> expense = component.get(<span class="string">"v.expense"</span>);</span><br><span class="line">        <span class="keyword">var</span> updateEvent = component.getEvent(<span class="string">"updateExpense"</span>);</span><br><span class="line">        updateEvent.setParams(&#123; <span class="string">"expense"</span>: expense &#125;);</span><br><span class="line">        updateEvent.fire();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>接下来定义一个event，其中event有两种类型，组件和应用程序类型。这里我们使用的是组件事件，名字为expensesItemUpdate。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:event</span> <span class="attr">type</span>=<span class="string">"COMPONENT"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"expense"</span> <span class="attr">type</span>=<span class="string">"Expense__c"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:event</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那么如何发送一个event呢？这里我们需要注册一个event，加上如下代码在expenseItem 组件中。如下代码的意思是埋在本组件里面会触发一个event，名字是updateExpense，其类型为c:expensesItemUpdate。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:registerEvent</span> <span class="attr">name</span>=<span class="string">"updateExpense"</span> <span class="attr">type</span>=<span class="string">"c:expensesItemUpdate"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>发送了event之后，该如何在主component里面处理呢？</p><p>如下代码展示了在主组件expenses中，添加一个aura:handler，接收来自expensesItemUpdate的event，同时会触发一个新的函数handleUpdateExpense。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:handler</span> <span class="attr">name</span>=<span class="string">"updateExpense"</span> <span class="attr">event</span>=<span class="string">"c:expensesItemUpdate"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">action</span>=<span class="string">"&#123;!c.handleUpdateExpense&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>接下来我们看看handleUpdateExpense如何拿到相关event传过来的参数，直接使用event.getParam(“expense”)获取参数，传给helper函数进行相关处理。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">handleUpdateExpense: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> updatedExp = event.getParam(<span class="string">"expense"</span>);</span><br><span class="line">    helper.updateExpense(component, updatedExp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，updateExpense 的方法可以如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">updateExpense: <span class="function"><span class="keyword">function</span>(<span class="params">component, expense</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> action = component.get(<span class="string">"c.saveExpense"</span>);</span><br><span class="line">    action.setParams(&#123;</span><br><span class="line">        <span class="string">"expense"</span>: expense</span><br><span class="line">    &#125;);</span><br><span class="line">    action.setCallback(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> state = response.getState();</span><br><span class="line">        <span class="keyword">if</span> (state === <span class="string">"SUCCESS"</span>) &#123;</span><br><span class="line">            <span class="comment">// do nothing!</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    $A.enqueueAction(action);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>学习了event如何操作之后，我们来查看相关挑战：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-13.jpg" alt="image"></p><h3 id="Refactor-Components-and-Communicate-with-Events"><a href="#Refactor-Components-and-Communicate-with-Events" class="headerlink" title="Refactor Components and Communicate with Events"></a>Refactor Components and Communicate with Events</h3><p>Refactor the input form for camping list items into its own component and communicate with component events.</p><ul><li>Replace the HTML form in the campingList component with a new campingListForm component that calls the clickCreateItem JavaScript controller action when clicked.</li><li>The campingList component listens for a c:addItemEvent event and executes the action handleAddItem in the JavaScript controller. The handleAdditem method saves the record to the database and adds the record to the items value provider.</li><li>The addItemEvent event is of type component and has a Camping_Item__c type attribute named item.</li><li>The campingListForm registers an addItem event of type c:addItemEvent.</li><li>The campingListFormController JavaScript controller calls the helper’s createItem method if the form is valid.</li><li>The campingListFormHelper JavaScript helper creates an addItem event with the item to be added and then fires the event. It then resets the newItem value provider with a blank sObjectType of type Camping_Item__c.</li></ul><ul><li>使用新的campingListForm组件替换campingList组件中的HTML表单，该组件在单击时调用clickCreateItem JavaScript控制器操作。</li><li>campingList组件侦听c：addItemEvent事件并在JavaScript控制器中执行操作handleAddItem。该handleAdditem方法保存记录到数据库中并添加记录到的物品价值提供商。</li><li>该addItemEvent事件类型的成分和有一个名为Camping_Item__c类型属性的项目。</li><li>campingListForm注册了一个类型为c的addItem事件：addItemEvent。</li><li>如果表单有效，campingListFormController JavaScript控制器将调用帮助程序的createItem方法。</li><li>campingListFormHelper JavaScript帮助程序使用要添加的项创建addItem事件，然后触发事件。然后，它使用类型为Camping_Item__c的空白sObjectType 重置newItem值提供程序。</li></ul><p>相关代码如下：</p><p>addItemEvent.evt<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:event</span> <span class="attr">type</span>=<span class="string">"APPLICATION"</span> <span class="attr">description</span>=<span class="string">"Event template"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"item"</span> <span class="attr">type</span>=<span class="string">"Camping_Item__c"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:event</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在主组件里面campingList.cmp，这里需要引用&lt;c:campingListForm /&gt;,同时添加aura:handler接收来自campingListForm的event，同时触发handleAddItem函数处理。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aura:component</span> <span class="attr">controller</span>=<span class="string">"CampingListController"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">implements</span>=<span class="string">"force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId,force:lightningQuickAction"</span> <span class="attr">access</span>=<span class="string">"global"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:handler</span> <span class="attr">name</span>=<span class="string">"init"</span> <span class="attr">action</span>=<span class="string">"&#123;!c.doInit&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;!this&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:handler</span> <span class="attr">name</span>=<span class="string">"addItem"</span> <span class="attr">event</span>=<span class="string">"c:addItemEvent"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">action</span>=<span class="string">"&#123;!c.handleAddItem &#125;"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">aura:attribute</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">type</span>=<span class="string">"Camping_Item__c[]"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Bug Spray<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Bear Repellant<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Goat Food<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- PAGE HEADER --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">c:campingHeader</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lightning:layout</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lightning:layoutItem</span> <span class="attr">padding</span>=<span class="string">"around-small"</span> <span class="attr">size</span>=<span class="string">"6"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:campingListForm</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lightning:layoutItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lightning:layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:campingHeader</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slds-card slds-p-top--medium"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"slds-card__header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"slds-text-heading--small"</span>&gt;</span>Items<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"slds-card__body"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"list"</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">aura:iteration</span> <span class="attr">items</span>=<span class="string">"&#123;!v.items&#125;"</span> <span class="attr">var</span>=<span class="string">"items"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">c:campingListItem</span> <span class="attr">item</span>=<span class="string">"&#123;!item&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">aura:iteration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">aura:component</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里附上campingListController.js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    <span class="comment">// Load expenses from Salesforce</span></span><br><span class="line">    doInit: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Create the action</span></span><br><span class="line">        <span class="keyword">var</span> action = component.get(<span class="string">"c.getItems"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Add callback behavior for when response is received</span></span><br><span class="line">        action.setCallback(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> state = response.getState();</span><br><span class="line">            <span class="keyword">if</span> (state === <span class="string">"SUCCESS"</span>) &#123;</span><br><span class="line">                component.set(<span class="string">"v.items"</span>, response.getReturnValue());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"Failed with state: "</span> + state);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Send action off to be executed</span></span><br><span class="line">        $A.enqueueAction(action);</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handleAddItem: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> newItem = event.getParam(<span class="string">"item"</span>);</span><br><span class="line">        <span class="keyword">var</span> action = component.get(<span class="string">"c.saveItem"</span>);</span><br><span class="line">        action.setParams(&#123;<span class="string">"item"</span>: newItem&#125;);</span><br><span class="line">        action.setCallback(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> state = response.getState();</span><br><span class="line">            <span class="keyword">if</span> (component.isValid() &amp;&amp; state === <span class="string">"SUCCESS"</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> items = component.get(<span class="string">"v.items"</span>);</span><br><span class="line">                items.push(item);</span><br><span class="line">                component.set(<span class="string">"v.items"</span>,items);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        $A.enqueueAction(action);</span><br><span class="line">        </span><br><span class="line">    &#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在campingListForm.cmp中，我们注册一个Event，名字为addItem</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;aura:component implements=<span class="string">"force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId"</span> access=<span class="string">"global"</span> &gt;</span><br><span class="line">    &lt;aura:attribute name=<span class="string">"newItem"</span> type=<span class="string">"Camping_Item__c"</span> <span class="keyword">default</span>=<span class="string">"&#123; 'sobjectType': 'Camping_Item__c',</span></span><br><span class="line"><span class="string">                                                                   'Name': '',</span></span><br><span class="line"><span class="string">                                                                   'Quantity__c': 0,                                          </span></span><br><span class="line"><span class="string">                                                                   'Price__c': 0,</span></span><br><span class="line"><span class="string">                                                                   'Packed__c': false &#125;"</span>/&gt;</span><br><span class="line">    &lt;aura:registerEvent name=<span class="string">"addItem"</span> type=<span class="string">"c:addItemEvent"</span>/&gt; </span><br><span class="line">    &lt;lightning:layout &gt;</span><br><span class="line">        &lt;lightning:layoutItem padding=<span class="string">"around-small"</span> size=<span class="string">"6"</span>&gt;</span><br><span class="line">            &lt;div aria-labelledby=<span class="string">"newcampaignform"</span>&gt;</span><br><span class="line">                &lt;fieldset <span class="class"><span class="keyword">class</span></span>=<span class="string">"slds-box slds-theme--default slds-container--small"</span>&gt;</span><br><span class="line">                    &lt;legend id=<span class="string">"newcampaignform"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"slds-text-heading--small slds-p-vertical--medium"</span>&gt;</span><br><span class="line">                        Add Campaign List</span><br><span class="line">                    &lt;<span class="regexp">/legend&gt; </span></span><br><span class="line"><span class="regexp">                    &lt;form class="slds-form--stacked"&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;lightning:input aura:id="campaignform" label="Campaign Item Name"</span></span><br><span class="line"><span class="regexp">                                         name="campaignitemname"</span></span><br><span class="line"><span class="regexp">                                         value="&#123;!v.newItem.Name&#125;"</span></span><br><span class="line"><span class="regexp">                                         required="true"/</span>&gt;</span><br><span class="line">                        &lt;lightning:input type=<span class="string">"number"</span> aura:id=<span class="string">"expenseform"</span> label=<span class="string">"Quantity"</span></span><br><span class="line">                                         name=<span class="string">"campaignitemprice"</span></span><br><span class="line">                                         min=<span class="string">"1"</span></span><br><span class="line">                                         formatter=<span class="string">"number"</span></span><br><span class="line">                                         step=<span class="string">"0.1"</span></span><br><span class="line">                                         value=<span class="string">"&#123;!v.newItem.Quantity__c&#125;"</span></span><br><span class="line">                                         messageWhenRangeUnderflow=<span class="string">"Enter quantity that's at least 1."</span>/&gt;</span><br><span class="line">                        &lt;lightning:input type=<span class="string">"number"</span> aura:id=<span class="string">"expenseform"</span> label=<span class="string">"Price"</span></span><br><span class="line">                                         name=<span class="string">"campaignitemprice"</span></span><br><span class="line">                                         min=<span class="string">"0.1"</span></span><br><span class="line">                                         formatter=<span class="string">"currency"</span></span><br><span class="line">                                         step=<span class="string">"0.01"</span></span><br><span class="line">                                         value=<span class="string">"&#123;!v.newItem.Price__c&#125;"</span></span><br><span class="line">                                         messageWhenRangeUnderflow=<span class="string">"Enter an amount that's at least $0.10."</span>/&gt;</span><br><span class="line">                        &lt;lightning:input type=<span class="string">"checkbox"</span> aura:id=<span class="string">"expenseform"</span> label=<span class="string">"Packed?"</span> </span><br><span class="line">                                         name=<span class="string">"expreimbursed"</span></span><br><span class="line">                                         checked=<span class="string">"&#123;!v.newItem.Packed__c&#125;"</span>/&gt;</span><br><span class="line">                        &lt;lightning:button label=<span class="string">"Create Camping"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"slds-m-top--medium"</span></span><br><span class="line">                                          variant=<span class="string">"brand"</span> onclick=<span class="string">"&#123;!c.clickCreateItem&#125;"</span>/&gt;</span><br><span class="line">                    &lt;<span class="regexp">/form&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>fieldset&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            </span></span><br><span class="line"><span class="regexp">        &lt;/</span>lightning:layoutItem&gt;</span><br><span class="line">    &lt;<span class="regexp">/lightning:layout&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>aura:component&gt;</span><br></pre></td></tr></table></figure><p>当按钮lightning:button按下时候，触发clickCreateItem函数，在campingListFormController.js里面，同时会调用helper.createItem。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    clickCreateItem: <span class="function"><span class="keyword">function</span>(<span class="params">component, event, helper</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> validCamping = component.find(<span class="string">'campingform'</span>).reduce(<span class="function"><span class="keyword">function</span> (<span class="params">validSoFar, inputCmp</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// Displays error messages for invalid fields</span></span><br><span class="line">            inputCmp.showHelpMessageIfInvalid();</span><br><span class="line">            <span class="keyword">return</span> validSoFar &amp;&amp; inputCmp.get(<span class="string">'v.validity'</span>).valid;</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(validCamping)&#123;</span><br><span class="line">            <span class="keyword">var</span> addItm = event.getParam(<span class="string">"v.newItem"</span>);</span><br><span class="line">            helper.createItem(component, addItm);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>当campingListFormHelper.js中，触发event时候，会调用名字为addItem的注册event。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(&#123;</span><br><span class="line">    addItem : <span class="function"><span class="keyword">function</span>(<span class="params">component, campaign</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> createEvent = component.getEvent(<span class="string">"addItem"</span>);</span><br><span class="line">        createEvent.setParams(&#123; <span class="string">"item"</span>: campaign &#125;);</span><br><span class="line">        createEvent.fire();</span><br><span class="line">        component.set(<span class="string">"v.newItem"</span>,&#123; <span class="string">'sobjectType'</span>: <span class="string">'Camping_Item__c'</span>,</span><br><span class="line">                                   <span class="string">'Name'</span>: <span class="string">''</span>,</span><br><span class="line">                                   <span class="string">'Quantity__c'</span>: <span class="number">0</span>,</span><br><span class="line">                                   <span class="string">'Price__c'</span>: <span class="number">0</span>,</span><br><span class="line">                                   <span class="string">'Packed__c'</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Discover-Next-Steps"><a href="#Discover-Next-Steps" class="headerlink" title="Discover Next Steps"></a>Discover Next Steps</h1><p>相关链接如下：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_next_steps" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_next_steps</a></p><p>相关题目：</p><ol><li>What does SLDS stand for?</li></ol><p>A) Salesforce Leadership Does Surf</p><p>B) System Limits Detection System</p><p>C) Salesforce Lightning Design System</p><p>D) sObject Loading Data System</p><p>答案：去官网看看<a href="https://www.lightningdesignsystem.com/，所以答案是B" target="_blank" rel="noopener">https://www.lightningdesignsystem.com/，所以答案是B</a></p><ol start="2"><li>What are Lightning Events used for?</li></ol><p>A) Salesforce mini developer conferences</p><p>B) Communicating between loosely coupled components</p><p>C) Logging critical details during app runtime</p><p>D) Scheduling sales calls in Lightning Experience</p><p>答案：Lightning Events主要用于连接component。所以答案是B</p><p>相关参考文献： Events | Lightning Aura Components Developer Guide | Salesforce Developers: <a href="https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/intro_events.htm" target="_blank" rel="noopener">https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/intro_events.htm</a></p><ol start="3"><li>What is the name of the open-source framework that Lightning Components is based on?</li></ol><p>A) Aura<br>B) Angular<br>C) jQuery<br>D) WebObjects</p><p>答案：本文所有内容都是围绕Aura而展开的。所以答案是A。</p><ol start="4"><li>In which language do you write Lightning Components action handlers?</li></ol><p>A) Java<br>B) Visualforce<br>C) JavaScript<br>D) Objective-C</p><p>答案：Lightning Components action 主要是用JavaScript写的，所以答案是C。</p><p>就这样我们成功拿下Lightning Components Basics整个模块：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-10.jpg" alt="image"></p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Components-Basics-16.jpg" alt="image"></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献:"></a>参考文献:</h1><ul><li>Lightning Apps Developer Center: <a href="https://developer.salesforce.com/developer-centers/lightning-apps/" target="_blank" rel="noopener">https://developer.salesforce.com/developer-centers/lightning-apps/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Components Basics 。&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Trailhead" scheme="http://tonyrenhk.github.io/tags/Trailhead/"/>
    
      <category term="开发者II考试" scheme="http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Trailhead学习:解锁Lightning Experience Development</title>
    <link href="http://tonyrenhk.github.io/2018/12/21/2018-12-21-Lightning-Experience-Development/"/>
    <id>http://tonyrenhk.github.io/2018/12/21/2018-12-21-Lightning-Experience-Development/</id>
    <published>2018-12-20T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Experience Development 。</p><a id="more"></a><p>在之前的学习中，我们相继解锁了 Apex Specialist, Data Integration Specialist，现在开始解锁”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)， 相关链接如下：<a href="https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf</a></p><p>同时，这里，附上开发者2考试路线图，链接如下：<a href="https://trailhead.salesforce.com/content/learn/superbadges/superbadge_aap" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/superbadges/superbadge_aap</a></p><p>下面我们讲述新的模块，Lightning Experience Development，这里会学习到新的UX对于Apex，Visualforce，API等的影响。相关链接如下<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview</a></p><h1 id="User-Interface-Development-Considerations"><a href="#User-Interface-Development-Considerations" class="headerlink" title="User Interface Development Considerations"></a>User Interface Development Considerations</h1><p>这一节 (User Interface Development Considerations)，章节链接如下<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_future" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_future</a></p><p><strong>题目1</strong>. Which of the following statements is true about creating apps with Visualforce:</p><p>A)Visualforce is designed primarily for page-centric web apps.</p><p>B)Visualforce renders the page on the server.</p><p>C)Visualforce will be fully supported by Salesforce for years to come.</p><p>D)All of the above.</p><p>解析： Visualforce 至今都被Salesforce广泛支持。所以选择D。</p><p><strong>题目2</strong> Which of the following statements is NOT true about creating apps with Lightning components:</p><p>A) Lightning components are designed primarily for app-centric web apps.</p><p>B) Lightning components can be used everywhere Visualforce can be used.</p><p>C) Lightning components render the page on the client.</p><p>D) All of the above.</p><p>解析：关于利用Lightning components新建app不正确的是B，任何地方使用Lightning components，都可以用Visualforce，显然不对。</p><p><strong>题目3</strong>  Which of the following is a poor use of Lightning Components:</p><p>A) Developing an app for Salesforce1.</p><p>B) Developing a highly interactive app with an innovative user interface.</p><p>C) Developing widgets for use in Lightning App Builder.</p><p>D) None of the above. All of these are good use cases for Lightning Components.</p><p>解析：哪一些是使用Lightning Components不好的例子，答案是D，没有不好的例子。如开发Salesforce1，或Lightning App Builder里面的widgets，都需要用到Lightning Components。</p><p>搞定！</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Experience-Development-1.jpg" alt="image"></p><h1 id="Use-Visualforce-in-Lightning-Experience"><a href="#Use-Visualforce-in-Lightning-Experience" class="headerlink" title="Use Visualforce in Lightning Experience"></a>Use Visualforce in Lightning Experience</h1><p>下面一节讲的是在Lightning中使用Visualforce(Use Visualforce in Lightning Experience），相关链接如下：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_visualforce" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_visualforce</a></p><p>就两道题目，很简单</p><p><strong>题目一</strong>：Which of the following features of Visualforce do NOT work in Lightning Experience:</p><p>A) Creating custom apps and tabs.</p><p>B) Overriding standard actions with Visualforce pages.</p><p>C) Using window.location in JavaScript code.</p><p>D) Remote Objects.</p><p>解析：Lightning Experience 是一个全新的世界，由于无法直接访问’window ‘全局对象，所以答案是C。例如，Visualforce 覆盖标准操作在 Lightning Experience 和Salesforce Classic会有点不同，同时开发人员可以在Salesforce Classic、Lightning Experience 和移动设置不同的覆盖行为。具体而言，开发人员可以为Salesforce Classic中的大多数标准和所有自定义对象覆盖如下六种标准操作：</p><ul><li><p>对象选项卡(Object tab）</p></li><li><p>对象列表(Object list)</p></li><li><p>数据视图Record view)</p></li><li><p>数据编辑(Record edit)</p></li><li><p>新建数据(Record create)</p></li><li><p>删除数据(Record delete)</p></li></ul><p>在Lightning Experience中，前面两项被合并到一个页面：object home。</p><p><strong>题目二</strong> ：Which of the following is NOT true about the user interface and visual design in Lightning Experience:</p><p>A) PDFs render with the Lightning Experience visual design.</p><p>B) You can’t hide the Lightning Experience main navigation header or sidebar.</p><p>C) The &lt; apex:inputField &gt; tag renders with the Salesforce Classic appearance.</p><p>D) The standard Visualforce header and sidebar are hidden.</p><p>解析： 我们可以在Salesforce Classic，通过Visualforce pages生成PDF，根据官方说法，截止发稿时，还无法利用 Lightning Experience设计渲染PDF页面，所以答案是A。</p><p>成功拿到100分。</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Experience-Development-2.jpg" alt="image"></p><h1 id="Use-Lightning-Components-in-Lightning-Experience"><a href="#Use-Lightning-Components-in-Lightning-Experience" class="headerlink" title="Use Lightning Components in Lightning Experience"></a>Use Lightning Components in Lightning Experience</h1><p>相关链接：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_lightning_components" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_lightning_components</a></p><p><strong>题目一</strong>：Which of the following statements about Lightning Components and Lightning Experience is true?</p><p>A) Lightning Experience is something you use directly, Lightning Components are something you build apps with.</p><p>B) Lightning Experience is (mostly) built with Lightning Components.</p><p>C) Lightning Experience uses an app-centric development model using Lightning Components.</p><p>D) All of the above.</p><p>解析：答案是D，Lightning Components 很多时候是用于Lightning Experience。</p><p><strong>题目二</strong>：Which of the following is true of Lightning Components:</p><p>A) Lightning Components can only be used in the Lightning Experience and not the Salesforce1 mobile app.</p><p>B) Lightning Components can be used in Visualforce pages.</p><p>C) Lightning Components are only optimized for the desktop experience.</p><p>D)All of the above.</p><p>解析： Lightning Components 可以用于Visualforce pages,通过’$Lightning.use’可以实现。所以答案是B。</p><h1 id="Salesforce-Partners-Packaging-and-AppExchange"><a href="#Salesforce-Partners-Packaging-and-AppExchange" class="headerlink" title="Salesforce Partners, Packaging, and AppExchange"></a>Salesforce Partners, Packaging, and AppExchange</h1><p>下一章讲到Salesforce Partners, Packaging, and AppExchange，相关链接为：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_isv" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_isv</a></p><p><strong>题目一</strong>：Which of the following ISV features are available in Lightning Experience?</p><p>A) Channel Order App.</p><p>B) Trialforce.</p><p>C) Usage Metrics Visualization app.</p><p>D) Package creation.</p><p>E) None of the above are available.</p><p>解析：package manager是可以在Lightning Experience里面使用的 D。这里值得注意的是，对于ISV，如下模块是支持Classic和Lightning Experience。</p><ul><li>Environment Hub</li><li>License Management App (LMA)</li><li>Checkout Management App (CMA)<br>然而如下模块就不支持，仅仅支持Classic：</li><li>Trialforce</li><li>Channel Order App (COA)</li><li>Usage Metrics Visualization App</li></ul><p><strong>題目二</strong>：As an ISV, which of the following is true about AppExchange:</p><p>A) Your apps undergo a review for Lightning Experience readiness.</p><p>B) Your apps are available to all customers, whether they have enabled Lightning Experience or not.</p><p>C) The ‘Lightning Ready’ certification lets AppExchange visitors know your app is verified for Lightning Experience.</p><p>D) All of the above.</p><p>解析：作为ISV，你的APP是对所有用户，无论对方是不是使用Lightning，所以答案是D，以上所有。</p><p>在这里附上ISVforce Guide：<a href="https://developer.salesforce.com/docs/atlas.en-us.216.0.packagingGuide.meta/packagingGuide/packaging_intro.htm" target="_blank" rel="noopener">https://developer.salesforce.com/docs/atlas.en-us.216.0.packagingGuide.meta/packagingGuide/packaging_intro.htm</a></p><p>搞定!</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Experience-Development-3.jpg" alt="image"></p><h1 id="Understand-Changes-to-Other-Development-Tools"><a href="#Understand-Changes-to-Other-Development-Tools" class="headerlink" title="Understand Changes to Other Development Tools"></a>Understand Changes to Other Development Tools</h1><p>下面一节讲述Understand Changes to Other Development Tools，相关链接为：<a href="https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_other" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_other</a></p><p><strong>题目一</strong>：Which of the following is true of Apex in the new Lightning Experience:</p><p>A) You have to update the API version for all your Apex classes in order for them to work in Lightning Experience.</p><p>B) Apex is not supported in the new Lightning Experience.</p><p>C) Your Apex code and queries continue to function as before.</p><p>D) All of the above</p><p>解析：Apex是支持Lightning Experience，而Lightning Experience是不需要更新所有Apex 类的版本。所以本题答案为C。</p><p><strong>题目二</strong>：What should you look for when reviewing your installed packages before using them with Lightning Experience?</p><p>A) A ‘Lightning Ready’ sash for the package on AppExchange.</p><p>B) An error message saying the package isn’t ‘Lightning Ready’.</p><p>C) A ‘Lightning Ready’ check mark on the Installed Packages page.</p><p>D) Errors in the JavaScript console when using the package.</p><p>解析：如果你的组织是使用Lightning Experience。而当管理员在选择安装app时候，需要看这个app在AppExchange里面是否被标注为’Lightning Ready’ sash，所以本题答案为A。</p><p>就这样，整个’Lightning Experience Development’模块被我们解锁了~</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Experience-Development-4.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Experience Development 。&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Trailhead" scheme="http://tonyrenhk.github.io/tags/Trailhead/"/>
    
      <category term="开发者II考试" scheme="http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"/>
    
      <category term="Lightning" scheme="http://tonyrenhk.github.io/tags/Lightning/"/>
    
  </entry>
  
  <entry>
    <title>Trailhead学习:Data Integration Specialist Superbadge</title>
    <link href="http://tonyrenhk.github.io/2018/12/05/2018-12-05-Data-Integration-Specialist-Superbadge/"/>
    <id>http://tonyrenhk.github.io/2018/12/05/2018-12-05-Data-Integration-Specialist-Superbadge/</id>
    <published>2018-12-04T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>Trailhead学习：Data Integration Specialist Superbadge</p><a id="more"></a><p>欲破解该Superbadge需要先破解Lightning Flow模块，相关链接如下：</p><p><a href="https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_integration" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_integration</a></p><p>需安装如下’Data Integration Specialist Superbadge’ package：</p><p><a href="https://login.salesforce.com/packaging/installPackage.apexp?p0=04t41000001T3kx" target="_blank" rel="noopener">https://login.salesforce.com/packaging/installPackage.apexp?p0=04t41000001T3kx</a></p><h1 id="Configure-outbound-application-and-integration-security"><a href="#Configure-outbound-application-and-integration-security" class="headerlink" title="Configure outbound application and integration security"></a>Configure outbound application and integration security</h1><p>题目要求如下：</p><p>Install the unmanaged package from the prework if you haven’t already. Configure a named credential and remote site according to the specifications outlined in the business requirements. Enter the billing service credentials in the custom setting.</p><p>在设置(Setup)下-&gt;安全性控制 -&gt;远程站点设置, 远程站点名称设置为BillingService，远程站点 URL为：<a href="http://sb-integration-bs.herokuapp.com" target="_blank" rel="noopener">http://sb-integration-bs.herokuapp.com</a></p><p>在安全性控制中添加新的命名凭证:</p><pre><code>* 标签：ProjectService* 名称：ProjectService* URL：https://sb-integration-pms.herokuapp.com/projects* 身份类型：命名首要* 验证协议：密码验证* 用户名：pmsUser1* 密码：pmsUser1* 生成授权标题：打上勾√    </code></pre><p>添加连接的应用程序：API 名称设置为ProjectService，系统会生成一个’客户键’和’消费者秘密’。然后在如下链接测试你的链接<br><a href="https://sb-integration-pms.herokuapp.com" target="_blank" rel="noopener">https://sb-integration-pms.herokuapp.com</a>.</p><p>结果会在URL体现出来，同时,会得到一个Token，成功的URL会如下：<br><a href="https://sb-integration-pms.herokuapp.com/test?success=true" target="_blank" rel="noopener">https://sb-integration-pms.herokuapp.com/test?success=true</a></p><p>在Custom Setting添加一条记录ServiceCredentials，名字是BillingServiceCredential，username是bsUser1，Password是bsPass1。</p><h1 id="Configure-inbound-integration-security"><a href="#Configure-inbound-integration-security" class="headerlink" title="Configure inbound integration security"></a>Configure inbound integration security</h1><p>题目要求如下<br>Configure the PMS Connected App according to the specifications outlined in the business requirements. Then register the connected app with the Org Registration Heroku app and test the connection. Enter the project service security token into the custom setting.</p><p>基于上面一题得到的Token，在Custom Setting中的ServiceTokens加一条名字为ProjectServiceToken的记录</p><h1 id="Synchronize-Salesforce-opportunity-data-with-Square-Peg’s-PMS-external-system"><a href="#Synchronize-Salesforce-opportunity-data-with-Square-Peg’s-PMS-external-system" class="headerlink" title="Synchronize Salesforce opportunity data with Square Peg’s PMS external system"></a>Synchronize Salesforce opportunity data with Square Peg’s PMS external system</h1><p>Build a Process Builder process on the opportunity object to invoke an Apex REST callout to the external PMS as outlined in the requirements section.<br>本题考查的是进程生成器(Process Builder)调用Apex类。</p><p>同时，需要在业务机会(Opportunity) Type字段加一个新的选项’New Project’</p><p>Apex 类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProjectCalloutService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//method to be invoked by ProcessBuilder apex</span></span><br><span class="line">    <span class="meta">@InvocableMethod</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">postOpportunityToPMS</span><span class="params">(List&lt;Id&gt; oppoIds)</span></span>&#123;</span><br><span class="line">        Opportunity opp = [SELECT Id,Name,Account.Name,CloseDate,Amount FROM Opportunity WHERE Id = :oppoIds[<span class="number">0</span>]];</span><br><span class="line">        String serviceToken = ServiceTokens__c.getValues(<span class="string">'ProjectServiceToken'</span>).Token__c;</span><br><span class="line">        </span><br><span class="line">        String jsonInput = <span class="string">'&#123;\n'</span> +</span><br><span class="line">            <span class="string">' "opportunityId" : "'</span>+opp.Id+<span class="string">'",\n'</span>+</span><br><span class="line">            <span class="string">' "opportunityName" : "'</span>+opp.Name+<span class="string">'",\n'</span>+</span><br><span class="line">            <span class="string">' "accountName" : "'</span>+opp.Account.Name+<span class="string">'",\n'</span>+</span><br><span class="line">            <span class="string">' "closeDate" : "'</span>+String.ValueOf(opp.CloseDate).mid(<span class="number">0</span>,<span class="number">10</span>)+<span class="string">'",\n'</span>+   </span><br><span class="line">            <span class="string">' "amount" : "'</span>+opp.Amount+<span class="string">'"\n&#125;'</span>;</span><br><span class="line">            </span><br><span class="line">        System.enqueueJob(<span class="keyword">new</span> QueueablePMSCall(serviceToken, jsonInput, opp.Id));</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">QueueablePMSCall</span> <span class="keyword">implements</span> <span class="title">System</span>.<span class="title">Queueable</span>, <span class="title">Database</span>.<span class="title">AllowsCallouts</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String serviceToken;</span><br><span class="line">        <span class="keyword">private</span> String jsonInput;</span><br><span class="line">        <span class="keyword">private</span> Id oppId;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">QueueablePMSCall</span><span class="params">(String serviceToken, String jsonInput, Id oppId)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.serviceToken = serviceToken;</span><br><span class="line">            <span class="keyword">this</span>.jsonInput = jsonInput;</span><br><span class="line">            <span class="keyword">this</span>.oppId = oppId;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(QueueableContext qc)</span></span>&#123;</span><br><span class="line">            postToPMS(serviceToken, jsonInput, oppId);        </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Future</span>(callout=<span class="keyword">true</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">postToPMS</span><span class="params">(String serviceToken, String jsonInput, Id oppoId)</span></span>&#123;</span><br><span class="line">        HTTPRequest req = <span class="keyword">new</span> HTTPRequest();</span><br><span class="line">        req.setEndPoint(<span class="string">'callout:ProjectService'</span>);</span><br><span class="line">        req.setMethod(<span class="string">'POST'</span>);</span><br><span class="line">        req.setHeader(<span class="string">'token'</span>,serviceToken);</span><br><span class="line">        req.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json;charset=UTF-8'</span>);</span><br><span class="line">        req.setBody(jsonInput);</span><br><span class="line">        </span><br><span class="line">        HTTP http = <span class="keyword">new</span> HTTP();</span><br><span class="line">        HTTPResponse res = http.send(req);</span><br><span class="line">        </span><br><span class="line">        Opportunity opp = <span class="keyword">new</span> Opportunity(Id=oppoId);</span><br><span class="line">        <span class="keyword">if</span>(res.getStatusCode() == <span class="number">201</span>)&#123;</span><br><span class="line">            opp.StageName = <span class="string">'Submitted Project'</span>;                </span><br><span class="line">            System.debug(<span class="string">'Success: '</span> + res.getStatus());</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            opp.StageName = <span class="string">'Resubmit Project'</span>;</span><br><span class="line">            System.debug(<span class="string">'Failure: '</span> + res.getStatusCode() + <span class="string">' '</span> + res.getStatus());</span><br><span class="line">        &#125;</span><br><span class="line">        update opp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后需要新建一个进程生成器(Process Builder) ，可以命名为Update Opportunity with Opportunity object selection.</p><p>总图为：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Superbadge/Data-Integration-Specialist-Superbadge-1.jpg" alt="image"></p><p>选择Opportunity，中间判断条件可以设置为：Opportunity Type with stage change</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Superbadge/Data-Integration-Specialist-Superbadge-2.jpg" alt="image"></p><p>下面是用进程生成器(Process Builder)调用Apex类</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Superbadge/Data-Integration-Specialist-Superbadge-3.jpg" alt="image"></p><h1 id="Test-outbound-Apex-REST-callout-logic"><a href="#Test-outbound-Apex-REST-callout-logic" class="headerlink" title="Test outbound Apex REST callout logic"></a>Test outbound Apex REST callout logic</h1><p>Build tests for your Apex outbound service logic using the included stubs (ProjectCalloutServiceMock and ProjectCalloutServiceMockFailure) and callout test class (ProjectCalloutServiceTest) in the package. You must have 90% test coverage to pass this challenge and assert values to prove that your logic is working as expected.</p><p>基于上一题写一个测试类，同时要求90%代码覆盖率。<br>成功例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@isTest</span></span><br><span class="line">global <span class="class"><span class="keyword">class</span> <span class="title">ProjectCalloutServiceMock</span> <span class="keyword">implements</span> <span class="title">HttpCalloutMock</span></span>&#123;</span><br><span class="line">   <span class="comment">//Implement http mock callout here</span></span><br><span class="line">   <span class="comment">// Implement this interface method</span></span><br><span class="line">   <span class="function">global HTTPResponse <span class="title">respond</span><span class="params">(HTTPRequest request)</span></span>&#123;</span><br><span class="line">       <span class="comment">// Create a fake response</span></span><br><span class="line">       HttpResponse response = <span class="keyword">new</span> HttpResponse();</span><br><span class="line">       response.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">       response.setStatus(<span class="string">'OK'</span>);</span><br><span class="line">       response.setStatusCode(<span class="number">201</span>);</span><br><span class="line">              </span><br><span class="line">       <span class="keyword">return</span> response;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>失败的例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@isTest</span></span><br><span class="line">global <span class="class"><span class="keyword">class</span> <span class="title">ProjectCalloutServiceMockFailure</span> <span class="keyword">implements</span> <span class="title">HttpCalloutMock</span></span>&#123;</span><br><span class="line">   <span class="comment">//Implement http mock callout here</span></span><br><span class="line">   <span class="comment">// Implement this interface method</span></span><br><span class="line">   <span class="function">global HTTPResponse <span class="title">respond</span><span class="params">(HTTPRequest request)</span></span>&#123;</span><br><span class="line">       <span class="comment">// Create a fake response</span></span><br><span class="line">       HttpResponse response = <span class="keyword">new</span> HttpResponse();</span><br><span class="line">       response.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">       response.setStatus(<span class="string">'Bad Response'</span>);</span><br><span class="line">       response.setStatusCode(<span class="number">500</span>);</span><br><span class="line">              </span><br><span class="line">       <span class="keyword">return</span> response;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后写测试类，其中testSetupdata是新建测试数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@isTest</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ProjectCalloutServiceTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">//Implement mock callout tests here</span></span><br><span class="line">   <span class="meta">@testSetup</span> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testSetupdata</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//create the opportunity record</span></span><br><span class="line">        Opportunity opp1 = <span class="keyword">new</span> Opportunity();</span><br><span class="line">        opp1.Name = <span class="string">'Test Opp1'</span>;</span><br><span class="line">        opp1.Type = <span class="string">'New Project'</span>;</span><br><span class="line">        opp1.Amount = <span class="number">100</span>;</span><br><span class="line">        opp1.CloseDate = Date.today();</span><br><span class="line">        opp1.StageName = <span class="string">'Submitted Project'</span>;</span><br><span class="line">        insert opp1;</span><br><span class="line">        <span class="comment">//create the opportunity record</span></span><br><span class="line">        Opportunity opp2 = <span class="keyword">new</span> Opportunity();</span><br><span class="line">        opp2.Name = <span class="string">'Test Opp2'</span>;</span><br><span class="line">        opp2.Type = <span class="string">'New Project'</span>;</span><br><span class="line">        opp2.Amount = <span class="number">200</span>;</span><br><span class="line">        opp2.CloseDate = Date.today();</span><br><span class="line">        opp2.StageName = <span class="string">'Resubmit Project'</span>;</span><br><span class="line">        insert opp2;</span><br><span class="line">        <span class="comment">//create the Custom Settings</span></span><br><span class="line">        ServiceTokens__c servToken = <span class="keyword">new</span> ServiceTokens__c();</span><br><span class="line">        servToken.Name = <span class="string">'ProjectServiceToken'</span>;</span><br><span class="line">        servToken.Token__c = <span class="string">'qwertyuiopnjhgft'</span>;</span><br><span class="line">        insert servToken;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@isTest</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testSuccessMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">      Opportunity opp = [Select Id, Name FROM Opportunity WHERE Name = <span class="string">'Test Opp1'</span> Limit <span class="number">1</span>];</span><br><span class="line">      List&lt;Id&gt; lstOfOppIds = <span class="keyword">new</span> List&lt;Id&gt;();</span><br><span class="line">      lstOfOppIds.add(opp.Id);</span><br><span class="line">      <span class="comment">// Set mock callout class</span></span><br><span class="line">      Test.setMock(HttpCalloutMock.class, <span class="keyword">new</span> ProjectCalloutServiceMock());</span><br><span class="line">      <span class="comment">// This causes a fake response to be sent</span></span><br><span class="line">      <span class="comment">// from the class that implements HttpCalloutMock. </span></span><br><span class="line">      Test.startTest();</span><br><span class="line">          ProjectCalloutService.postOpportunityToPMS(lstOfOppIds);</span><br><span class="line">      Test.stopTest();    </span><br><span class="line">      <span class="comment">// Verify that the response received contains fake values        </span></span><br><span class="line">      opp = [select StageName from Opportunity where id =: opp.Id];</span><br><span class="line">      System.assertEquals(<span class="string">'Submitted Project'</span>,opp.StageName);     </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@isTest</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testFailureMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">      Opportunity opp = [Select Id, Name FROM Opportunity WHERE Name = <span class="string">'Test Opp2'</span> Limit <span class="number">1</span>];</span><br><span class="line">      List&lt;Id&gt; lstOfOppIds = <span class="keyword">new</span> List&lt;Id&gt;();</span><br><span class="line">      lstOfOppIds.add(opp.Id);</span><br><span class="line">      <span class="comment">// Set mock callout class</span></span><br><span class="line">      Test.setMock(HttpCalloutMock.class, <span class="keyword">new</span> ProjectCalloutServiceMockFailure());</span><br><span class="line">      <span class="comment">// This causes a fake response to be sent</span></span><br><span class="line">      <span class="comment">// from the class that implements HttpCalloutMock. </span></span><br><span class="line">      Test.startTest();</span><br><span class="line">          ProjectCalloutService.postOpportunityToPMS(lstOfOppIds);</span><br><span class="line">      Test.stopTest();    </span><br><span class="line">      <span class="comment">// Verify that the response received contains fake values        </span></span><br><span class="line">      opp = [select StageName from Opportunity where id =: opp.Id];</span><br><span class="line">      System.assertEquals(<span class="string">'Resubmit Project'</span>,opp.StageName);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Synchronize-external-PMS-system-project-data-with-Salesforce"><a href="#Synchronize-external-PMS-system-project-data-with-Salesforce" class="headerlink" title="Synchronize external PMS system project data with Salesforce"></a>Synchronize external PMS system project data with Salesforce</h1><p>Use the requirements above to implement an Apex REST service to process related project and opportunity data that comes in from the Square Peg external application. Before checking this section, run the service method in the ProjectRESTService class to confirm that it’s working as expected.</p><p>本题考查的是如何使得外部系统PMS 的数据和Salesforce保持一致。根据题目要求，需要写一个Apex REST服务类，用于接收外部系统Post过来的数据，获得的数据可以更新或者插入到Salesforce数据库中。<br>写好之后的测试URL可以如下：</p><p><a href="https://YOUR_INSTANCE.salesforce.com/services/apexrest/project" target="_blank" rel="noopener">https://YOUR_INSTANCE.salesforce.com/services/apexrest/project</a> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestResource</span>(urlMapping = <span class="string">'/project/*'</span>)</span><br><span class="line">global with sharing <span class="class"><span class="keyword">class</span> <span class="title">ProjectRESTService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@HttpPost</span></span><br><span class="line">    <span class="function">global <span class="keyword">static</span> String <span class="title">postProjectData</span><span class="params">(String ProjectRef, String ProjectName, String OpportunityId,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       Date StartDate, Date EndDate, Double Amount, String Status)</span></span>&#123;</span><br><span class="line">        String retMsg = <span class="string">'Error'</span>;</span><br><span class="line">                </span><br><span class="line">        SavePoint sp1 = Database.setSavePoint();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            List&lt;Opportunity&gt; lstOfOpps = <span class="keyword">new</span> List&lt;Opportunity&gt;();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(OpportunityId != <span class="keyword">null</span> &amp;&amp; OpportunityId.trim().length() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                Opportunity opp = [SELECT Id, DeliveryInstallationStatus__c, Discount_Percent__c FROM Opportunity WHERE Id = :OpportunityId];</span><br><span class="line">                opp.DeliveryInstallationStatus__c = <span class="string">'In progress'</span>;</span><br><span class="line">                                </span><br><span class="line">                lstOfOpps.add(opp);</span><br><span class="line">            &#125;</span><br><span class="line">            UPDATE lstOfOpps;</span><br><span class="line">            </span><br><span class="line">            List&lt;Project__c&gt; lstOfRrjts = <span class="keyword">new</span> List&lt;Project__c&gt;();</span><br><span class="line">            </span><br><span class="line">            Project__c prjt = <span class="keyword">new</span> Project__c();</span><br><span class="line">            prjt.ProjectRef__c = ProjectRef;</span><br><span class="line">            prjt.Name = ProjectName;</span><br><span class="line">            prjt.Opportunity__c = OpportunityId;</span><br><span class="line">            prjt.Start_Date__c = StartDate;</span><br><span class="line">            prjt.End_Date__c = EndDate;</span><br><span class="line">            prjt.Billable_Amount__c = Amount;</span><br><span class="line">            prjt.Status__c = Status;</span><br><span class="line">            </span><br><span class="line">            lstOfRrjts.add(prjt);</span><br><span class="line">            </span><br><span class="line">            UPSERT lstOfRrjts;</span><br><span class="line">            </span><br><span class="line">            retMsg = <span class="string">'OK'</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">            Database.rollback(sp1);</span><br><span class="line">            retMsg = ex.getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> retMsg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Test-inbound-Apex-REST-service-logic"><a href="#Test-inbound-Apex-REST-service-logic" class="headerlink" title="Test inbound Apex REST service logic"></a>Test inbound Apex REST service logic</h1><p>Build tests for your Apex REST service logic using the stub for the test class (ProjectRESTServiceTest) in the package. You must have 90% test coverage to pass this challenge and assert values to prove that your logic is working as expected.</p><p>写好了Apex 类，现在需要写一个测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@isTest</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ProjectRESTServiceTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@testSetup</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadServiceData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Opportunity opp = <span class="keyword">new</span> Opportunity();</span><br><span class="line">        opp.Name = <span class="string">'Test Opportunity'</span>;</span><br><span class="line">        opp.DeliveryInstallationStatus__c = <span class="string">'In progress'</span>;</span><br><span class="line">        opp.CloseDate = (Date.today()).addDays(<span class="number">20</span>);</span><br><span class="line">        opp.StageName = <span class="string">'Submitted Project'</span>;</span><br><span class="line">        INSERT opp;</span><br><span class="line">        </span><br><span class="line">        Project__c prjt = <span class="keyword">new</span> Project__c();</span><br><span class="line">        prjt.ProjectRef__c = <span class="string">'ProjectRef'</span>;</span><br><span class="line">        prjt.Name = <span class="string">'ProjectName'</span>;</span><br><span class="line">        prjt.Opportunity__c = opp.Id;</span><br><span class="line">        prjt.Start_Date__c = Date.today();</span><br><span class="line">        prjt.End_Date__c = (Date.today()).addDays(<span class="number">10</span>);</span><br><span class="line">        prjt.Billable_Amount__c = <span class="number">1000</span>;</span><br><span class="line">        prjt.Status__c = <span class="string">'Running'</span>;</span><br><span class="line">        INSERT prjt;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@isTest</span>    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testProjectRESTService</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Project__c prjt = [SELECT Id, ProjectRef__c, Name, Opportunity__c, Start_Date__c, End_Date__c, Billable_Amount__c, Status__c FROM Project__c LIMIT <span class="number">1</span>];</span><br><span class="line">        Test.startTest();</span><br><span class="line">        Opportunity opp = [SELECT Id FROM Opportunity LIMIT <span class="number">1</span>];</span><br><span class="line">        System.assertEquals(<span class="number">1</span>,[<span class="function">SELECT <span class="title">count</span><span class="params">()</span> FROM Opportunity])</span>;                          </span><br><span class="line">        String returnMessage = ProjectRESTService.postProjectData(<span class="string">'ProjectRef'</span>, <span class="string">'ProjectName'</span>, String.valueOf(opp.Id),  Date.today(), Date.today(), <span class="number">1000</span>, <span class="string">'Running'</span>);                          </span><br><span class="line">        Test.stopTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Synchronize-Salesforce-project-data-with-Square-Peg’s-external-billing-system"><a href="#Synchronize-Salesforce-project-data-with-Square-Peg’s-external-billing-system" class="headerlink" title="Synchronize Salesforce project data with Square Peg’s external billing system"></a>Synchronize Salesforce project data with Square Peg’s external billing system</h1><p>Perform the necessary steps, as outlined in the requirements, to make an outbound authenticated Apex callout to Square Peg’s external billing system’s SOAP service. To pass this challenge, delete the unused Async process class that is autogenerated from the WSDL AsyncBillingServiceProxy.</p><p>下载XML：</p><p><a href="http://sb-integration-bs.herokuapp.com/ws/invoices.wsdl" target="_blank" rel="noopener">http://sb-integration-bs.herokuapp.com/ws/invoices.wsdl</a></p><p>在Apex Class 里，点击’ Generate from WSDL’,并生成一个名为BillingServiceProxy 的proxy类。</p><p>相关参考链接如下：<br><a href="https://help.salesforce.com/articleView?id=code_wsdl_to_package.htm&amp;type=5" target="_blank" rel="noopener">https://help.salesforce.com/articleView?id=code_wsdl_to_package.htm&amp;type=5</a></p><p>同时题目要求ProjectTrigger 调用 ‘BillingCalloutService.callBillingService()并且传入新旧记录的参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BillingCalloutService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@future</span>(callout = <span class="keyword">true</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">callBillingService</span><span class="params">(String projectRef, Decimal billingAmount)</span></span>&#123;</span><br><span class="line">        ServiceCredentials__c srvcCrd = ServiceCredentials__c.getValues(<span class="string">'BillingServiceCredential'</span>);</span><br><span class="line">                </span><br><span class="line">        BillingServiceProxy.project projectInst = <span class="keyword">new</span> BillingServiceProxy.project();</span><br><span class="line">        projectInst.username = srvcCrd.Username__c;</span><br><span class="line">        projectInst.password = srvcCrd.Password__c;</span><br><span class="line">        projectInst.billAmount = billingAmount;</span><br><span class="line">        </span><br><span class="line">        BillingServiceProxy.InvoicesPortSoap11 invPortSoapInst = <span class="keyword">new</span> BillingServiceProxy.InvoicesPortSoap11();</span><br><span class="line">        String response = invPortSoapInst.billProject(projectInst);</span><br><span class="line">        </span><br><span class="line">        List&lt;Project__c&gt; lstOfProjects = <span class="keyword">new</span> List&lt;Project__c&gt;();</span><br><span class="line">        <span class="keyword">if</span>(response != <span class="keyword">null</span> &amp;&amp; response.equalsIgnoreCase(<span class="string">'OK'</span>))&#123;</span><br><span class="line">            List&lt;Project__c&gt; lstOfPrjts = [SELECT Status__c FROM Project__c WHERE ProjectRef__c = :projectRef];</span><br><span class="line">            <span class="keyword">for</span>(Project__c prjt : lstOfPrjts)&#123;</span><br><span class="line">                prjt.Status__c = <span class="string">'Billed'</span>;</span><br><span class="line">                </span><br><span class="line">                lstOfProjects.add(prjt);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            UPDATE lstOfProjects;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Trigger这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">trigger ProjectTrigger on <span class="title">Project__c</span> <span class="params">(after update)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Trigger.isAfter &amp;&amp; Trigger.isUpdate)&#123;</span><br><span class="line">        <span class="keyword">for</span>(Project__c prjt : Trigger.new)&#123;</span><br><span class="line">            <span class="keyword">if</span>(prjt.Status__c != <span class="keyword">null</span> &amp;&amp; prjt.Status__c.equals(<span class="string">'Billable'</span>))&#123;</span><br><span class="line">                BillingCalloutService.callBillingService(prjt.ProjectRef__c, prjt.Billable_Amount__c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Test-outbound-Apex-SOAP-callout-logic"><a href="#Test-outbound-Apex-SOAP-callout-logic" class="headerlink" title="Test outbound Apex SOAP callout logic"></a>Test outbound Apex SOAP callout logic</h1><p>Build tests for your SOAP callout and assert proper behavior using the included stubs (BillingCalloutServiceMock and BillingCalloutServiceMockFailure) and callout test class (BillingCalloutServiceTest) in the package. You must have 90% test coverage to pass this challenge and assert values to prove that your logic is working as expected.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@isTest</span></span><br><span class="line">global <span class="class"><span class="keyword">class</span> <span class="title">BillingCalloutServiceMock</span> <span class="keyword">implements</span> <span class="title">WebServiceMock</span> </span>&#123;</span><br><span class="line">   <span class="function">global <span class="keyword">void</span> <span class="title">doInvoke</span><span class="params">(Object stub,Object request,Map&lt;String, Object&gt; response,String endpoint,String soapAction,String requestName,String responseNS, String responseName,String responseType)</span></span>&#123;</span><br><span class="line">           BillingServiceProxy.billProjectResponse_element response_x = <span class="keyword">new</span> BillingServiceProxy.billProjectResponse_element();</span><br><span class="line">           response_x.status = <span class="string">'OK'</span>;</span><br><span class="line">           response.put(<span class="string">'response_x'</span>, response_x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">global <span class="class"><span class="keyword">class</span> <span class="title">BillingCalloutServiceMockFailure</span> <span class="keyword">implements</span> <span class="title">WebServiceMock</span> </span>&#123;</span><br><span class="line">    <span class="function">global <span class="keyword">void</span> <span class="title">doInvoke</span><span class="params">(Object stub,Object request,Map&lt;String, Object&gt; response,String endpoint,String soapAction, String requestName, String responseNS,String responseName,String responseType)</span> </span>&#123;</span><br><span class="line">        BillingServiceProxy.billProjectResponse_element response_x = <span class="keyword">new</span> BillingServiceProxy.billProjectResponse_element();</span><br><span class="line">        response_x.status = <span class="string">'ERROR'</span>;</span><br><span class="line">        response.put(<span class="string">'response_x'</span>, response_x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@isTest</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">BillingCalloutServiceTest</span> </span>&#123;</span><br><span class="line">  <span class="meta">@testSetup</span> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        Opportunity oppo = <span class="keyword">new</span> Opportunity();</span><br><span class="line">        oppo.Name = <span class="string">'TestOpp1'</span>;</span><br><span class="line">        oppo.CloseDate = Date.today();</span><br><span class="line">        oppo.StageName = <span class="string">'Prospecting'</span>;</span><br><span class="line">        insert oppo;</span><br><span class="line">        </span><br><span class="line">        Project__c proj = <span class="keyword">new</span> Project__c();</span><br><span class="line">        proj.Name = <span class="string">'TestProj1'</span>;</span><br><span class="line">        proj.Billable_Amount__c = <span class="number">1000</span>;        </span><br><span class="line">        proj.ProjectRef__c = <span class="string">'TestRef1'</span>;</span><br><span class="line">        proj.Status__c = <span class="string">'Running'</span>;</span><br><span class="line">        proj.Opportunity__c = oppo.Id;</span><br><span class="line">        insert proj;</span><br><span class="line">        </span><br><span class="line">        ServiceCredentials__c servCred = <span class="keyword">new</span> ServiceCredentials__c();</span><br><span class="line">        servCred.Name = <span class="string">'BillingServiceCredential'</span>;</span><br><span class="line">        servCred.Username__c = <span class="string">'usr1'</span>;</span><br><span class="line">        servCred.Password__c = <span class="string">'pwd1'</span>;</span><br><span class="line">        insert servCred;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@isTest</span> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testCalloutSuccess</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Test.setMock(WebServiceMock.class, <span class="keyword">new</span> BillingCalloutServiceMock()); </span><br><span class="line">        List&lt;Project__c&gt; prjt = [SELECT Status__C FROM Project__c WHERE ProjectRef__c = <span class="string">'TestRef1'</span>];</span><br><span class="line">        System.assertEquals(<span class="number">1</span>, prjt.size());</span><br><span class="line">        Test.startTest(); </span><br><span class="line">            prjt[<span class="number">0</span>].Status__c = <span class="string">'Billable'</span>;</span><br><span class="line">            update prjt;</span><br><span class="line">        Test.stopTest();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@isTest</span> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testCalloutFailure</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Test.setMock(WebServiceMock.class, <span class="keyword">new</span> BillingCalloutServiceMockFailure()); </span><br><span class="line">        List&lt;Project__c&gt; prjt = [SELECT Status__C FROM Project__c WHERE ProjectRef__c = <span class="string">'TestRef1'</span>];</span><br><span class="line">        System.assertEquals(<span class="number">1</span>, prjt.size());</span><br><span class="line">        Test.startTest(); </span><br><span class="line">            prjt[<span class="number">0</span>].Status__c = <span class="string">'Running'</span>;</span><br><span class="line">            update prjt;</span><br><span class="line">        Test.stopTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Synchronize-external-billing-data-with-Salesforce-in-real-time"><a href="#Synchronize-external-billing-data-with-Salesforce-in-real-time" class="headerlink" title="Synchronize external billing data with Salesforce in real time"></a>Synchronize external billing data with Salesforce in real time</h1><p>Configure Salesforce Connect to integrate with Square Peg’s external billing system to expose invoice information as children of projects as outlined in the requirements.</p><p>根据题目要求，需要设置一个external data source的连接。路径为：setup–&gt;external data source</p><p>然后输入如下信息：</p><p>External Data Source:    BillingService<br>Name:    BillingService<br>Type:    Salesforce Connect OData 2.0<br>URL:    <a href="https://sb-integration-is.herokuapp.com/odata" target="_blank" rel="noopener">https://sb-integration-is.herokuapp.com/odata</a><br>Identity Type:    Anonymous<br>Authentication Protocol:No Authentication</p><p>同时需要新建一个external对象切名字为 “invoices”。</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Superbadge/Data-Integration-Specialist-Superbadge-4.jpg" alt="image"></p><p>就这样，我们获得了Data Integration Specialist，一次性得到了6500分。</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Superbadge/Data-Integration-Specialist-Superbadge-6.jpg" alt="image"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li>Calega/Data-Integration-Specialist-Superbadge: Data integration specialist superbadge solution.: <a href="https://github.com/Calega/Data-Integration-Specialist-Superbadge" target="_blank" rel="noopener">https://github.com/Calega/Data-Integration-Specialist-Superbadge</a></li><li>Salesforce Tips and Tricks for Developer: <a href="http://sfdccodepractices.blogspot.com/" target="_blank" rel="noopener">http://sfdccodepractices.blogspot.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Trailhead学习：Data Integration Specialist Superbadge&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Superbadge" scheme="http://tonyrenhk.github.io/tags/Superbadge/"/>
    
      <category term="Trailhead" scheme="http://tonyrenhk.github.io/tags/Trailhead/"/>
    
      <category term="开发者II考试" scheme="http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo-theme-doc主题实现中文搜索</title>
    <link href="http://tonyrenhk.github.io/2018/11/27/2018-11-27-hexo-theme-doc-SupportCN/"/>
    <id>http://tonyrenhk.github.io/2018/11/27/2018-11-27-hexo-theme-doc-SupportCN/</id>
    <published>2018-11-26T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>由于 hexo-theme-doc主题无法实现中文搜索，更新build json 有关代码，实现中文搜索功能。</p><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>如果你找到这篇文章，说明你已经在使用hexo-theme-doc，并且已经知道hexo是什么和hexo-theme-doc怎么安装了。</p><p>hexo-theme-doc是一个很好的帮助文档Theme，页面简洁，可以参考<a href="https://github.com/zalando-incubator/hexo-theme-doc" target="_blank" rel="noopener">https://github.com/zalando-incubator/hexo-theme-doc</a></p><p>由于项目需要建立帮助文档，所以选择了hexo-theme-doc，但是发现在中文界面下无法使用搜索功能。</p><p>在Github向他们提出了有关问题，因为是 lunr.js出了问题，他们好像也没办法，<a href="https://github.com/zalando-incubator/hexo-theme-doc/issues/143" target="_blank" rel="noopener">https://github.com/zalando-incubator/hexo-theme-doc/issues/143</a></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>本次修改的lunr.js的版本是2.1.0，不知道以后会不会支持中文，同时hexo-theme-doc 的版本是1.0.0-rc.1。</p><p>hexo-theme-doc搜索的原理是通过lunr.js生成一个lunr.json文件，把hexo post的内容全部变成Json格式，然后检索时候，就在这个Json文件里面寻找。</p><p>现在问题就出在这个lunr.json，如果你在博客里面输入中文，那么在生成静态文件时，打开lunr.json文件会发现里面的Json的Body是一大堆乱码。由于这一些乱码，在之后的搜索功能就自然找不到需要的关键字或者文章。</p><p>首先要解决build json出来的时候乱码问题，在lib/nodejs/search/build.js下,112行，直接comment掉有关代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&apos;h1,h2&apos;).each(function() &#123;</span><br><span class="line">    。。。</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样生成的Json文件的中文字就会正常显示了，相关改动可以参考如下：<br><a href="https://github.com/TonyRenHK/hexo-theme-doc/commit/c543d21a3dbbd79000f99babc98eba6c2fd029e5" target="_blank" rel="noopener">https://github.com/TonyRenHK/hexo-theme-doc/commit/c543d21a3dbbd79000f99babc98eba6c2fd029e5</a></p><p>由于修改了相关Json文件，所以在生成的search 模块也需要进行相应的修改。这里修改就可以根据实际需要进行修改。修改的文件在 lib/browser/search/components.jsx下。其中SearchForm就是需要修改的search模块。<br>这里把页面也直接翻译成中文页面：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SearchResultsTitle</span>(<span class="params">&#123; results, query &#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1 className=<span class="string">"doc-search-results__title"</span>&gt;</span><br><span class="line">        搜索 &lt;span className=<span class="string">"doc-search-results__title__query"</span>&gt;<span class="string">"&#123;query&#125;"</span>&lt;<span class="regexp">/span&gt;，&#123; results.length ? results.length+'个' : '没有' &#125; 结果 ：</span></span><br><span class="line"><span class="regexp">      &lt;/</span>h1&gt;</span><br><span class="line"></span><br><span class="line">      &#123; !results.length ? &lt;p&gt;系统未能搜索 "&#123;query&#125;"到结果.  &lt;strong&gt;试试其他关键字？&lt;/strong&gt;&lt;/p&gt; : <span class="literal">null</span> &#125;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></p><p>同时值得注意的是，搜索检索出来的是整个博客文章body，有时候，需要裁剪有关文章，比如只需要显示先后100个字。这里可以参考如下的cut budy 方法。如下方法仅供参考。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateBody</span>(<span class="params">body, query</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> indexNumber = body.indexOf(query);</span><br><span class="line">  <span class="keyword">var</span> bodyLength = body.length;</span><br><span class="line">  <span class="keyword">var</span> returnBody = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">var</span> frontCut = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">var</span> bodyCut = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (indexNumber &lt; frontCut &amp;&amp; bodyLength &gt; bodyCut) &#123;</span><br><span class="line">    returnBody = body.substring(<span class="number">0</span>, bodyCut) + <span class="string">'。。。'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (indexNumber &lt; frontCut &amp;&amp; bodyLength &lt; bodyCut) &#123;</span><br><span class="line">    returnBody = body.substring(<span class="number">0</span>, bodyLength);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (indexNumber &gt; frontCut &amp;&amp; bodyLength &gt; (bodyCut + indexNumber)) &#123;</span><br><span class="line">    returnBody = <span class="string">'。。。'</span> + body.substring(indexNumber - frontCut, bodyCut + indexNumber) + <span class="string">'。。。'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (indexNumber &gt; frontCut &amp;&amp; bodyLength &lt; (bodyCut + indexNumber)) &#123;</span><br><span class="line">    returnBody = <span class="string">'。。。'</span> + body.substring(indexNumber - frontCut, bodyLength);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//add highlight </span></span><br><span class="line">  returnBody = returnBody.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(query, <span class="string">'g'</span>), <span class="string">'&lt;span style="font-weight: bold;"&gt;'</span> + query + <span class="string">'&lt;/span&gt;'</span>);</span><br><span class="line">  <span class="keyword">return</span> returnBody;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以参考最后修改版本的search components：</p><p><a href="https://github.com/TonyRenHK/hexo-theme-doc/blob/6a11a284a6fb136252744260dd1fdb511e1773c2/lib/browser/search/components.jsx" target="_blank" rel="noopener">https://github.com/TonyRenHK/hexo-theme-doc/blob/6a11a284a6fb136252744260dd1fdb511e1773c2/lib/browser/search/components.jsx</a></p><p>修改完成之后需要利用Webpack 和 node-sass 进行编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run compile</span><br></pre></td></tr></table></figure><p>而编译生成的文件在source/script/doc.js 。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>有关代码如下：</p><p><a href="https://github.com/TonyRenHK/hexo-theme-doc" target="_blank" rel="noopener">https://github.com/TonyRenHK/hexo-theme-doc</a></p><p>当然，实现中文搜索的方法不唯一，欢迎留言讨论。如上方法仅供参考。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li>olivernn/lunr.js: A bit like Solr, but much smaller and not as bright : <a href="https://github.com/olivernn/lunr.js" target="_blank" rel="noopener">https://github.com/olivernn/lunr.js</a></li><li>does it support Chinese? · Issue #173 · olivernn/lunr.js : <a href="https://github.com/olivernn/lunr.js/issues/173" target="_blank" rel="noopener">https://github.com/olivernn/lunr.js/issues/173</a></li><li>lunr-languages/lunr.ja.js at master · MihaiValentin/lunr-languages : <a href="https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.ja.js" target="_blank" rel="noopener">https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.ja.js</a></li><li>Lunr: A bit like Solr, but much smaller and not as bright : <a href="https://lunrjs.com/" target="_blank" rel="noopener">https://lunrjs.com/</a></li><li>为 lunr.js 添加中文支持 | 阿阿燃 : <a href="http://linfuyan.com/add-chinese-support-to-lunrjs/" target="_blank" rel="noopener">http://linfuyan.com/add-chinese-support-to-lunrjs/</a></li><li>linfuyan/lunr.js: 添加中文支持的 lunr.js。无分词版本 un-participle 分支，分词版本 participle 分支 : <a href="https://github.com/linfuyan/lunr.js" target="_blank" rel="noopener">https://github.com/linfuyan/lunr.js</a></li><li>nandy007/lunr.js: 支持chinese中文搜索的lunr.js : <a href="https://github.com/nandy007/lunr.js" target="_blank" rel="noopener">https://github.com/nandy007/lunr.js</a></li><li>codepiano/lunr.js: support Chinese. 添加中文支持，使用一个nodejs库来分词，在前端使用时需要先dump索引文件，在前端引用 : <a href="https://github.com/codepiano/lunr.js" target="_blank" rel="noopener">https://github.com/codepiano/lunr.js</a></li><li>lunr-languages/lunr.ja.js at master · MihaiValentin/lunr-languages : <a href="https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.ja.js" target="_blank" rel="noopener">https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.ja.js</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于 hexo-theme-doc主题无法实现中文搜索，更新build json 有关代码，实现中文搜索功能。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://tonyrenhk.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://tonyrenhk.github.io/tags/hexo/"/>
    
      <category term="hexo-theme-doc" scheme="http://tonyrenhk.github.io/tags/hexo-theme-doc/"/>
    
  </entry>
  
  <entry>
    <title>Trailhead学习:Lightning Flow</title>
    <link href="http://tonyrenhk.github.io/2018/11/26/2018-11-26-Lightning-Flow/"/>
    <id>http://tonyrenhk.github.io/2018/11/26/2018-11-26-Lightning-Flow/</id>
    <published>2018-11-25T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>Trailhead学习：Data Integration Specialist Superbadge中的Lightning Flow章节。</p><a id="more"></a><h1 id="Choose-the-Right-Automation-Tool"><a href="#Choose-the-Right-Automation-Tool" class="headerlink" title="Choose the Right Automation Tool"></a>Choose the Right Automation Tool</h1><p>这里解析Data Integration Specialist Superbadge中的Lightning Flow章节的’选择正确的自动化工具’(Choose the Right Automation Tool)，相关链接如下： </p><p><a href="https://trailhead.salesforce.com/content/learn/modules/business_process_automation/process_whichtool" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/business_process_automation/process_whichtool</a> </p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>Lightning Flow和Cloud Flow Designer，还有Process Builder有什么区别呢？ </p><ul><li><p>Lightning Flow 是产品的名字 </p></li><li><p>Process Builder 和Cloud Flow Designer 是工具的名字 </p></li><li><p>管理员可以用Process Builder制作Process; 可以用Cloud Flow Designer 制作flows. </p></li></ul><p>利用Process Builder 和Cloud Flow Designer，Lightning Flow可以让你实现如下功能：</p><ul><li><p>使用一个页面创建指导教程或向导。 </p></li><li><p>设置自动化任务(tasks)和流程(process)。使用Process Builder或Cloud Flow Designer可以声明业务流程配置逻辑和操作。 如果需要，可以构建自定义Apex代码以实现相关功能。 </p></li><li><p>连接外部系统 </p></li><li><p>为页面和应用添加自动化功能。 </p></li><li><p>可以不断重用之前所见的Process Builder 和Cloud Flow Designer。在Process Builder中，创建一个可调用的流程(invocable process)，以便在其他业务流程中重用该流程的逻辑或操作。在Cloud Flow Designer中，任何flow都可以用作子flow。 </p></li></ul><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>题目</strong>如下： </p><p>1) Which tools are included with the Lightning Flow product? </p><p>A:Lightning Experience and Cloud Flow Designer </p><p>B:Lightning App Builder and Process Builder </p><p>C:Process Builder and Cloud Flow Designer </p><p>D:Process Builder, Cloud Flow Designer, and Approvals </p><p><strong>解析</strong>：题目问的是Lightning Flow产品包含哪些工具？答案是C。 </p><p>2) Which declarative tool would you use for the following use case? Guide customers through the process of troubleshooting issues with your product. </p><p>A) Process Builder </p><p>B)Cloud Flow Designer </p><p>C)Approvals </p><p>D)Apex </p><p><strong>解析</strong>：哪一个工具可以指导客户完成产品问题排查过程。根据上文功能的第一点，答案是B </p><p>3) Which declarative tool would you use for the following use case? When an opportunity’s discount is higher than 40%, notify the CEO via email and request sign-off. Provide a way for the CEO to leave comments. </p><p>A) Process Builder </p><p>B)Cloud Flow Designer </p><p>C)Approvals </p><p>D)Apex </p><p><strong>解析</strong>：如果一个opportunity的折扣是高于40%，需要邮件通知CEO，并且CEO留下意见，很显然，这是通过审批流程实现。所以答案是答案是C </p><p>4)Which declarative tool would you use for the following use case? When the Annual Revenue field exceeds $500,000 on an account, automatically update the Customer Priority field to High. </p><p>A) Process Builder </p><p>B)Cloud Flow Designer </p><p>C)Approvals </p><p>D)Apex </p><p><strong>解析</strong>：当客户的年度收入(Annual Revenue)字段超过500,000美元时，系统会知道将“客户优先级”更新为“高”。根据上文的功能2，可以通过Process Builder可以实现这样逻辑。答案是A。之后的文章会通过实例详细学习如何构建Process Builder。 </p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>答案链接在此，关于Lightning Flow的答题卡，有需要的话可以参考： </p><p><a href="https://quizlet.com/298965518/lightning-flow-flash-cards/" target="_blank" rel="noopener">https://quizlet.com/298965518/lightning-flow-flash-cards/</a> </p><hr><h1 id="Automate-Simple-Business-Processes-with-Process-Builder"><a href="#Automate-Simple-Business-Processes-with-Process-Builder" class="headerlink" title="Automate Simple Business Processes with Process Builder"></a>Automate Simple Business Processes with Process Builder</h1><p>这里解析Data Integration Specialist Superbadge中的Lightning Flow章节的’Process Builder的简单业务逻辑’(Automate Simple Business Processes with Process Builder)，相关链接如下 </p><p><a href="https://trailhead.salesforce.com/content/learn/modules/business_process_automation/process_builder" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/business_process_automation/process_builder</a> </p><h3 id="学习-1"><a href="#学习-1" class="headerlink" title="学习"></a>学习</h3><p>Process Builder是一个点击式工具，可让您轻松自动化if / then业务流程，并在构建时查看流程的图形表示。 </p><p><strong>触发器(trigger)</strong>识别什么时候进程(process)可以运行。 对于记录更改过程，触发器决定哪个对象以及下面什么情况，该进程(process)要监听相关数据变动： </p><ul><li><p>只有当数据是新建的时候 </p></li><li><p>任何时候数据被新建或者更新。 </p></li></ul><p><strong>条件(Criteria)</strong>:决定是否执行该操作。在此条件，管理员可以设置如下： </p><ul><li><p>设置过滤条件。 </p></li><li><p>输入自定义公式(formula)。 与验证规则(validation rules)一样，公式必须解析为true或false。 </p></li><li><p>选择退出标准并始终执行相关操作。 </p></li></ul><p><strong> 操作(Action) </strong>,开发者可以实现如下操作(不完全举例)： </p><ul><li><p>新建数据 </p></li><li><p>更新数据或者其他有关数据 </p></li><li><p>提交审批 </p></li><li><p>发邮件。 </p></li></ul><p>*发 Chatter feed. </p><p>同时，系统设置了三种Process Types，Process Builder可以自动化几种业务流程。 其主要区别在于生命时候触发触发器(trigger)。 </p><p>1）Record Change，数据改变 </p><p>2）Invocable，调用其他Process Builder </p><p>3）Platform Event ，平台事件，收到平台事件消息 </p><p>其中，Lightning Process Builder 相关帮助文档可以参考如下： </p><p><a href="https://help.salesforce.com/articleView?id=process_overview.htm&amp;type=5" target="_blank" rel="noopener">https://help.salesforce.com/articleView?id=process_overview.htm&amp;type=5</a> </p><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>原题题目如下： </p><p>Keep contact addresses in sync with their account’s address </p><p>You’ve been given a requirement to keep contact addresses in sync with the accounts they belong to. Use Process Builder to create a process on the Account object that updates child Contact addresses when an account’s address is updated. </p><p>Challenge Requirements: </p><p>The process can have any name </p><p>The process must have an Update Records action that updates Contact mailing address fields (Street, City, State, Postal Code, Country) when the parent Account shipping address field values are updated </p><p>The process must be active </p><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>题目要求联系人的地址时刻与客户的地址保持一致。具体来说就是当客户的shipping address被更新时候，联系人的mailing address相关字段如Street, City, State, Postal Code, Country)也要被一致更新。 </p><p>这里我们新建一个Process Builder，名字可以为任意名字。 </p><p><img src="/images/LightningFlow/1.png" alt="alt tag"></p><p>然后设置如下几步流程，</p><p><img src="/images/LightningFlow/2.png" alt="alt tag"></p><p>1）选择Account 无论是被更新还是新建时候都执行该流程<br><img src="/images/LightningFlow/3.png" alt="alt tag"><br>2）系统判定Account是否被新建。<br><img src="/images/LightningFlow/4.png" alt="alt tag"><br>3）如果是新建的Account，则新建一个Contact，同时设置相关字段值，令Contact mailing address相关字段等于shipping address相关字段。<br><img src="/images/LightningFlow/5.png" alt="alt tag"><br>4）判断Account是否被update，注意条件选择OR<br><img src="/images/LightningFlow/6.png" alt="alt tag"><br>5）最后，如果Account是更新的话，会同步更新Contact相关字段<br><img src="/images/LightningFlow/7.png" alt="alt tag"><br>最后记得要激活该Process Builder。<br><img src="/images/LightningFlow/8.png" alt="alt tag"></p><h1 id="流-Flow"><a href="#流-Flow" class="headerlink" title="流(Flow)"></a>流(Flow)</h1><p>本章的主题为Guide Users Through Your Business Processes with Cloud Flow Designer，主要学习流(Flow)的制作方法。</p><p>相关链接为：<a href="https://trailhead.salesforce.com/content/learn/modules/business_process_automation/flow" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/business_process_automation/flow</a></p><p>题目如下：</p><p>Guide users through creating a lead<br>Build a flow that creates a lead with user-entered information and uploads a related file for the lead. Then add the flow to a Home page.</p><p>具体要求如下：<br><strong>Challenge Requirements:</strong></p><ul><li>Create a flow:<ul><li>Name: New Lead</li><li>Type: Screen Flow</li></ul></li><li>In the flow, add a screen with these required screen fields.<ul><li>Last Name</li><li>Company Name</li></ul></li><li>In the flow, create a lead record.<ul><li>Use the screen fields to set the lead’s Last Name and Company.</li><li>Store the lead’s ID in a Text variable called leadId.</li></ul></li><li>In the flow, add another screen with a Lightning component screen field.<ul><li>Name the field Upload_File</li><li>Choose the forceContent:fileUpload Lightning component.<br>*Use the leadId variable to set the component’s Related Record ID attribute.</li></ul></li><li>Activate the New Lead flow.</li><li>Create a new Lightning page:<ul><li>Type: Home page</li><li>Label: Process Automation Home</li></ul></li><li>In Process Automation Home, add a Flow component that references the New Lead flow.</li><li>Activate the page and set it as the default Home page.</li></ul><p>题目解析：<br>题目要求开发者建一个流(Flow),并且输入名字和公司名字，同时实现新建一条Lead的数据。<br>同时实现上传文档的功能。而相关上传的文档是储存于Lead的附件。最后，用户可以在Home 的页面使用流(Flow)。</p><p>首先，在流(Flow)里面先新建一个screen。</p><p><img src="/images/LightningFlow/flow-1.jpg" alt="image"></p><p>可以输入名字为screen。<br><img src="/images/LightningFlow/flow-2.jpg" alt="image"></p><p>同时，加上需要用户输入的两个field：’Last Name’ 和’Company Name’:<br><img src="/images/LightningFlow/flow-3.jpg" alt="image"></p><p>新建’Record Create’的模块。</p><p><img src="/images/LightningFlow/flow-4.jpg" alt="image"></p><p>这里需要新建另外一个变量为’leadId’,是生成新的Lead的时候的Id。也就是下一步需要上传附件时候所对应的leadId。</p><p><img src="/images/LightningFlow/flow-5.jpg" alt="image"></p><p>再填加新的上传附件的lightning component。<br><img src="/images/LightningFlow/flow-6.jpg" alt="image"></p><p>设置上传附件的lightning component的变量。<br><img src="/images/LightningFlow/flow-7.jpg" alt="image"></p><p>同时，需要设置整个流(Flow)的开始点，点击screen的右上角的绿色按钮。</p><p><img src="/images/LightningFlow/flow-8.jpg" alt="image"></p><p>整个流(Flow)份三个模块如下：</p><p><img src="/images/LightningFlow/flow-9.jpg" alt="image"></p><p>最后保存整个流(Flow)。<br><img src="/images/LightningFlow/flow-10.jpg" alt="image"></p><p>保存之后需要激活：<br><img src="/images/LightningFlow/flow-11.jpg" alt="image"></p><p>之后，需要在Home 的页面加上该流(Flow)。</p><ul><li>路径： SETUP–&gt; Lightning App Builder–&gt;New</li><li>选择 ‘Home Page’</li><li>点击’Next’</li><li>Label 打上’Process Automation Home’</li><li>点击’Finish’</li><li>在左边选择’Flow’拖至home页面，</li></ul><p><img src="/images/LightningFlow/flow-12.jpg" alt="image"></p><p>就这样，解锁了：<br><img src="/images/LightningFlow/flow-13.jpg" alt="image"></p><h1 id="Combine-the-Power-of-Process-Builder-and-Cloud-Flow-Designer"><a href="#Combine-the-Power-of-Process-Builder-and-Cloud-Flow-Designer" class="headerlink" title="Combine the Power of Process Builder and Cloud Flow Designer"></a>Combine the Power of Process Builder and Cloud Flow Designer</h1><p>接下来的主题是’Combine the Power of Process Builder and Cloud Flow Designer’,讲的是如何将进程生成器(Process Builder)和流(Flow)紧密结合起来。</p><p>链接如下: <a href="https://trailhead.salesforce.com/content/learn/modules/business_process_automation/business_process_automation_combined" target="_blank" rel="noopener">https://trailhead.salesforce.com/content/learn/modules/business_process_automation/business_process_automation_combined</a></p><p>进程生成器(Process Builder)不能解决所有的自动化流程的问题。</p><ul><li>发布到社区</li><li>提交审批</li><li>删除数据</li><li>新建一系列数据，并使之相互关联</li><li>实施复杂的业务逻辑</li></ul><p>管理员或者开发者不必在另一个工具中重建整个业务逻辑。 在流(Flow)中配置更复杂的功能，然后向进程生成器(Process Builder)添加流(Flow)操作。 如果流(Flow)也无法满足您的实际业务需求，您或许可以要求有关开发人员可以编写Apex来执行此操作。 同时通过您的流(Flow)来添加Apex操作。</p><p>假如，现在有一个需求是需求是：更新closed won的业务机会(opportunity)。由于closed won的业务机会(opportunity)已经完结，需要复制现有的业务机会(opportunity)。 那么该如何实现呢？ 开发人员可以通过进程生成器(Process Builder)复制一个现在已经处于closed won阶段的业务机会(opportunity)，但是如果想复制产品(products)并且将其与新的业务机会(opportunity)产生连接。</p><p>在进程生成器(Process Builder)中，我们不能获取新建数据的ID，并用于其他用户。但是我们可以在流(Flow)中应用。对于上述的需求，开发人员可以新建一个流(Flow)，复制业务机会(opportunity)和其对应的产品(products)。同时新建一个进程生成器(Process Builder)当业务机会(opportunity)时处于closed won阶段，自动调用该流(Flow)。</p><p>对于流(Flow)的步骤可以如下：</p><ul><li>复制业务机会(opportunity)</li><li>复制其对应的产品(products)</li><li>连接新建的产品(products)和新建的业务机会(opportunity)</li><li>下面来做题目。题目如下：</li></ul><p><em>题目1.</em> An sObject variable can store A）A single value</p><p>B）A set of field values for a single record</p><p>C）Multiple values of the same data type</p><p>D）A set of field values for multiple records that have the same object</p><p>解析： 问题是一个sObject可以储存什么。B</p><p><em>题目2.</em> For which use case is it appropriate to combine a process and a flow? </p><p>A）Post to an internal Chatter group.</p><p>B）Clone a record and its children.</p><p>C）Delete a related record.</p><p>D）B and C</p><p>解析：什么情况需要结合进程生成器(Process Builder)和流(Flow)操作，根据上面的案例，需要复制master-detail的数据，需要用到答案是D。</p><p><em>题目3.</em>Inside a loop, you should avoid:</p><p>A）Executing actions, like creating or updating records.</p><p>B）Assigning new values to variables.</p><p>C）Displaying data to the user.</p><p>D）esting another loop.</p><p>解析：在一个循环里面，开发者需要避免的是A执行新建或者更新数据的操作。切记，除非开发人员已经确认该循环只执行有限数量次数，任何DML操作都得在循环外面执行。</p><p>就这样解锁了。  </p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Flow-1.jpg" alt="image"></p><h1 id="Customize-How-Records-Get-Approved-with-Approvals"><a href="#Customize-How-Records-Get-Approved-with-Approvals" class="headerlink" title="Customize How Records Get Approved with Approvals"></a>Customize How Records Get Approved with Approvals</h1><p>本章节讲述的是批准过程(Approval Process)。相关链接如下：</p><p><a href="https://trailhead.salesforce.com/en/content/learn/modules/business_process_automation/approvals" target="_blank" rel="noopener">https://trailhead.salesforce.com/en/content/learn/modules/business_process_automation/approvals</a></p><p><strong>挑战</strong>如下：</p><p><strong>Make sure that prospect amounts are approved before they’re converted to customers</strong></p><p>Due to local regulation, new customers must be approved by the legal team. When a user creates an account that has a type of Prospect, they manually submit it for approval by clicking Submit for Approval on the account. The record is evaluated only if its type is Prospect and there are more than 500 employees. When the account enters the approval process, Type gets set to Pending and the record is locked. If approved, Type gets set to Customer and the record is unlocked. If not approved, Type gets set back to Prospect and the record is unlocked.</p><p><strong>Before You Start</strong><br>Verify that the Account object’s Type field has the following picklist values: Prospect, Customer, Pending. </p><p><strong>Challenge Requirements:</strong>‘</p><ul><li>Use the Jump Start Wizard to create a new approval process for the <strong>Account</strong> object</li><li>The approval process name must be <strong>Approve New Account</strong></li><li>Pick any email template for approval assignment email template</li><li>For Entry Criteria, use the following criteria.<ul><li><strong>Account: Type</strong> equals <strong>Prospect</strong></li><li><strong>Account: Employees</strong> greater than <strong>500</strong></li></ul></li><li>For Approver, choose <strong>Automatically assign to approver(s)</strong> and assign yourself as the approver</li><li>Click <strong>View Approval Process Detail Page</strong> and finish off the remaining requirements.<ul><li>In the Initial Submission section, add a Field Update action that updates the Account: Type field to Pending. The name of the action must be <strong>Account Type To Pending</strong>.</li><li>In the Final Approval Actions, add a Field Update action that updates the Account: Type field to Customer. The name of the action must be <strong>Account Type To Customer</strong>.</li><li>In the Final Approval Actions section, edit the Record Lock action to unlock the record</li><li>In the Final Rejection Actions section, add a Field Update action that updates the Account: Type field to Prospect. The name of the action must be <strong>Account Type To Prospect</strong></li></ul></li><li>Activate the approval process</li></ul><p><strong>题目解析</strong></p><p>题目要求开发者在客户(Account)对象下新建一个批准过程(Approval Process)，由于法律的需要，在成为真正客户前需要提交法务部门审批，当审批通过后，该客户(Account)会真正成为客户。</p><p>开始前需要确认Account 对象中的Type字段需要有Prospect, Customer, Pending这个三个选项，这三个状态在批准过程(Approval Process)会用到。</p><p>在SETUP里面输入Approval Processes，然后找到对应到的Acount对象。选择Jump Start Wizard新建一个批准过程(Approval Process)。<br>其中，名字必须设置为Approve New Account。项目条件可以设置为(客户: 类型等于Prospect) 和 (客户: 员工大于500)。</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Flow-2.jpg" alt="image"></p><p>在“初始提交操作”中，需要添加新的字段更新，将客户: 类型更新为Pending状态。</p><p>在“最终批准操作”中，需要添加新的字段更新，将客户: 类型更新为Customer状态，同时在‘记录锁定’中选择“取消锁定可以进行编辑”。</p><p>在“最终拒绝操作”中，需要添加新的字段更新，将客户: 类型更新为原有的状态Prospect。</p><p>最终流程如下：<br><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Flow-3.jpg" alt="image"></p><p>批准分配电子邮件模板可以任意选择一个。批准人可以设置为自己。</p><p>然后点击“启用”按钮，就这样整个批准过程就激活了。然后，我们就这样解锁了Lightning Flow模块：</p><p><img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Blog/Lightning-Flow-4.jpg" alt="image"></p><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><p>相关参考链接： </p><ul><li><p><a href="https://salesforce.stackexchange.com/questions/134054/process-builder-create-a-child-contact-and-keep-it-in-sync-with-parent-account" target="_blank" rel="noopener">https://salesforce.stackexchange.com/questions/134054/process-builder-create-a-child-contact-and-keep-it-in-sync-with-parent-account</a> </p></li><li><p><a href="https://technologyflows.com/2015/03/01/process-builder-update-contact-address-from-account/" target="_blank" rel="noopener">https://technologyflows.com/2015/03/01/process-builder-update-contact-address-from-account/</a></p></li><li><p><a href="https://www.youtube.com/watch?v=EhnuJ32Oq6o" target="_blank" rel="noopener">https://www.youtube.com/watch?v=EhnuJ32Oq6o</a></p></li></ul><ul><li><p><a href="https://www.youtube.com/watch?v=zBFPcFZ1zSQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=zBFPcFZ1zSQ</a></p></li><li><p><a href="https://www.youtube.com/watch?v=sjOWbErHvtY" target="_blank" rel="noopener">https://www.youtube.com/watch?v=sjOWbErHvtY</a></p></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Trailhead学习：Data Integration Specialist Superbadge中的Lightning Flow章节。&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
      <category term="Trailhead" scheme="http://tonyrenhk.github.io/tags/Trailhead/"/>
    
      <category term="开发者II考试" scheme="http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"/>
    
      <category term="Lightning" scheme="http://tonyrenhk.github.io/tags/Lightning/"/>
    
  </entry>
  
  <entry>
    <title>全民K歌小外挂：自动评论插件</title>
    <link href="http://tonyrenhk.github.io/2018/11/25/2018-11-25-WesingPlugins/"/>
    <id>http://tonyrenhk.github.io/2018/11/25/2018-11-25-WesingPlugins/</id>
    <published>2018-11-24T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>全民K歌自动评论插件实现自动刷分，自动升级。再也不用手动刷评论了。</p><a id="more"></a><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>全民K歌每评论一次，可以让对方积分分数增加，由于人手手动评论过于费事，所以用了Python自动评论实现自动刷分。这里需要在PC端安装Python和全民K歌桌面版。同时安装pyautogui库。</p><h2 id="导入函数"><a href="#导入函数" class="headerlink" title="导入函数"></a>导入函数</h2><p>导入函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautogui, sys </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br></pre></td></tr></table></figure><h2 id="设置评论内容"><a href="#设置评论内容" class="headerlink" title="设置评论内容"></a>设置评论内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CommentList = [<span class="string">'Good!!!'</span>, <span class="string">'Nice'</span>, <span class="string">'Wonderful！！！'</span>,<span class="string">'[em]e7150[/em][em]e7150[/em][em]e7150[/em]'</span>, </span><br><span class="line"></span><br><span class="line">               <span class="string">'Name[em]e179[/em][em]e179[/em][em]e179[/em][em]e179[/em]'</span>, </span><br><span class="line"></span><br><span class="line">               <span class="string">'[em]e163[/em][em]e163[/em][em]e163[/em]'</span>, </span><br><span class="line"></span><br><span class="line">               <span class="string">'[em]e7054[/em][em]e7054[/em][em]e7054[/em][em]e7054[/em]'</span>, </span><br><span class="line"></span><br><span class="line">               <span class="string">'[em]e7038[/em][em]e7038[/em][em]e7038[/em]！！！'</span>, </span><br><span class="line"></span><br><span class="line">               <span class="string">'Good!!!Wonderful!'</span>, <span class="string">'[em]e142[/em]！！[em]e142[/em]！'</span>]</span><br></pre></td></tr></table></figure><h2 id="刷评论"><a href="#刷评论" class="headerlink" title="刷评论"></a>刷评论</h2><p>设置循环一千次刷评论。注意这里moveTo是鼠标在屏幕中的位置，可以调整。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>): </span><br><span class="line"></span><br><span class="line">    pyautogui.moveTo( <span class="number">1200</span>, <span class="number">340</span>, <span class="number">2</span>) </span><br><span class="line">    pyautogui.click() </span><br><span class="line">    pyautogui.typewrite(CommentList[randint(<span class="number">0</span>, <span class="number">9</span>)]) </span><br><span class="line">    pyautogui.press(<span class="string">'enter'</span>) </span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>由于全民K歌不能不间断一直评论，所以加了睡眠3秒的等待时间，系统会等3秒之后继续评论。就这样，我们轻轻松松把全民K歌等级推上了17级。</p><p> <img src="https://raw.githubusercontent.com/TonyRenHK/Store_Picture/master/Website/webwxgetmsgimg.jpg" height="260" width="416"></p><p>同样原理，可以实现各种刷评论功能。本方法只用于学习用途。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;全民K歌自动评论插件实现自动刷分，自动升级。再也不用手动刷评论了。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://tonyrenhk.github.io/categories/Python/"/>
    
    
      <category term="自动" scheme="http://tonyrenhk.github.io/tags/%E8%87%AA%E5%8A%A8/"/>
    
      <category term="Python" scheme="http://tonyrenhk.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Salesforce Apex 学习笔记</title>
    <link href="http://tonyrenhk.github.io/2018/11/25/2018-02-01-SalesforceApexStudy/"/>
    <id>http://tonyrenhk.github.io/2018/11/25/2018-02-01-SalesforceApexStudy/</id>
    <published>2018-11-24T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>Salesforce Apex tips</p><a id="more"></a><h2 id="如何检查数据的Access-Right？"><a href="#如何检查数据的Access-Right？" class="headerlink" title="如何检查数据的Access Right？"></a>如何检查数据的Access Right？</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT RecordId,HasReadAccess FROM UserRecordAccess WHERE UserId = :userInfo.getUserId() AND RecordId = <span class="string">'a1H4E000000BYJ1UAO'</span></span><br></pre></td></tr></table></figure><h2 id="如何得到月尾的最后一天？"><a href="#如何得到月尾的最后一天？" class="headerlink" title="如何得到月尾的最后一天？"></a>如何得到月尾的最后一天？</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Date selectedDate = Date.today().addDays(<span class="number">4</span>);</span><br><span class="line">Date firstDate = selectedDate.toStartOfMonth();</span><br><span class="line">p.Date__c =firstDate.addDays(date.daysInMonth(selectedDate.year() , selectedDate.month())  - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="把string-改为-date"><a href="#把string-改为-date" class="headerlink" title="把string 改为 date"></a>把string 改为 date</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Date x = Date.valueOf(<span class="string">'2015-8-11'</span>); </span><br><span class="line">system.debug(<span class="string">'Now '</span>+ x );</span><br></pre></td></tr></table></figure><h2 id="可编辑字段-一"><a href="#可编辑字段-一" class="headerlink" title="可编辑字段(一)"></a>可编辑字段(一)</h2><p>如何获得对象中的可编辑字段<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Schema.SObjectField&gt; map = Schema.SObjectType.Custom1__c.fields.getMap();</span><br><span class="line"><span class="keyword">for</span>(String fieldName : map.keySet()) &#123;</span><br><span class="line">   <span class="keyword">if</span>(map.get(fieldName).getDescribe().isUpdateable()) &#123;</span><br><span class="line">       custom1.put(fieldName , <span class="string">'some value'</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="可编辑字段-二"><a href="#可编辑字段-二" class="headerlink" title="可编辑字段(二)"></a>可编辑字段(二)</h2><p>下面function获得对象中的所有可编辑字段<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetUpdateableField</span><span class="params">(String ObjectName)</span></span>&#123;</span><br><span class="line">    String QueryStr= <span class="string">'select '</span>;</span><br><span class="line">    String[] types = New List&lt;String&gt;();</span><br><span class="line">    types.add(ObjectName);</span><br><span class="line">    Schema.DescribeSobjectResult[] results = Schema.describeSObjects(types);</span><br><span class="line">    <span class="keyword">for</span>(string apiName : results[<span class="number">0</span>].fields.getMap().keySet())&#123;</span><br><span class="line">        Schema.SObjectField field = results[<span class="number">0</span>].fields.getMap().get(apiName);</span><br><span class="line">        Schema.DisplayType FldType = field.getDescribe().getType();</span><br><span class="line">        <span class="comment">//system.debug('apiName : '+ apiName + ' || FldType:'+FldType + '|| is editable : '+field.getDescribe().isUpdateable() );</span></span><br><span class="line">        <span class="keyword">if</span>(field.getDescribe().isUpdateable())&#123;</span><br><span class="line">            QueryStr += apiName + <span class="string">','</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    QueryStr = QueryStr.subString(<span class="number">0</span>, QueryStr.length() - <span class="number">1</span>) + <span class="string">' from '</span>+ObjectName;</span><br><span class="line">    <span class="keyword">return</span> QueryStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="常用代码注释模板"><a href="#常用代码注释模板" class="headerlink" title="常用代码注释模板"></a>常用代码注释模板</h2><p>如下提供几个模板仅供参考：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">+-----------------------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="comment">| Author                | Your name                                                             </span></span><br><span class="line"><span class="comment">+-----------------------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="comment">| Description           | For what?                                                                            </span></span><br><span class="line"><span class="comment">|                       |                                                                                    </span></span><br><span class="line"><span class="comment">|     - Object(s)       | table name                                                                                </span></span><br><span class="line"><span class="comment">|     - Description     | what you are doing here?                              </span></span><br><span class="line"><span class="comment">+-----------------------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="comment">| Creation Date         | 23/12/2016                                                                        </span></span><br><span class="line"><span class="comment">+-----------------------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="comment">| Modifications         | 2/2/2017 who - doing what?                                                                                </span></span><br><span class="line"><span class="comment">+-----------------------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="comment">| Governor informations |                                                                                    </span></span><br><span class="line"><span class="comment">+-----------------------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@name</span> 名字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@abstract</span> 申明变量/类/方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> 指明这个变量、类、函数/方法的存取权限</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 函数作者的名字和邮箱地址</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@category</span>  组织packages</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@copyright</span> 指明版权信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@const</span> 指明常量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@deprecate</span> 指明不推荐或者是废弃的信息MyEclipse编码设置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> 示例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@exclude</span> 指明当前的注释将不进行分析，不出现在文挡中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@final</span> 指明这是一个最终的类、方法、属性，禁止派生、修改。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@global</span> 指明在此函数中引用的全局变量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@include</span> 指明包含的文件的信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> 定义在线连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module</span> 定义归属的模块信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@modulegroup</span> 定义归属的模块组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> 定义归属的包的信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> 定义函数或者方法的参数信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 定义函数或者方法的返回信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> 定义需要参考的函数、变量，并加入相应的超级连接。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 指明该api函数或者方法是从哪个版本开始引入的</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@static</span> 指明变量、类、函数是静态的。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> 指明此函数可能抛出的错误异常,极其发生的情况</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> 定义说明变量/属性。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 定义版本信息</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> / *</span><br><span class="line">* 文件名：[文件名]</span><br><span class="line">* 作者：〈版权〉</span><br><span class="line">* 描述：〈描述〉</span><br><span class="line">* 修改人：〈修改人〉</span><br><span class="line">* 修改时间：YYYY-MM-DD</span><br><span class="line">* 修改内容：〈修改内容〉</span><br><span class="line">*/</span><br><span class="line">``` </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">```Java </span><br><span class="line"> / *</span><br><span class="line">* 文件名：LogManager.java</span><br><span class="line">* 版权：Copyright <span class="number">2000</span>-<span class="number">2001</span> Huawei Tech. Co. Ltd.  All Rights Reserved.</span><br><span class="line">* 描述： WIN V200R002 WEBSMAP 通用日志系统</span><br><span class="line">* 修改人：张三</span><br><span class="line">* 修改时间：<span class="number">2001</span>-<span class="number">02</span>-<span class="number">16</span></span><br><span class="line">* 修改内容：新增</span><br><span class="line">* 修改人：李四</span><br><span class="line">* 修改时间：<span class="number">2001</span>-<span class="number">02</span>-<span class="number">26</span></span><br><span class="line">* 修改内容：。。。。。。</span><br><span class="line">* 修改人：王五</span><br><span class="line">* 修改时间：<span class="number">2001</span>-<span class="number">03</span>-<span class="number">25</span></span><br><span class="line">* 修改内容：。。。。。。</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h2 id="获得字段信息"><a href="#获得字段信息" class="headerlink" title="获得字段信息"></a>获得字段信息</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> Map &lt; String, Schema.SObjectType &gt; schemaMap = Schema.getGlobalDescribe();</span><br><span class="line"></span><br><span class="line">Schema.SObjectType ObjectSchema = schemaMap.get(<span class="string">'Account_Interface__c'</span>);</span><br><span class="line"></span><br><span class="line">Map &lt; String, Schema.SObjectField &gt; fieldMap = ObjectSchema.getDescribe().fields.getMap();</span><br><span class="line"><span class="keyword">for</span> (String fieldName: fieldMap.keySet()) &#123;</span><br><span class="line">    String fName = fieldMap.get(fieldName).getDescribe().getLabel();</span><br><span class="line">    system.debug(<span class="string">'|| fName:'</span>+fName);</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">## 获得字段类型</span><br><span class="line"> </span><br><span class="line">```Java</span><br><span class="line">Map &lt; String, Schema.SObjectType &gt; schemaMap = Schema.getGlobalDescribe();</span><br><span class="line">Schema.SObjectType ObjectSchema = schemaMap.get(<span class="string">'Account_Interface__c'</span>);</span><br><span class="line"></span><br><span class="line">Map &lt; String, Schema.SObjectField &gt; fieldMap = ObjectSchema.getDescribe().fields.getMap();</span><br><span class="line"><span class="keyword">for</span> (String apiName: fieldMap.keySet()) &#123;</span><br><span class="line">    Schema.SObjectField field = fieldMap.get(apiName);</span><br><span class="line">    Schema.DisplayType FldType = field.getDescribe().getType();</span><br><span class="line">    system.debug(FldType);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获得某一个对象的字段类型"><a href="#获得某一个对象的字段类型" class="headerlink" title="获得某一个对象的字段类型"></a>获得某一个对象的字段类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetFieldType</span><span class="params">(Schema.SObjectType ObjectSchema , String FieldAPIName)</span></span>&#123;</span><br><span class="line">    Map &lt; String, Schema.SObjectField &gt; fieldMap = ObjectSchema.getDescribe().fields.getMap();</span><br><span class="line">    system.debug(<span class="string">'FieldAPIName : '</span>+FieldAPIName);</span><br><span class="line">    Schema.SObjectField field = fieldMap.get(FieldAPIName.toLowercase());</span><br><span class="line">    Schema.DisplayType fName = field.getDescribe().getType();</span><br><span class="line">    <span class="keyword">return</span> String.valueOf(fName);</span><br><span class="line">&#125;</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 动态更新Sobject</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dynamicUpsert</span><span class="params">(List&lt;SObject&gt; records, SObjectType sObjectType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sObjectType != <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        String listType = <span class="string">'List&lt;'</span> + sObjectType + <span class="string">'&gt;'</span>;</span><br><span class="line">        List&lt;SObject&gt; castRecords = (List&lt;SObject&gt;)Type.forName(listType).newInstance();</span><br><span class="line">        castRecords.addAll(records);</span><br><span class="line">        upsert castRecords;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```   </span><br><span class="line">This also works with Database.upsert <span class="keyword">for</span> the following signatures:</span><br><span class="line">Database.upsert(List&lt;SObject&gt; records)</span><br><span class="line">Database.upsert(List&lt;SObject&gt; records, SObjectField externalIdField)</span><br><span class="line">Database.upsert(List&lt;SObject&gt; records, Boolean allOrNone)</span><br><span class="line">It does not work <span class="keyword">for</span> the following signature because it causes a compile fail:</span><br><span class="line">Database.upsert(List&lt;SObject&gt; records, SObjectField externalIdField, Boolean allOrNone)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 新建File</span><br><span class="line"></span><br><span class="line">```Java</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UploadIntoFile</span><span class="params">(Blob requestBody,String FileName)</span></span>&#123; </span><br><span class="line">        <span class="keyword">try</span>&#123; <span class="comment">// select id,Title  from ContentDocument</span></span><br><span class="line">            <span class="comment">//String yourFiles = FileBody;//Lets assume this is your binary string of the files';</span></span><br><span class="line">            datetime myDateTime = datetime.now();</span><br><span class="line">            ContentVersion conVer = <span class="keyword">new</span> ContentVersion();</span><br><span class="line">            conVer.ContentLocation = <span class="string">'S'</span>; <span class="comment">// S specify this document is in SF, use E for external files</span></span><br><span class="line">            conVer.PathOnClient = <span class="string">'File.txt'</span>; <span class="comment">// The files name, extension is very important here which will help the file in preview.</span></span><br><span class="line">            conVer.Title = FileName + String.valueOf(myDateTime) ; <span class="comment">// Display name of the files</span></span><br><span class="line">            conVer.VersionData = requestBody;<span class="comment">//EncodingUtil.base64Decode(yourFiles); // converting your binary string to Blog</span></span><br><span class="line">            insert conVer;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(dmlException e)&#123;</span><br><span class="line">            system.debug(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Reference : <a href="https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_objects_contentdocument.htm" target="_blank" rel="noopener">https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_objects_contentdocument.htm</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ContentVersion cont = <span class="keyword">new</span> ContentVersion();</span><br><span class="line"></span><br><span class="line">cont.Title = <span class="string">'Title for this contentVersion'</span>;</span><br><span class="line">cont.PathOnClient = <span class="string">'file_'</span> + Datetime.now().getTime() + <span class="string">'.txt'</span>;</span><br><span class="line">cont.VersionData = Blob.valueOf(<span class="string">'My Content in file_'</span> + Datetime.now().getTime() + <span class="string">'.txt'</span>);</span><br><span class="line">cont.Origin = <span class="string">'H'</span>;</span><br><span class="line"></span><br><span class="line">insert cont;</span><br></pre></td></tr></table></figure><h2 id="SQL-–-gt-List–-gt-Map"><a href="#SQL-–-gt-List–-gt-Map" class="headerlink" title="SQL –&gt;List–&gt; Map"></a>SQL –&gt;List–&gt; Map</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map&lt;id, User&gt; userMap = <span class="keyword">new</span> map&lt;id, User&gt;([select ID,ManagerId,Manager.Email from User where id in : OwnerIdSet]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Salesforce Apex tips&lt;/p&gt;
    
    </summary>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/categories/Salesforce/"/>
    
    
      <category term="Apex" scheme="http://tonyrenhk.github.io/tags/Apex/"/>
    
      <category term="Salesforce" scheme="http://tonyrenhk.github.io/tags/Salesforce/"/>
    
  </entry>
  
  <entry>
    <title>Google App Script 学习</title>
    <link href="http://tonyrenhk.github.io/2018/11/24/2018-11-24-Google-App-Script-Note/"/>
    <id>http://tonyrenhk.github.io/2018/11/24/2018-11-24-Google-App-Script-Note/</id>
    <published>2018-11-23T16:00:00.000Z</published>
    <updated>2019-04-11T09:59:18.461Z</updated>
    
    <content type="html"><![CDATA[<p>Google App Script 是谷歌开发的基于JS的脚本语言，可以广泛应用于Gmail、Maps、Drive、Calendar、Forms等一系列插件中。</p><a id="more"></a><p>如下是在Google App Script开发中的一些总结。</p><h1 id="找文件"><a href="#找文件" class="headerlink" title="找文件"></a>找文件</h1><p>在Google Drive 内，基于文件名需要相关文件，并且取得有关Id。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetFileId</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> files = DriveApp.searchFiles(<span class="string">' title contains "LoginNumber" '</span>);</span><br><span class="line">  <span class="keyword">while</span> (files.hasNext()) &#123;</span><br><span class="line">    <span class="keyword">var</span> spreadsheet = SpreadsheetApp.open(files.next());</span><br><span class="line">    Logger.log(<span class="string">'Found:'</span>+spreadsheet.getId());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Spreadsheet"><a href="#Spreadsheet" class="headerlink" title="Spreadsheet"></a>Spreadsheet</h1><h3 id="获得spreadsheet"><a href="#获得spreadsheet" class="headerlink" title="获得spreadsheet"></a>获得spreadsheet</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spreadsheet = SpreadsheetApp.openById(<span class="string">"YourId"</span>);</span><br></pre></td></tr></table></figure><p>拿到sheet的列表方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sheetList = spreadsheet.getSheets();</span><br></pre></td></tr></table></figure><p>插入新的一些Tab/sheet<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spreadsheet.insertSheet(TabTitle);</span><br></pre></td></tr></table></figure></p><p>在sheet中插入一行：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sheetNewList = spreadsheet.getSheets();</span><br><span class="line">sheetNewList[<span class="number">0</span>].appendRow([<span class="string">"Col1"</span>,<span class="string">"Col2"</span>,<span class="string">"Col3"</span>]);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Google App Script 是谷歌开发的基于JS的脚本语言，可以广泛应用于Gmail、Maps、Drive、Calendar、Forms等一系列插件中。&lt;/p&gt;
    
    </summary>
    
      <category term="Google" scheme="http://tonyrenhk.github.io/categories/Google/"/>
    
    
      <category term="Google" scheme="http://tonyrenhk.github.io/tags/Google/"/>
    
      <category term="Google App Script" scheme="http://tonyrenhk.github.io/tags/Google-App-Script/"/>
    
  </entry>
  
</feed>
